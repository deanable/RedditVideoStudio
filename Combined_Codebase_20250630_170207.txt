
<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\bin\Debug\net9.0\RedditVideoStudio.Application.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.Application/1.0.0": {
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Application.dll": {}
        }
      },
      "Google.Apis/1.70.0": {
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Auth": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "assemblyVersion": "1.69.0.3764",
            "fileVersion": "1.69.0.3764"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Management/7.0.2": {
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        }
      },
      "RedditVideoStudio.Core/1.0.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Core.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Domain.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Shared.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.Application/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "Google.Apis/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "path": "google.apis/1.70.0",
      "hashPath": "google.apis.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Auth/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "path": "google.apis.auth/1.70.0",
      "hashPath": "google.apis.auth.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Core/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "path": "google.apis.core/1.70.0",
      "hashPath": "google.apis.core.1.70.0.nupkg.sha512"
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "hashPath": "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "System.CodeDom/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "path": "system.codedom/7.0.0",
      "hashPath": "system.codedom.7.0.0.nupkg.sha512"
    },
    "System.Management/7.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "path": "system.management/7.0.2",
      "hashPath": "system.management.7.0.2.nupkg.sha512"
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Extensions\StoryboardExtensions.cs">
<![CDATA[
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Application.Extensions
{
    /// <summary>
    /// Provides extension methods for the Storyboard class to add convenient,
    /// higher-level functionality.
    /// </summary>
    public static class StoryboardExtensions
    {
        /// <summary>
        /// Saves all audio tracks from the storyboard's items into a single,
        /// concatenated audio file using the provided FFmpeg service.
        /// </summary>
        /// <param name="storyboard">The storyboard containing the audio items.</param>
        /// <param name="outputPath">The path to save the concatenated audio file.</param>
        /// <param name="ffmpegService">The FFmpeg service to use for concatenation.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        public static async Task SaveConcatenatedAudioAsync(this Storyboard storyboard, string outputPath, IFfmpegService ffmpegService, CancellationToken cancellationToken = default)
        {
            var audioPaths = storyboard.Items
                .Where(i => !string.IsNullOrWhiteSpace(i.AudioPath))
                .Select(i => i.AudioPath!)
                .ToList();

            if (!audioPaths.Any())
            {
                throw new InvalidOperationException("No audio files to concatenate.");
            }

            await ffmpegService.ConcatenateAudioAsync(audioPaths, outputPath, cancellationToken);
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\Debug\net9.0\RedditVideoStudio.Application.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.Application")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.Application")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.Application")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\Debug\net9.0\RedditVideoStudio.Application.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\Debug\net9.0\RedditVideoStudio.Application.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0": {
      "Google.Apis/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.69.0",
          "Google.Apis.Auth": "1.69.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Management/7.0.2": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "compile": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "RedditVideoStudio.Core/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "compile": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        }
      }
    }
  },
  "libraries": {
    "Google.Apis/1.70.0": {
      "sha512": "K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "type": "package",
      "path": "google.apis/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.1.70.0.nupkg.sha512",
        "google.apis.nuspec",
        "lib/net462/Google.Apis.dll",
        "lib/net462/Google.Apis.pdb",
        "lib/net462/Google.Apis.xml",
        "lib/net6.0/Google.Apis.dll",
        "lib/net6.0/Google.Apis.pdb",
        "lib/net6.0/Google.Apis.xml",
        "lib/netstandard2.0/Google.Apis.dll",
        "lib/netstandard2.0/Google.Apis.pdb",
        "lib/netstandard2.0/Google.Apis.xml"
      ]
    },
    "Google.Apis.Auth/1.70.0": {
      "sha512": "2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "type": "package",
      "path": "google.apis.auth/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.auth.1.70.0.nupkg.sha512",
        "google.apis.auth.nuspec",
        "lib/net462/Google.Apis.Auth.dll",
        "lib/net462/Google.Apis.Auth.pdb",
        "lib/net462/Google.Apis.Auth.xml",
        "lib/net6.0/Google.Apis.Auth.dll",
        "lib/net6.0/Google.Apis.Auth.pdb",
        "lib/net6.0/Google.Apis.Auth.xml",
        "lib/netstandard2.0/Google.Apis.Auth.dll",
        "lib/netstandard2.0/Google.Apis.Auth.pdb",
        "lib/netstandard2.0/Google.Apis.Auth.xml"
      ]
    },
    "Google.Apis.Core/1.70.0": {
      "sha512": "R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "type": "package",
      "path": "google.apis.core/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.core.1.70.0.nupkg.sha512",
        "google.apis.core.nuspec",
        "lib/net462/Google.Apis.Core.dll",
        "lib/net462/Google.Apis.Core.pdb",
        "lib/net462/Google.Apis.Core.xml",
        "lib/net6.0/Google.Apis.Core.dll",
        "lib/net6.0/Google.Apis.Core.pdb",
        "lib/net6.0/Google.Apis.Core.xml",
        "lib/netstandard2.0/Google.Apis.Core.dll",
        "lib/netstandard2.0/Google.Apis.Core.pdb",
        "lib/netstandard2.0/Google.Apis.Core.xml"
      ]
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "sha512": "WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "type": "package",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512",
        "google.apis.youtube.v3.nuspec",
        "lib/net462/Google.Apis.YouTube.v3.dll",
        "lib/net462/Google.Apis.YouTube.v3.pdb",
        "lib/net462/Google.Apis.YouTube.v3.xml",
        "lib/net6.0/Google.Apis.YouTube.v3.dll",
        "lib/net6.0/Google.Apis.YouTube.v3.pdb",
        "lib/net6.0/Google.Apis.YouTube.v3.xml",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.dll",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.pdb",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.xml"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "sha512": "0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "sha512": "LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Newtonsoft.Json/13.0.3": {
      "sha512": "HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "type": "package",
      "path": "newtonsoft.json/13.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/net6.0/Newtonsoft.Json.dll",
        "lib/net6.0/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.3.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "System.CodeDom/7.0.0": {
      "sha512": "GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "type": "package",
      "path": "system.codedom/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.CodeDom.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "lib/net462/System.CodeDom.dll",
        "lib/net462/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/net7.0/System.CodeDom.dll",
        "lib/net7.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.7.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Management/7.0.2": {
      "sha512": "/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "type": "package",
      "path": "system.management/7.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Management.targets",
        "lib/net462/_._",
        "lib/net6.0/System.Management.dll",
        "lib/net6.0/System.Management.xml",
        "lib/net7.0/System.Management.dll",
        "lib/net7.0/System.Management.xml",
        "lib/netstandard2.0/System.Management.dll",
        "lib/netstandard2.0/System.Management.xml",
        "runtimes/win/lib/net6.0/System.Management.dll",
        "runtimes/win/lib/net6.0/System.Management.xml",
        "runtimes/win/lib/net7.0/System.Management.dll",
        "runtimes/win/lib/net7.0/System.Management.xml",
        "system.management.7.0.2.nupkg.sha512",
        "system.management.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj",
      "msbuildProject": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj"
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj",
      "msbuildProject": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj"
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj",
      "msbuildProject": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "Google.Apis.YouTube.v3 >= 1.69.0.3764",
      "Microsoft.Extensions.Logging.Abstractions >= 9.0.6",
      "RedditVideoStudio.Core >= 1.0.0",
      "RedditVideoStudio.Shared >= 1.0.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
      "projectName": "RedditVideoStudio.Application",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "Google.Apis.YouTube.v3": {
            "target": "Package",
            "version": "[1.69.0.3764, )"
          },
          "Microsoft.Extensions.Logging.Abstractions": {
            "target": "Package",
            "version": "[9.0.6, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\obj\RedditVideoStudio.Application.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\StoryboardGenerator.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using RedditVideoStudio.Shared.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Application.Services
{
    public class StoryboardGenerator : IStoryboardGenerator
    {
        private readonly ITextToSpeechService _ttsService;
        private readonly IImageService _imageService;
        private readonly IAppConfiguration _appConfig;
        private readonly ILogger<StoryboardGenerator> _logger;

        public StoryboardGenerator(
            ITextToSpeechService ttsService,
            IImageService imageService,
            IAppConfiguration appConfig,
            ILogger<StoryboardGenerator> logger)
        {
            _ttsService = ttsService;
            _imageService = imageService;
            _appConfig = appConfig;
            _logger = logger;
        }

        public async Task<Storyboard> GenerateAsync(
            IEnumerable<string> content,
            string tempPath,
            string segmentName,
            IProgress<ProgressReport> progress,
            CancellationToken cancellationToken)
        {
            // --- THE DEFINITIVE FIX ---
            // A new storyboard is created for EVERY call to this method.
            // This prevents state from bleeding over between segments.
            var storyboard = new Storyboard();

            var audioDir = Path.Combine(tempPath, $"{segmentName}_audio");
            var overlayDir = Path.Combine(tempPath, $"{segmentName}_overlay");
            Directory.CreateDirectory(audioDir);
            Directory.CreateDirectory(overlayDir);

            var maxCharsPerPage = _appConfig.Settings.ImageGeneration.MaxCharactersPerPage;

            var allPages = content
                .SelectMany(textItem => TextUtils.SplitTextIntoPages(TextUtils.SanitizePostContent(textItem), maxCharsPerPage))
                .Select((pageText, index) => (Text: pageText, Index: index))
                .ToList();

            _logger.LogInformation("Generating {PageCount} pages sequentially for segment '\"{SegmentName}\"'.", allPages.Count, segmentName);

            foreach (var page in allPages)
            {
                await ProcessPageAsync(storyboard, page.Text, page.Index, audioDir, overlayDir, segmentName, progress, cancellationToken);
            }

            _logger.LogInformation("Total calculated storyboard duration for segment '\"{SegmentName}\"': {Duration}", segmentName, storyboard.GetNextStartTime());
            _logger.LogInformation("Successfully generated all assets for segment '\"{SegmentName}\"'.", segmentName);
            return storyboard;
        }

        private async Task ProcessPageAsync(Storyboard storyboard, string pageText, int index, string audioDir, string overlayDir, string segmentName, IProgress<ProgressReport> progress, CancellationToken cancellationToken)
        {
            progress.Report(new ProgressReport { Message = $"Processing {segmentName} part {index + 1}..." });

            var audioPath = Path.Combine(audioDir, $"{segmentName}_{index}.mp3");
            var overlayPath = Path.Combine(overlayDir, $"{segmentName}_{index}.png");

            var speechTask = _ttsService.GenerateSpeechAsync(pageText, audioPath, cancellationToken);
            var imageTask = _imageService.GenerateImageFromTextAsync(pageText, overlayPath, cancellationToken);

            await Task.WhenAll(speechTask, imageTask);

            var speechResult = speechTask.Result;
            _logger.LogInformation("Received speech result for page {PageIndex}: Duration = {Duration}, Path = \"{Path}\"", index, speechResult.Duration, speechResult.FilePath);

            var startTime = storyboard.GetNextStartTime();

            _logger.LogInformation("PRE-ADD CHECK for StoryboardItem. Index: {Index}, Calculated StartTime: {StartTime}, SpeechDuration: {Duration}", index, startTime, speechResult.Duration);
            if (startTime.TotalDays > 1)
            {
                throw new InvalidOperationException($"Calculated StartTime '{startTime}' is excessively large, indicating a persistent storyboard state or a build issue. Aborting.");
            }

            storyboard.Items.Add(new StoryboardItem
            {
                ImagePath = overlayPath,
                AudioPath = speechResult.FilePath,
                StartTime = startTime,
                EndTime = startTime + speechResult.Duration
            });
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\VideoComposer.cs">
<![CDATA[
// In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\VideoComposer.cs

using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using RedditVideoStudio.Shared.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Application.Services
{
    public class VideoComposer : IVideoComposer
    {
        private readonly ILogger<VideoComposer> _logger;
        private readonly IRedditService _redditService;
        private readonly IFfmpegService _ffmpegService;
        private readonly IAppConfiguration _appConfig;
        private readonly IStoryboardGenerator _storyboardGenerator;
        private readonly IVideoSegmentGenerator _videoSegmentGenerator;
        private readonly ITempDirectoryFactory _tempDirectoryFactory;

        public VideoComposer(
            ILogger<VideoComposer> logger,
            IRedditService redditService,
            IFfmpegService ffmpegService,
            IAppConfiguration appConfig,
            IStoryboardGenerator storyboardGenerator,
            IVideoSegmentGenerator videoSegmentGenerator,
            ITempDirectoryFactory tempDirectoryFactory)
        {
            _logger = logger;
            _redditService = redditService;
            _ffmpegService = ffmpegService;
            _appConfig = appConfig;
            _storyboardGenerator = storyboardGenerator;
            _videoSegmentGenerator = videoSegmentGenerator;
            _tempDirectoryFactory = tempDirectoryFactory;
        }

        public async Task ComposeVideoAsync(IProgress<ProgressReport> progress, CancellationToken cancellationToken)
        {
            var posts = await _redditService.FetchFullPostDataAsync(cancellationToken);
            var postCount = posts.Count;
            var postIndex = 0;

            foreach (var post in posts)
            {
                cancellationToken.ThrowIfCancellationRequested();
                var overallProgress = new Progress<ProgressReport>(report =>
                {
                    var startPercentage = (int)(((double)postIndex / postCount) * 100);
                    var endPercentage = (int)(((double)(postIndex + 1) / postCount) * 100);
                    var range = endPercentage - startPercentage;
                    var scaledPercentage = startPercentage + (int)((double)report.Percentage / 100 * range);

                    progress.Report(new ProgressReport
                    {
                        Percentage = scaledPercentage,
                        Message = $"Video {postIndex + 1}/{postCount}: {report.Message}"
                    });
                });

                var outputDir = Path.Combine(Directory.GetCurrentDirectory(), "output");
                string baseFilename = FileUtils.SanitizeFileName(post.Title!).Take(40).Aggregate("", (s, c) => s + c);
                string finalVideoPath = Path.Combine(outputDir, $"{baseFilename}_output.mp4");

                await ComposeVideoAsync(post.Title!, post.Comments, overallProgress, cancellationToken, finalVideoPath);
                postIndex++;
            }
        }

        public async Task ComposeVideoAsync(string title, List<string> comments, IProgress<ProgressReport> progress, CancellationToken cancellationToken, string outputPath)
        {
            _logger.LogInformation("Starting video composition for: {Title}", title);
            var clipSettings = _appConfig.Settings.ClipSettings;
            var videoSegments = new List<string>();

            using (var tempDirectory = _tempDirectoryFactory.Create())
            {
                try
                {
                    if (!string.IsNullOrEmpty(clipSettings.IntroPath) && File.Exists(clipSettings.IntroPath) && clipSettings.IntroDuration > 0)
                    {
                        var introPath = await ProcessStaticClip(clipSettings.IntroPath, clipSettings.IntroDuration, "intro", tempDirectory.Path, cancellationToken);
                        videoSegments.Add(introPath);
                    }

                    // Generate Title Segment
                    var titleStoryboard = await _storyboardGenerator.GenerateAsync(new[] { title }, tempDirectory.Path, "Title", progress, cancellationToken);
                    var titleSegmentPath = await _videoSegmentGenerator.GenerateAsync(titleStoryboard, "abstract", tempDirectory.Path, "Title", Path.Combine(tempDirectory.Path, "title_clip.mp4"), progress, cancellationToken);
                    videoSegments.Add(titleSegmentPath);

                    // Process Break Clip
                    string? breakClipPath = null;
                    if (!string.IsNullOrEmpty(clipSettings.BreakClipPath) && File.Exists(clipSettings.BreakClipPath) && clipSettings.BreakClipDuration > 0)
                    {
                        breakClipPath = await ProcessStaticClip(clipSettings.BreakClipPath, clipSettings.BreakClipDuration, "break", tempDirectory.Path, cancellationToken);
                    }

                    // Generate Comment Segments
                    if (comments.Any())
                    {
                        for (int i = 0; i < comments.Count; i++)
                        {
                            cancellationToken.ThrowIfCancellationRequested();

                            if (!string.IsNullOrEmpty(breakClipPath))
                            {
                                videoSegments.Add(breakClipPath);
                                _logger.LogInformation("Added break clip for comment {CommentNumber}", i + 1);
                            }

                            var comment = comments[i];
                            var commentSegmentName = $"Comment_{i + 1}";
                            _logger.LogInformation("Generating video segment for {SegmentName}", commentSegmentName);

                            // --- FINAL CORRECTION ---
                            // Ensure each comment starts with a completely new storyboard to prevent state bleed-over.
                            var commentStoryboard = await _storyboardGenerator.GenerateAsync(new[] { comment }, tempDirectory.Path, commentSegmentName, progress, cancellationToken);
                            var commentSegmentPath = await _videoSegmentGenerator.GenerateAsync(commentStoryboard, "nature", tempDirectory.Path, commentSegmentName, Path.Combine(tempDirectory.Path, $"{commentSegmentName}_clip.mp4"), progress, cancellationToken);
                            videoSegments.Add(commentSegmentPath);
                            // --- END OF FINAL CORRECTION ---
                        }
                    }

                    if (!string.IsNullOrEmpty(clipSettings.OutroPath) && File.Exists(clipSettings.OutroPath) && clipSettings.OutroDuration > 0)
                    {
                        var outroPath = await ProcessStaticClip(clipSettings.OutroPath, clipSettings.OutroDuration, "outro", tempDirectory.Path, cancellationToken);
                        videoSegments.Add(outroPath);
                    }

                    progress.Report(new ProgressReport { Percentage = 95, Message = "Stitching final video..." });
                    await _ffmpegService.ConcatenateVideosAsync(videoSegments, outputPath, cancellationToken);

                    _logger.LogInformation("Final video rendered successfully at: {Path}", outputPath);
                    progress.Report(new ProgressReport { Percentage = 100, Message = "Video composition complete." });
                }
                catch (Exception ex)
                {
                    _logger.LogError(ex, "An error occurred during the video composition pipeline for title: {Title}", title);
                    throw;
                }
            }
        }

        private async Task<string> ProcessStaticClip(string clipPath, double duration, string clipName, string tempPath, CancellationToken cancellationToken)
        {
            var tempClipPath = clipPath;

            if (duration > 0)
            {
                var trimmedPath = Path.Combine(tempPath, $"{clipName}_trimmed.mp4");
                tempClipPath = await _ffmpegService.TrimVideoAsync(clipPath, TimeSpan.FromSeconds(duration), trimmedPath, cancellationToken);
            }

            var finalClipPath = Path.Combine(tempPath, $"{clipName}_final.mp4");
            await _ffmpegService.NormalizeVideoAsync(tempClipPath, finalClipPath, cancellationToken);
            return finalClipPath;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\VideoSegmentGenerator.cs">
<![CDATA[
// In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\VideoSegmentGenerator.cs

using Microsoft.Extensions.Logging;
using RedditVideoStudio.Application.Extensions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using System;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Application.Services
{
    public class VideoSegmentGenerator : IVideoSegmentGenerator
    {
        private readonly IPexelsService _pexelsService;
        private readonly IFfmpegService _ffmpegService;
        private readonly IAudioUtility _audioUtility;
        private readonly ILogger<VideoSegmentGenerator> _logger;

        public VideoSegmentGenerator(
            IPexelsService pexelsService,
            IFfmpegService ffmpegService,
            IAudioUtility audioUtility,
            ILogger<VideoSegmentGenerator> logger)
        {
            _pexelsService = pexelsService;
            _ffmpegService = ffmpegService;
            _audioUtility = audioUtility;
            _logger = logger;
        }

        public async Task<string> GenerateAsync(
            Storyboard storyboard,
            string backgroundQuery,
            string tempPath,
            string segmentName,
            string outputSegmentPath,
            IProgress<ProgressReport> progress,
            CancellationToken cancellationToken)
        {
            progress.Report(new ProgressReport { Message = $"Downloading background for {segmentName}..." });
            string backgroundPath = Path.Combine(tempPath, $"{segmentName}_bg.mp4");
            await _pexelsService.DownloadRandomVideoAsync(backgroundQuery, backgroundPath, cancellationToken);

            TimeSpan videoDuration;
            string? narrationPath = null;

            if (storyboard.Items.Any(item => !string.IsNullOrEmpty(item.AudioPath)))
            {
                var audioPaths = storyboard.Items
                    .Where(i => !string.IsNullOrWhiteSpace(i.AudioPath))
                    .Select(i => i.AudioPath!)
                    .ToList();

                // --- START OF FINAL CORRECTION ---

                if (audioPaths.Count == 1)
                {
                    // If there's only one audio file, skip concatenation and use the source directly.
                    narrationPath = audioPaths.First();
                    _logger.LogInformation("Single audio file found for segment '{segmentName}'. Using source directly: {Path}", segmentName, narrationPath);
                }
                else
                {
                    // If there are multiple files, they must be concatenated.
                    progress.Report(new ProgressReport { Message = $"Combining {audioPaths.Count} audio parts for {segmentName}..." });
                    narrationPath = Path.Combine(tempPath, $"{segmentName}_narration.mp3");
                    await storyboard.SaveConcatenatedAudioAsync(narrationPath, _ffmpegService, cancellationToken);
                    _logger.LogInformation("{Count} audio files for segment '{segmentName}' concatenated into: {Path}", audioPaths.Count, segmentName, narrationPath);
                }

                // Get the single source of truth for duration from the FINAL audio asset.
                videoDuration = await _audioUtility.GetAudioDurationAsync(narrationPath!, cancellationToken);
                _logger.LogInformation("Actual final audio duration for segment '{segmentName}' is {Duration}", segmentName, videoDuration);

                // Rescale the storyboard item timings to perfectly match the final audio duration.
                var storyboardTotalDuration = storyboard.GetNextStartTime();
                if (storyboardTotalDuration.TotalMilliseconds > 0)
                {
                    double scaleFactor = videoDuration.TotalMilliseconds / storyboardTotalDuration.TotalMilliseconds;
                    if (Math.Abs(scaleFactor - 1.0) > 0.01) // Only rescale if there's a meaningful difference (e.g., > 1%)
                    {
                        _logger.LogWarning("Rescaling storyboard timings for segment '{segmentName}' by a factor of {ScaleFactor}", segmentName, scaleFactor);
                        TimeSpan cumulativeDuration = TimeSpan.Zero;
                        foreach (var item in storyboard.Items)
                        {
                            TimeSpan originalDuration = item.EndTime - item.StartTime;
                            TimeSpan scaledDuration = TimeSpan.FromMilliseconds(originalDuration.TotalMilliseconds * scaleFactor);
                            item.StartTime = cumulativeDuration;
                            item.EndTime = cumulativeDuration + scaledDuration;
                            cumulativeDuration = item.EndTime;
                        }
                    }
                }
                // --- END OF FINAL CORRECTION ---
            }
            else
            {
                videoDuration = storyboard.GetNextStartTime();
                _logger.LogWarning("No audio items found for segment {SegmentName}, using storyboard duration: {Duration}", segmentName, videoDuration);
            }

            progress.Report(new ProgressReport { Message = $"Rendering video for {segmentName}..." });

            _logger.LogInformation("Passing duration {Duration} to RenderFinalVideoAsync for segment '\"{SegmentName}\"'.", videoDuration, segmentName);
            await _ffmpegService.RenderFinalVideoAsync(backgroundPath, narrationPath, storyboard, videoDuration, progress, outputSegmentPath, cancellationToken);

            _logger.LogInformation("Successfully generated video segment '\"{SegmentName}\"' at \"{Path}\"", segmentName, outputSegmentPath);
            return outputSegmentPath;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\Services\YouTubeDestination.cs">
<![CDATA[
using Google.Apis.Auth.OAuth2;
using Google.Apis.Services;
using Google.Apis.Upload;
using Google.Apis.YouTube.v3.Data;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using Microsoft.Extensions.Logging;
using Google.Apis.Util.Store;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using System;
using GoogleYouTubeService = Google.Apis.YouTube.v3.YouTubeService;

namespace RedditVideoStudio.Application.Services
{
    public class YouTubeDestination : IVideoDestination
    {
        private readonly IAppConfiguration _appConfiguration;
        private readonly ILogger<YouTubeDestination> _logger;
        private UserCredential? _credential;

        public YouTubeDestination(IAppConfiguration appConfiguration, ILogger<YouTubeDestination> logger)
        {
            _appConfiguration = appConfiguration;
            _logger = logger;
        }

        public string Name => "YouTube";
        public bool IsAuthenticated => _credential != null;

        public async Task AuthenticateAsync(CancellationToken cancellationToken = default)
        {
            var secrets = await _appConfiguration.GetYouTubeSecretsAsync(cancellationToken);
            _credential = await GoogleWebAuthorizationBroker.AuthorizeAsync(
                secrets,
                new[] { GoogleYouTubeService.Scope.YoutubeUpload },
                "user",
                cancellationToken,
                new FileDataStore("YouTube.Api.Auth.Store", true));
        }

        public Task SignOutAsync()
        {
            _credential = null;
            return Task.CompletedTask;
        }

        public async Task UploadVideoAsync(string videoPath, VideoDetails videoDetails, CancellationToken cancellationToken = default)
        {
            if (!IsAuthenticated || _credential == null)
            {
                throw new InvalidOperationException("Cannot upload video: Not authenticated with YouTube.");
            }

            var youtubeService = new GoogleYouTubeService(new BaseClientService.Initializer()
            {
                HttpClientInitializer = _credential,
                ApplicationName = "RedditVideoStudio"
            });

            var video = new Video
            {
                Snippet = new VideoSnippet
                {
                    Title = videoDetails.Title,
                    Description = videoDetails.Description,
                    Tags = videoDetails.Tags,
                    CategoryId = "20",
                },
                Status = new VideoStatus
                {
                    PrivacyStatus = videoDetails.IsPrivate ? "private" : "public"
                }
            };

            using var fileStream = new FileStream(videoPath, FileMode.Open);
            var videosInsertRequest = youtubeService.Videos.Insert(video, "snippet,status", fileStream, "video/*");
            await videosInsertRequest.UploadAsync(cancellationToken);
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\ApplicationAssemblyReference.cs">
<![CDATA[
namespace RedditVideoStudio.Application
{
    /// <summary>
    /// An empty class used to get a reference to the Application assembly for MediatR registration.
    /// </summary>
    public class ApplicationAssemblyReference { }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Application\RedditVideoStudio.Application.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Apis.YouTube.v3" Version="1.69.0.3764" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.6" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RedditVideoStudio.Core\RedditVideoStudio.Core.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj" />
  </ItemGroup>

</Project>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\bin\Debug\net9.0\RedditVideoStudio.Core.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.Core/1.0.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Core.dll": {}
        }
      },
      "Google.Apis/1.70.0": {
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Management/7.0.2": {
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Domain.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Shared.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "Google.Apis/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "path": "google.apis/1.70.0",
      "hashPath": "google.apis.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Auth/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "path": "google.apis.auth/1.70.0",
      "hashPath": "google.apis.auth.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Core/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "path": "google.apis.core/1.70.0",
      "hashPath": "google.apis.core.1.70.0.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "System.CodeDom/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "path": "system.codedom/7.0.0",
      "hashPath": "system.codedom.7.0.0.nupkg.sha512"
    },
    "System.Management/7.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "path": "system.management/7.0.2",
      "hashPath": "system.management.7.0.2.nupkg.sha512"
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\ApiException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Base exception for API-related errors.
    /// </summary>
    public class ApiException : Exception
    {
        public ApiException(string message) : base(message) { }
        public ApiException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\AppConfigurationException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur during the configuration process,
    /// such as failing to load settings from the registry.
    /// </summary>
    public class AppConfigurationException : Exception
    {
        public AppConfigurationException(string message) : base(message) { }
        public AppConfigurationException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\ElevenLabsApiException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur while interacting with the ElevenLabs API.
    /// </summary>
    public class ElevenLabsApiException : ApiException
    {
        public ElevenLabsApiException(string message) : base(message) { }
        public ElevenLabsApiException(string message, Exception innerException) : base(message, innerException) { }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\FfmpegException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur during the execution of an FFmpeg process.
    /// This exception includes the exit code and any captured error output from FFmpeg,
    /// providing detailed information for debugging rendering or processing failures.
    /// </summary>
    public class FfmpegException : Exception
    {
        public int ExitCode { get; }
        public string FfmpegErrorOutput { get; }

        public FfmpegException(string message) : base(message)
        {
            ExitCode = -1;
            FfmpegErrorOutput = string.Empty;
        }

        public FfmpegException(string message, Exception innerException) : base(message, innerException)
        {
            ExitCode = -1;
            FfmpegErrorOutput = string.Empty;
        }

        public FfmpegException(string message, int exitCode, string errorOutput, Exception? innerException)
            : base(message, innerException)
        {
            ExitCode = exitCode;
            FfmpegErrorOutput = errorOutput;
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\PexelsApiException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur while interacting with the Pexels API.
    /// </summary>
    public class PexelsApiException : ApiException
    {
        public PexelsApiException(string message) : base(message) { }
        public PexelsApiException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\RedditApiException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur while interacting with the Reddit API.
    /// </summary>
    public class RedditApiException : ApiException
    {
        public RedditApiException(string message) : base(message) { }
        public RedditApiException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\TtsException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur during Text-to-Speech (TTS) generation.
    /// </summary>
    public class TtsException : Exception
    {
        public TtsException(string message) : base(message) { }
        public TtsException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Exceptions\YouTubeApiException.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Exceptions
{
    /// <summary>
    /// Represents errors that occur while interacting with the YouTube Data API.
    /// </summary>
    public class YouTubeApiException : ApiException
    {
        public YouTubeApiException(string message) : base(message) { }
        public YouTubeApiException(string message, Exception innerException) : base(message, innerException) { }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IAppConfiguration.cs">
<![CDATA[
using Google.Apis.Auth.OAuth2;
using RedditVideoStudio.Shared.Configuration;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    public interface IAppConfiguration
    {
        AppSettings Settings { get; }
        void Save();
        Task<ClientSecrets> GetYouTubeSecretsAsync(CancellationToken cancellationToken = default);
        Task SaveAsync(CancellationToken cancellationToken = default);
        void Reload();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IAudioUtility.cs">
<![CDATA[
using System;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a utility service that provides
    /// audio-related functionalities.
    /// </summary>
    public interface IAudioUtility
    {
        /// <summary>
        /// Asynchronously gets the duration of an audio file.
        /// </summary>
        /// <param name="audioFilePath">The path to the audio file.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The duration of the audio file as a TimeSpan.</returns>
        Task<TimeSpan> GetAudioDurationAsync(string audioFilePath, CancellationToken cancellationToken = default);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IFfmpegService.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that interacts with the FFmpeg command-line tool
    /// to perform video and audio processing tasks.
    /// </summary>
    public interface IFfmpegService
    {
        /// <summary>
        /// Renders a final video by combining a background video, an optional narration audio track,
        /// and a storyboard of image overlays.
        /// </summary>
        // CORRECTED: Added the 'TimeSpan videoDuration' parameter to the contract.
        Task RenderFinalVideoAsync(string backgroundPath, string? narrationPath, Storyboard storyboard, TimeSpan videoDuration, IProgress<ProgressReport> progress, string outputPath, CancellationToken cancellationToken = default);

        /// <summary>
        /// Concatenates multiple audio files into a single audio file.
        /// </summary>
        Task ConcatenateAudioAsync(IEnumerable<string> audioPaths, string outputPath, CancellationToken cancellationToken = default);

        /// <summary>
        /// Asynchronously gets the duration of a video file.
        /// </summary>
        Task<TimeSpan> GetVideoDurationAsync(string videoFilePath, CancellationToken cancellationToken = default);

        /// <summary>
        /// Concatenates multiple video files into a single video file.
        /// </summary>
        Task ConcatenateVideosAsync(IEnumerable<string> videoPaths, string outputPath, CancellationToken cancellationToken = default);

        /// <summary>
        /// Trims a video to a specified duration.
        /// </summary>
        Task<string> TrimVideoAsync(string inputPath, TimeSpan duration, string outputPath, CancellationToken cancellationToken);

        /// <summary>
        /// Checks if a video file contains an audio stream.
        /// </summary>
        Task<bool> HasAudioStreamAsync(string videoPath, CancellationToken cancellationToken);

        /// <summary>
        /// Creates a silent audio file for a given duration.
        /// </summary>
        Task<string> CreateSilentAudioAsync(TimeSpan duration, string outputPath, CancellationToken cancellationToken);

        /// <summary>
        /// Merges a video stream and an audio stream into a single output file without re-encoding the video.
        /// </summary>
        Task<string> MergeAudioAndVideoAsync(string videoPath, string audioPath, string outputPath, CancellationToken cancellationToken);

        /// <summary>
        /// Normalizes a video clip to project standards for codec, resolution, and audio. Adds a silent audio track if one is missing.
        /// </summary>
        Task<string> NormalizeVideoAsync(string inputPath, string outputPath, CancellationToken cancellationToken);

        /// <summary>
        /// Converts a WAV audio file to MP3 format.
        /// </summary>
        Task<string> ConvertWavToMp3Async(string inputWavPath, string outputMp3Path, CancellationToken cancellationToken);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IImageService.cs">
<![CDATA[
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that handles image generation and manipulation.
    /// </summary>
    public interface IImageService
    {
        /// <summary>
        /// Generates an image with the given text rendered onto it.
        /// </summary>
        /// <param name="text">The text to render on the image.</param>
        /// <param name="outputPath">The path to save the generated image.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The path to the generated image.</returns>
        Task<string> GenerateImageFromTextAsync(string text, string outputPath, CancellationToken cancellationToken);

        /// <summary>
        /// Generates a video thumbnail by rendering text over a background image.
        /// </summary>
        /// <param name="backgroundImagePath">The path to the background image for the thumbnail.</param>
        /// <param name="text">The text to render on the thumbnail.</param>
        /// <param name="outputPath">The path to save the generated thumbnail.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The path to the generated thumbnail.</returns>
        Task<string> GenerateThumbnailAsync(string backgroundImagePath, string text, string outputPath, CancellationToken cancellationToken);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IPexelsService.cs">
<![CDATA[
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that interacts with the Pexels API
    /// to download stock photos and videos.
    /// </summary>
    public interface IPexelsService
    {
        /// <summary>
        /// Downloads a random video based on a search query.
        /// </summary>
        /// <param name="query">The search term for the video.</param>
        /// <param name="downloadPath">The local path to save the downloaded video.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The path to the downloaded video file.</returns>
        Task<string> DownloadRandomVideoAsync(string query, string downloadPath, CancellationToken cancellationToken = default);

        /// <summary>
        /// Downloads a random image based on a search query.
        /// </summary>
        /// <param name="query">The search term for the image.</param>
        /// <param name="downloadPath">The local path to save the downloaded image.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The path to the downloaded image file.</returns>
        Task<string> DownloadRandomImageAsync(string query, string downloadPath, CancellationToken cancellationToken = default);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IRedditService.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that fetches post and comment data from the Reddit API.
    /// </summary>
    public interface IRedditService
    {
        /// <summary>
        /// Asynchronously fetches a list of top posts and their comments from a configured subreddit.
        /// </summary>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>A list of RedditPostData objects, each containing post details and comments.</returns>
        Task<List<RedditPostData>> FetchFullPostDataAsync(CancellationToken cancellationToken);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IRegistryService.cs">
<![CDATA[
namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines a contract for a service that interacts with a persistent key-value store,
    /// such as the Windows Registry, for application settings.
    /// This interface MUST be public so it can be accessed by other projects.
    /// </summary>
    public interface IRegistryService
    {
        /// <summary>
        /// Retrieves a value from the store by its key.
        /// </summary>
        /// <param name="key">The key of the value to retrieve.</param>
        /// <returns>The stored value.</returns>
        string GetValue(string key);

        /// <summary>
        /// Stores or updates a key-value pair in the store.
        /// </summary>
        /// <param name="key">The key of the value to set.</param>
        /// <param name="value">The value to store.</param>
        void SetValue(string key, string value);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ISettingsService.cs">
<![CDATA[
using RedditVideoStudio.Shared.Configuration;

namespace RedditVideoStudio.Core.Interfaces
{
    public interface ISettingsService
    {
        AppSettings GetSettings();
        void SaveSettings(AppSettings settings);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IStoryboardGenerator.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that generates a storyboard from text content.
    /// This process involves creating audio and image assets for each piece of text.
    /// </summary>
    public interface IStoryboardGenerator
    {
        /// <summary>
        /// Asynchronously generates a storyboard from a collection of text strings.
        /// </summary>
        /// <param name="content">The collection of text strings to be included in the storyboard.</param>
        /// <param name="tempPath">The temporary directory to store generated assets.</param>
        /// <param name="segmentName">A name to identify the video segment (e.g., "Title", "Comments").</param>
        /// <param name="progress">An object to report progress on the generation.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>A Storyboard object populated with timed items.</returns>
        Task<Storyboard> GenerateAsync(
            IEnumerable<string> content,
            string tempPath,
            string segmentName,
            IProgress<ProgressReport> progress,
            CancellationToken cancellationToken);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITempDirectory.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a disposable temporary directory.
    /// This ensures that any created temporary directories are automatically
    /// cleaned up when they are no longer needed.
    /// </summary>
    public interface ITempDirectory : IDisposable
    {
        /// <summary>
        /// Gets the full path of the temporary directory.
        /// </summary>
        string Path { get; }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITempDirectoryFactory.cs">
<![CDATA[
namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines a factory for creating instances of ITempDirectory.
    /// This pattern allows for the creation of disposable resources
    /// without tightly coupling the application layer to the infrastructure layer.
    /// </summary>
    public interface ITempDirectoryFactory
    {
        ITempDirectory Create();
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITextToSpeechService.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models; // Added
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    public interface ITextToSpeechService
    {
        /// <summary>
        /// Asynchronously generates speech and returns the file path and its accurate duration.
        /// </summary>
        // CORRECTED: Return type is now the new SpeechGenerationResult record.
        Task<SpeechGenerationResult> GenerateSpeechAsync(string text, string outputFilePath, CancellationToken cancellationToken = default);

        string[] GetVoices();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITikTokServiceFactory.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITikTokServiceFactory.cs
namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines a factory for creating an instance of the TikTok Upload Service.
    /// This is necessary to handle the access token which is obtained at runtime.
    /// </summary>
    public interface ITikTokServiceFactory
    {
        ITikTokUploadService Create(string accessToken);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITikTokUploadService.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\ITikTokUploadService.cs
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that uploads a video to TikTok.
    /// </summary>
    public interface ITikTokUploadService
    {
        Task UploadVideoAsync(string videoPath, string title, CancellationToken cancellationToken = default);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IVideoComposer.cs">
<![CDATA[
using RedditVideoStudio.Shared.Models;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for the main video composition service.
    /// This service orchestrates the entire process of creating a video
    /// from Reddit content.
    /// </summary>
    public interface IVideoComposer
    {
        /// <summary>
        /// Composes videos for a batch of top Reddit posts.
        /// </summary>
        /// <param name="progress">An object to report progress on the overall operation.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        Task ComposeVideoAsync(IProgress<ProgressReport> progress, CancellationToken cancellationToken);

        /// <summary>
        /// Composes a single video from a specific Reddit post's title and comments.
        /// </summary>
        /// <param name="title">The title of the Reddit post.</param>
        /// <param name="comments">A list of comments from the post.</param>
        /// <param name="progress">An object to report progress on the video generation.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <param name="outputPath">The path to save the final rendered video.</param>
        Task ComposeVideoAsync(string title, List<string> comments, IProgress<ProgressReport> progress, CancellationToken cancellationToken, string outputPath);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IVideoDestination.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    public interface IVideoDestination
    {
        string Name { get; }
        bool IsAuthenticated { get; }
        Task AuthenticateAsync(CancellationToken cancellationToken = default);
        Task UploadVideoAsync(string videoPath, VideoDetails videoDetails, CancellationToken cancellationToken = default);
        Task SignOutAsync();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IVideoSegmentGenerator.cs">
<![CDATA[
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using System;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that generates a single video segment
    /// from a storyboard and a background video.
    /// </summary>
    public interface IVideoSegmentGenerator
    {
        /// <summary>
        /// Asynchronously generates a video segment.
        /// </summary>
        /// <param name="storyboard">The storyboard containing the sequence of items for the segment.</param>
        /// <param name="backgroundQuery">The search query for the background video.</param>
        /// <param name="tempPath">The temporary directory to store intermediate files.</param>
        /// <param name="segmentName">A name to identify the video segment.</param>
        /// <param name="outputSegmentPath">The path to save the final rendered video segment.</param>
        /// <param name="progress">An object to report progress on the generation.</param>
        /// <param name="cancellationToken">A token to cancel the operation.</param>
        /// <returns>The path to the generated video segment.</returns>
        Task<string> GenerateAsync(
            Storyboard storyboard,
            string backgroundQuery,
            string tempPath,
            string segmentName,
            string outputSegmentPath,
            IProgress<ProgressReport> progress,
            CancellationToken cancellationToken);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IYouTubeServiceFactory.cs">
<![CDATA[
using Google.Apis.Auth.OAuth2;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines a factory for creating an instance of the YouTube Upload Service.
    /// This is necessary to handle the UserCredential which is obtained interactively
    /// in the UI layer and passed in at runtime.
    /// </summary>
    public interface IYouTubeServiceFactory
    {
        /// <summary>
        /// Creates an instance of the YouTube upload service.
        /// </summary>
        /// <param name="credential">The user's OAuth2 credential.</param>
        /// <returns>An instance of IYouTubeUploadService.</returns>
        IYouTubeUploadService Create(UserCredential credential);
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IYouTubeUploadService.cs">
<![CDATA[
// In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\Interfaces\IYouTubeUploadService.cs

using RedditVideoStudio.Shared.Models; // Add this using statement
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Core.Interfaces
{
    /// <summary>
    /// Defines the contract for a service that uploads videos to YouTube.
    /// </summary>
    public interface IYouTubeUploadService
    {
        /// <summary>
        /// Asynchronously uploads a video and its thumbnail to YouTube.
        /// </summary>
        // --- START OF MODIFICATION ---
        Task<string?> UploadVideoAsync(
             string videoPath,
             string thumbnailPath,
             string title,
             string description,
             DateTime? scheduledPublishTimeUtc,
             IProgress<ProgressReport> progress, // Add IProgress parameter
             CancellationToken cancellationToken = default);
        // --- END OF MODIFICATION ---

        Task<List<string>> FetchUploadedVideoTitlesAsync(CancellationToken cancellationToken);
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\Debug\net9.0\RedditVideoStudio.Core.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.Core")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.Core")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.Core")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\Debug\net9.0\RedditVideoStudio.Core.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\Debug\net9.0\RedditVideoStudio.Core.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0": {
      "Google.Apis/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Management/7.0.2": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "compile": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        }
      }
    }
  },
  "libraries": {
    "Google.Apis/1.70.0": {
      "sha512": "K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "type": "package",
      "path": "google.apis/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.1.70.0.nupkg.sha512",
        "google.apis.nuspec",
        "lib/net462/Google.Apis.dll",
        "lib/net462/Google.Apis.pdb",
        "lib/net462/Google.Apis.xml",
        "lib/net6.0/Google.Apis.dll",
        "lib/net6.0/Google.Apis.pdb",
        "lib/net6.0/Google.Apis.xml",
        "lib/netstandard2.0/Google.Apis.dll",
        "lib/netstandard2.0/Google.Apis.pdb",
        "lib/netstandard2.0/Google.Apis.xml"
      ]
    },
    "Google.Apis.Auth/1.70.0": {
      "sha512": "2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "type": "package",
      "path": "google.apis.auth/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.auth.1.70.0.nupkg.sha512",
        "google.apis.auth.nuspec",
        "lib/net462/Google.Apis.Auth.dll",
        "lib/net462/Google.Apis.Auth.pdb",
        "lib/net462/Google.Apis.Auth.xml",
        "lib/net6.0/Google.Apis.Auth.dll",
        "lib/net6.0/Google.Apis.Auth.pdb",
        "lib/net6.0/Google.Apis.Auth.xml",
        "lib/netstandard2.0/Google.Apis.Auth.dll",
        "lib/netstandard2.0/Google.Apis.Auth.pdb",
        "lib/netstandard2.0/Google.Apis.Auth.xml"
      ]
    },
    "Google.Apis.Core/1.70.0": {
      "sha512": "R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "type": "package",
      "path": "google.apis.core/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.core.1.70.0.nupkg.sha512",
        "google.apis.core.nuspec",
        "lib/net462/Google.Apis.Core.dll",
        "lib/net462/Google.Apis.Core.pdb",
        "lib/net462/Google.Apis.Core.xml",
        "lib/net6.0/Google.Apis.Core.dll",
        "lib/net6.0/Google.Apis.Core.pdb",
        "lib/net6.0/Google.Apis.Core.xml",
        "lib/netstandard2.0/Google.Apis.Core.dll",
        "lib/netstandard2.0/Google.Apis.Core.pdb",
        "lib/netstandard2.0/Google.Apis.Core.xml"
      ]
    },
    "Newtonsoft.Json/13.0.3": {
      "sha512": "HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "type": "package",
      "path": "newtonsoft.json/13.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/net6.0/Newtonsoft.Json.dll",
        "lib/net6.0/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.3.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "System.CodeDom/7.0.0": {
      "sha512": "GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "type": "package",
      "path": "system.codedom/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.CodeDom.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "lib/net462/System.CodeDom.dll",
        "lib/net462/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/net7.0/System.CodeDom.dll",
        "lib/net7.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.7.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Management/7.0.2": {
      "sha512": "/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "type": "package",
      "path": "system.management/7.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Management.targets",
        "lib/net462/_._",
        "lib/net6.0/System.Management.dll",
        "lib/net6.0/System.Management.xml",
        "lib/net7.0/System.Management.dll",
        "lib/net7.0/System.Management.xml",
        "lib/netstandard2.0/System.Management.dll",
        "lib/netstandard2.0/System.Management.xml",
        "runtimes/win/lib/net6.0/System.Management.dll",
        "runtimes/win/lib/net6.0/System.Management.xml",
        "runtimes/win/lib/net7.0/System.Management.dll",
        "runtimes/win/lib/net7.0/System.Management.xml",
        "system.management.7.0.2.nupkg.sha512",
        "system.management.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj",
      "msbuildProject": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj"
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj",
      "msbuildProject": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "Google.Apis.Auth >= 1.70.0",
      "RedditVideoStudio.Domain >= 1.0.0",
      "RedditVideoStudio.Shared >= 1.0.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
      "projectName": "RedditVideoStudio.Core",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "Google.Apis.Auth": {
            "target": "Package",
            "version": "[1.70.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\obj\RedditVideoStudio.Core.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Core\RedditVideoStudio.Core.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Apis.Auth" Version="1.70.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RedditVideoStudio.Domain\RedditVideoStudio.Domain.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj" />
  </ItemGroup>

</Project>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\bin\Debug\net9.0\RedditVideoStudio.Domain.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.Domain/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Domain.dll": {}
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\Bookmark.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents a single word and its timing information within a synthesized audio track.
    /// This is used to align visual elements (like text overlays) with the spoken narration.
    /// </summary>
    public class Bookmark
    {
        /// <summary>
        /// The specific word that was spoken.
        /// </summary>
        public string Word { get; }

        /// <summary>
        /// The exact time at which the word begins in the audio track.
        /// </summary>
        public TimeSpan StartTime { get; }

        /// <summary>
        /// The duration for which the word is spoken.
        /// </summary>
        public TimeSpan Duration { get; }

        /// <summary>
        /// Initializes a new instance of the Bookmark class.
        /// </summary>
        /// <param name="word">The spoken word.</param>
        /// <param name="startTime">The start time of the word.</param>
        /// <param name="duration">The duration of the word.</param>
        public Bookmark(string word, TimeSpan startTime, TimeSpan duration)
        {
            Word = word;
            StartTime = startTime;
            Duration = duration;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\RedditPostData.cs">
<![CDATA[
namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents the core data of a Reddit post, including its title,
    /// subreddit, and a list of comments. This is a fundamental model
    /// used throughout the application.
    /// </summary>
    public class RedditPostData
    {
        public string Id { get; set; } = "";
        public string Title { get; set; } = "";
        public string Subreddit { get; set; } = "";
        public string Url { get; set; } = "";
        public string Permalink { get; set; } = "";
        public int Score { get; set; }
        public List<string> Comments { get; set; } = new();
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\SpeechGenerationResult.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents the result of a text-to-speech generation operation,
    /// containing the path to the output file and its precise duration.
    /// </summary>
    public record SpeechGenerationResult(string FilePath, TimeSpan Duration);
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\Storyboard.cs">
<![CDATA[
using System;
using System.Collections.Generic;
using System.Linq;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents the timeline for a video segment. It contains a list of
    /// StoryboardItem objects, each representing a piece of content (like an
    /// image overlay with corresponding audio) and its timing.
    /// </summary>
    public class Storyboard
    {
        public List<StoryboardItem> Items { get; set; } = new();

        /// <summary>
        /// Calculates the start time for the next item to be added to the storyboard.
        /// This is determined by finding the maximum end time of all existing items.
        /// </summary>
        /// <returns>The TimeSpan for the next item's start time.</returns>
        public TimeSpan GetNextStartTime()
        {
            return Items.Any() ? Items.Max(i => i.EndTime) : TimeSpan.Zero;
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\StoryboardItem.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents a single piece of content on the storyboard timeline.
    /// This includes the paths to the generated image and audio files,
    /// as well as the precise start and end times for its appearance in the video.
    /// </summary>
    public class StoryboardItem
    {
        public string ImagePath { get; set; } = string.Empty;
        public string AudioPath { get; set; } = string.Empty;

        // This is the corrected, simple property. It only stores the value it is given.
        public TimeSpan StartTime { get; set; }
        public TimeSpan EndTime { get; set; }

        public string Position { get; set; } = "center";
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\UploadRequest.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// Represents a request to upload a video to a service like YouTube.
    /// It contains the path to the video file and all the necessary metadata
    /// such as title, description, and the scheduled publish time.
    /// </summary>
    public class UploadRequest
    {
        public string FilePath { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public DateTime PublishTimeUtc { get; set; }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\Models\VideoDetails.cs">
<![CDATA[
using System;

namespace RedditVideoStudio.Domain.Models
{
    /// <summary>
    /// A simple data class to hold all the details for a video upload.
    /// </summary>
    public class VideoDetails
    {
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string[] Tags { get; set; } = Array.Empty<string>();
        public bool IsPrivate { get; set; } = true;
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\Debug\net9.0\RedditVideoStudio.Domain.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.Domain")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.Domain")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.Domain")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\Debug\net9.0\RedditVideoStudio.Domain.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\Debug\net9.0\RedditVideoStudio.Domain.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0": {}
  },
  "libraries": {},
  "projectFileDependencyGroups": {
    "net9.0": []
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
      "projectName": "RedditVideoStudio.Domain",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\obj\RedditVideoStudio.Domain.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Domain\RedditVideoStudio.Domain.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

</Project>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\bin\Debug\net9.0\RedditVideoStudio.Infrastructure.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.Infrastructure/1.0.0": {
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Google.Cloud.TextToSpeech.V1": "3.12.0",
          "Microsoft.CognitiveServices.Speech": "1.44.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Newtonsoft.Json": "13.0.3",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0",
          "SkiaSharp": "3.119.0",
          "System.Speech": "9.0.6"
        },
        "runtime": {
          "RedditVideoStudio.Infrastructure.dll": {}
        }
      },
      "Azure.Core/1.44.1": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "System.ClientModel": "1.1.0",
          "System.Diagnostics.DiagnosticSource": "6.0.1",
          "System.Memory.Data": "6.0.0",
          "System.Numerics.Vectors": "4.5.0",
          "System.Text.Encodings.Web": "6.0.0",
          "System.Text.Json": "6.0.10",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "runtime": {
          "lib/net6.0/Azure.Core.dll": {
            "assemblyVersion": "1.44.1.0",
            "fileVersion": "1.4400.124.50905"
          }
        }
      },
      "Google.Api.CommonProtos/2.16.0": {
        "dependencies": {
          "Google.Protobuf": "3.28.2"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "assemblyVersion": "2.16.0.0",
            "fileVersion": "2.16.0.0"
          }
        }
      },
      "Google.Api.Gax/4.9.0": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "Newtonsoft.Json": "13.0.3",
          "System.Diagnostics.DiagnosticSource": "6.0.1"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Api.Gax.Grpc/4.9.0": {
        "dependencies": {
          "Google.Api.CommonProtos": "2.16.0",
          "Google.Api.Gax": "4.9.0",
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Auth": "2.66.0",
          "Grpc.Core.Api": "2.66.0",
          "Grpc.Net.Client": "2.66.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Apis/1.70.0": {
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Auth": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "assemblyVersion": "1.69.0.3764",
            "fileVersion": "1.69.0.3764"
          }
        }
      },
      "Google.Cloud.TextToSpeech.V1/3.12.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0",
          "Google.LongRunning": "3.3.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "assemblyVersion": "3.12.0.0",
            "fileVersion": "3.12.0.0"
          }
        }
      },
      "Google.LongRunning/3.3.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "assemblyVersion": "3.3.0.0",
            "fileVersion": "3.3.0.0"
          }
        }
      },
      "Google.Protobuf/3.28.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.28.2.0",
            "fileVersion": "3.28.2.0"
          }
        }
      },
      "Grpc.Auth/2.66.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.66.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.66.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.66.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.66.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "Microsoft.CognitiveServices.Speech/1.44.0": {
        "dependencies": {
          "Azure.Core": "1.44.1"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          }
        },
        "runtimeTargets": {
          "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "ios-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        }
      },
      "SkiaSharp/3.119.0": {
        "dependencies": {
          "SkiaSharp.NativeAssets.Win32": "3.119.0",
          "SkiaSharp.NativeAssets.macOS": "3.119.0"
        },
        "runtime": {
          "lib/net8.0/SkiaSharp.dll": {
            "assemblyVersion": "3.119.0.0",
            "fileVersion": "3.119.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.macOS/3.119.0": {
        "runtimeTargets": {
          "runtimes/osx/native/libSkiaSharp.dylib": {
            "rid": "osx",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.Win32/3.119.0": {
        "runtimeTargets": {
          "runtimes/win-arm64/native/libSkiaSharp.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/libSkiaSharp.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/libSkiaSharp.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "System.ClientModel/1.1.0": {
        "dependencies": {
          "System.Memory.Data": "6.0.0",
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.ClientModel.dll": {
            "assemblyVersion": "1.1.0.0",
            "fileVersion": "1.100.24.46703"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/6.0.1": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        }
      },
      "System.Management/7.0.2": {
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        }
      },
      "System.Memory.Data/6.0.0": {
        "dependencies": {
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.Memory.Data.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Numerics.Vectors/4.5.0": {},
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Speech/9.0.6": {
        "runtime": {
          "lib/net9.0/System.Speech.dll": {
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Speech.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "System.Text.Encodings.Web/6.0.0": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        }
      },
      "System.Text.Json/6.0.10": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0",
          "System.Text.Encodings.Web": "6.0.0"
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {},
      "RedditVideoStudio.Core/1.0.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Core.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Domain.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Shared.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.Infrastructure/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "Azure.Core/1.44.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YyznXLQZCregzHvioip07/BkzjuWNXogJEVz9T5W6TwjNr17ax41YGzYMptlo2G10oLCuVPoyva62y0SIRDixg==",
      "path": "azure.core/1.44.1",
      "hashPath": "azure.core.1.44.1.nupkg.sha512"
    },
    "Google.Api.CommonProtos/2.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-37MuZrE9AAqHAdYgFLoTHydAiXDRriQZGVKEg6fr6ASnrY5GtauYXnQrGk5x2K3NmYzEXe+wkpaPVmxjb3NKjg==",
      "path": "google.api.commonprotos/2.16.0",
      "hashPath": "google.api.commonprotos.2.16.0.nupkg.sha512"
    },
    "Google.Api.Gax/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-fjHHYcQ99u0ztqwT537rvVtJMdDy6G2VHBZ+F1cBjDGYNVZfrpk40DMQ/OpUGToT9ZGHVirhh3eJ73bw2ANVPQ==",
      "path": "google.api.gax/4.9.0",
      "hashPath": "google.api.gax.4.9.0.nupkg.sha512"
    },
    "Google.Api.Gax.Grpc/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ToCx/0cs+wJ9j7vzKRcPAKneJVZrz/s9JhW9QsFx1dar9WzTxawQZ8xTjyieSy8tY0UiYCL1qYkn/iRrklYnSA==",
      "path": "google.api.gax.grpc/4.9.0",
      "hashPath": "google.api.gax.grpc.4.9.0.nupkg.sha512"
    },
    "Google.Apis/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "path": "google.apis/1.70.0",
      "hashPath": "google.apis.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Auth/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "path": "google.apis.auth/1.70.0",
      "hashPath": "google.apis.auth.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Core/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "path": "google.apis.core/1.70.0",
      "hashPath": "google.apis.core.1.70.0.nupkg.sha512"
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "hashPath": "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512"
    },
    "Google.Cloud.TextToSpeech.V1/3.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5eIfjGicnKagFSkmF5vyJt2x6JdBIs+tjBKPU3E8ppZ4587CwlgVYixa72WL9yygPijjGvlUg+3vwssAz8z+KQ==",
      "path": "google.cloud.texttospeech.v1/3.12.0",
      "hashPath": "google.cloud.texttospeech.v1.3.12.0.nupkg.sha512"
    },
    "Google.LongRunning/3.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-F2SZ83Jo466Wj/s1Z7QhIAmWBXxJZQyXZpcx0P8BR7d6s0FAj67vQjeUPESSJcvsy8AqYiYBhkUr2YpZhTQeHg==",
      "path": "google.longrunning/3.3.0",
      "hashPath": "google.longrunning.3.3.0.nupkg.sha512"
    },
    "Google.Protobuf/3.28.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z86ZKAB+v1B/m0LTM+EVamvZlYw/g3VND3/Gs4M/+aDIxa2JE9YPKjDxTpf0gv2sh26hrve3eI03brxBmzn92g==",
      "path": "google.protobuf/3.28.2",
      "hashPath": "google.protobuf.3.28.2.nupkg.sha512"
    },
    "Grpc.Auth/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-FRQlhMAcHf0GjAXIfhN6RydfZncLLXNNTOtpLL1bt57kp59vu40faW+dr6Vwl7ef/IUFfF38aiB5jvhAA/9Aow==",
      "path": "grpc.auth/2.66.0",
      "hashPath": "grpc.auth.2.66.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HsjsQVAHe4hqP4t4rpUnmq+MZvPdyrlPsWF4T5fbMvyP3o/lMV+KVJfDlaNH8+v0aGQTVT3EsDFufbhaWb52cw==",
      "path": "grpc.core.api/2.66.0",
      "hashPath": "grpc.core.api.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GwkSsssXFgN9+M2U+UQWdErf61sn1iqgP+2NRBlDXATcP9vlxda0wySxd/eIL8U522+SnyFNUXlvQ5tAzGk9cA==",
      "path": "grpc.net.client/2.66.0",
      "hashPath": "grpc.net.client.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YJpQpIvpo0HKlsG6SHwaieyji08qfv0DdEDIewCAA0egQY08637sHOj1netLGUhzBEsCqlGC3e92TZ2uqhxnvw==",
      "path": "grpc.net.common/2.66.0",
      "hashPath": "grpc.net.common.2.66.0.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UcSjPsst+DfAdJGVDsu346FX0ci0ah+lw3WRtn18NUwEqRt70HaOQ7lI72vy3+1LxtqI3T5GWwV39rQSrCzAeg==",
      "path": "microsoft.bcl.asyncinterfaces/6.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.6.0.0.nupkg.sha512"
    },
    "Microsoft.CognitiveServices.Speech/1.44.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pUGHPjxsv72SYw2Fh0rQV8NehZcDqzlUMLZ1keOSWaX8Yqs6QcANIu+xopdRnI2V8rY0x+8GJ8Ern/i4+D6Hdw==",
      "path": "microsoft.cognitiveservices.speech/1.44.0",
      "hashPath": "microsoft.cognitiveservices.speech.1.44.0.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "SkiaSharp/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gR9yVoOta2Mc1Rxt15LD65AckfHMfwjIs/3kkD59C9bT2nYYISsE6uz3t4aMPNHA6CgsIL0Ssn+jE5OVilZ1yw==",
      "path": "skiasharp/3.119.0",
      "hashPath": "skiasharp.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.macOS/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YE1vNn0Nyw2PWtv7hw1PYkKJO0itFiQp9vSqGppZUKzQJqwp28a2jgdCMPfYtOiR8KCnDgZqQoynqJRRaE2ZVg==",
      "path": "skiasharp.nativeassets.macos/3.119.0",
      "hashPath": "skiasharp.nativeassets.macos.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.Win32/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IwC9yx36lOdXVT2DjgmWHl1qkVspfj8ctd4+li8CNnvqdfaTolXCOh6TLznURcPAvzatx9K/tLOB7zT6T8EA9w==",
      "path": "skiasharp.nativeassets.win32/3.119.0",
      "hashPath": "skiasharp.nativeassets.win32.3.119.0.nupkg.sha512"
    },
    "System.ClientModel/1.1.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UocOlCkxLZrG2CKMAAImPcldJTxeesHnHGHwhJ0pNlZEvEXcWKuQvVOER2/NiOkJGRJk978SNdw3j6/7O9H1lg==",
      "path": "system.clientmodel/1.1.0",
      "hashPath": "system.clientmodel.1.1.0.nupkg.sha512"
    },
    "System.CodeDom/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "path": "system.codedom/7.0.0",
      "hashPath": "system.codedom.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/6.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-KiLYDu2k2J82Q9BJpWiuQqCkFjRBWVq4jDzKKWawVi9KWzyD0XG3cmfX0vqTQlL14Wi9EufJrbL0+KCLTbqWiQ==",
      "path": "system.diagnostics.diagnosticsource/6.0.1",
      "hashPath": "system.diagnostics.diagnosticsource.6.0.1.nupkg.sha512"
    },
    "System.Management/7.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "path": "system.management/7.0.2",
      "hashPath": "system.management.7.0.2.nupkg.sha512"
    },
    "System.Memory.Data/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ntFHArH3I4Lpjf5m4DCXQHJuGwWPNVJPaAvM95Jy/u+2Yzt2ryiyIN04LAogkjP9DeRcEOiviAjQotfmPq/FrQ==",
      "path": "system.memory.data/6.0.0",
      "hashPath": "system.memory.data.6.0.0.nupkg.sha512"
    },
    "System.Numerics.Vectors/4.5.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QQTlPTl06J/iiDbJCiepZ4H//BVraReU4O4EoRw1U02H5TLUIT7xn3GnDp9AXPSlJUDyFs4uWjWafNX6WrAojQ==",
      "path": "system.numerics.vectors/4.5.0",
      "hashPath": "system.numerics.vectors.4.5.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Speech/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Cyc9GLB8OpPNFFSlvnaLzkLSyGCuIENllB47w0WwP+SzVfDWvGdTEK1iIaMQEoRjpdl4sRYrchCDYx6GqNlu/w==",
      "path": "system.speech/9.0.6",
      "hashPath": "system.speech.9.0.6.nupkg.sha512"
    },
    "System.Text.Encodings.Web/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vg8eB5Tawm1IFqj4TVK1czJX89rhFxJo9ELqc/Eiq0eXy13RK00eubyU6TJE6y+GQXjyV5gSfiewDUZjQgSE0w==",
      "path": "system.text.encodings.web/6.0.0",
      "hashPath": "system.text.encodings.web.6.0.0.nupkg.sha512"
    },
    "System.Text.Json/6.0.10": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NSB0kDipxn2ychp88NXWfFRFlmi1bst/xynOutbnpEfRCT9JZkZ7KOmF/I/hNKo2dILiMGnqblm+j1sggdLB9g==",
      "path": "system.text.json/6.0.10",
      "hashPath": "system.text.json.6.0.10.nupkg.sha512"
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "path": "system.threading.tasks.extensions/4.5.4",
      "hashPath": "system.threading.tasks.extensions.4.5.4.nupkg.sha512"
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\Debug\net9.0\RedditVideoStudio.Infrastructure.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.Infrastructure")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.Infrastructure")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.Infrastructure")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\Debug\net9.0\RedditVideoStudio.Infrastructure.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\Debug\net9.0\RedditVideoStudio.Infrastructure.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0": {
      "Azure.Core/1.44.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "System.ClientModel": "1.1.0",
          "System.Diagnostics.DiagnosticSource": "6.0.1",
          "System.Memory.Data": "6.0.0",
          "System.Numerics.Vectors": "4.5.0",
          "System.Text.Encodings.Web": "6.0.0",
          "System.Text.Json": "6.0.10",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "compile": {
          "lib/net6.0/Azure.Core.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Azure.Core.dll": {
            "related": ".xml"
          }
        }
      },
      "Google.Api.CommonProtos/2.16.0": {
        "type": "package",
        "dependencies": {
          "Google.Protobuf": "[3.28.2, 4.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "build/_._": {}
        }
      },
      "Google.Api.Gax/4.9.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "Newtonsoft.Json": "13.0.3",
          "System.Diagnostics.DiagnosticSource": "6.0.1"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Api.Gax.Grpc/4.9.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.CommonProtos": "2.16.0",
          "Google.Api.Gax": "4.9.0",
          "Google.Apis.Auth": "1.68.0",
          "Grpc.Auth": "2.66.0",
          "Grpc.Core.Api": "2.66.0",
          "Grpc.Net.Client": "2.66.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.69.0",
          "Google.Apis.Auth": "1.69.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Cloud.TextToSpeech.V1/3.12.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.Gax.Grpc": "[4.9.0, 5.0.0)",
          "Google.LongRunning": "[3.3.0, 4.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.LongRunning/3.3.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.Gax.Grpc": "[4.8.0, 5.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Protobuf/3.28.2": {
        "type": "package",
        "compile": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Auth/2.66.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Auth": "1.68.0",
          "Grpc.Core.Api": "2.66.0"
        },
        "compile": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Core.Api/2.66.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Client/2.66.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.66.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Common/2.66.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Core.Api": "2.66.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.CognitiveServices.Speech/1.44.0": {
        "type": "package",
        "dependencies": {
          "Azure.Core": "1.44.1"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/Microsoft.CognitiveServices.Speech.props": {}
        },
        "runtimeTargets": {
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "ios-arm64"
          },
          "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "iossimulator-arm64"
          },
          "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "iossimulator-x64"
          },
          "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "maccatalyst-arm64"
          },
          "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "maccatalyst-x64"
          },
          "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "osx-arm64"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "assetType": "native",
            "rid": "osx-arm64"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "assetType": "native",
            "rid": "osx-arm64"
          },
          "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "osx-x64"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "assetType": "native",
            "rid": "osx-x64"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "assetType": "native",
            "rid": "osx-x64"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-x86"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "SkiaSharp/3.119.0": {
        "type": "package",
        "dependencies": {
          "SkiaSharp.NativeAssets.Win32": "3.119.0",
          "SkiaSharp.NativeAssets.macOS": "3.119.0"
        },
        "compile": {
          "ref/net8.0/SkiaSharp.dll": {}
        },
        "runtime": {
          "lib/net8.0/SkiaSharp.dll": {
            "related": ".pdb"
          }
        }
      },
      "SkiaSharp.NativeAssets.macOS/3.119.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/osx/native/libSkiaSharp.dylib": {
            "assetType": "native",
            "rid": "osx"
          }
        }
      },
      "SkiaSharp.NativeAssets.Win32/3.119.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win-arm64/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-x64/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x86/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-x86"
          }
        }
      },
      "System.ClientModel/1.1.0": {
        "type": "package",
        "dependencies": {
          "System.Memory.Data": "1.0.2",
          "System.Text.Json": "6.0.9"
        },
        "compile": {
          "lib/net6.0/System.ClientModel.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.ClientModel.dll": {
            "related": ".xml"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/6.0.1": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Management/7.0.2": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "compile": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Memory.Data/6.0.0": {
        "type": "package",
        "dependencies": {
          "System.Text.Json": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Memory.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Memory.Data.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Numerics.Vectors/4.5.0": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Speech/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/System.Speech.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/System.Speech.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Speech.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Text.Encodings.Web/6.0.0": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/6.0.10": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0",
          "System.Text.Encodings.Web": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.1/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.1/_._": {}
        }
      },
      "RedditVideoStudio.Core/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "compile": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        }
      }
    }
  },
  "libraries": {
    "Azure.Core/1.44.1": {
      "sha512": "YyznXLQZCregzHvioip07/BkzjuWNXogJEVz9T5W6TwjNr17ax41YGzYMptlo2G10oLCuVPoyva62y0SIRDixg==",
      "type": "package",
      "path": "azure.core/1.44.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CHANGELOG.md",
        "README.md",
        "azure.core.1.44.1.nupkg.sha512",
        "azure.core.nuspec",
        "azureicon.png",
        "lib/net461/Azure.Core.dll",
        "lib/net461/Azure.Core.xml",
        "lib/net472/Azure.Core.dll",
        "lib/net472/Azure.Core.xml",
        "lib/net6.0/Azure.Core.dll",
        "lib/net6.0/Azure.Core.xml",
        "lib/netstandard2.0/Azure.Core.dll",
        "lib/netstandard2.0/Azure.Core.xml"
      ]
    },
    "Google.Api.CommonProtos/2.16.0": {
      "sha512": "37MuZrE9AAqHAdYgFLoTHydAiXDRriQZGVKEg6fr6ASnrY5GtauYXnQrGk5x2K3NmYzEXe+wkpaPVmxjb3NKjg==",
      "type": "package",
      "path": "google.api.commonprotos/2.16.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "build/Google.Api.CommonProtos.targets",
        "content/protos/google/api/annotations.proto",
        "content/protos/google/api/auth.proto",
        "content/protos/google/api/backend.proto",
        "content/protos/google/api/billing.proto",
        "content/protos/google/api/client.proto",
        "content/protos/google/api/config_change.proto",
        "content/protos/google/api/consumer.proto",
        "content/protos/google/api/context.proto",
        "content/protos/google/api/control.proto",
        "content/protos/google/api/distribution.proto",
        "content/protos/google/api/documentation.proto",
        "content/protos/google/api/endpoint.proto",
        "content/protos/google/api/error_reason.proto",
        "content/protos/google/api/field_behavior.proto",
        "content/protos/google/api/field_info.proto",
        "content/protos/google/api/http.proto",
        "content/protos/google/api/httpbody.proto",
        "content/protos/google/api/label.proto",
        "content/protos/google/api/launch_stage.proto",
        "content/protos/google/api/log.proto",
        "content/protos/google/api/logging.proto",
        "content/protos/google/api/metric.proto",
        "content/protos/google/api/monitored_resource.proto",
        "content/protos/google/api/monitoring.proto",
        "content/protos/google/api/policy.proto",
        "content/protos/google/api/quota.proto",
        "content/protos/google/api/resource.proto",
        "content/protos/google/api/routing.proto",
        "content/protos/google/api/service.proto",
        "content/protos/google/api/source_info.proto",
        "content/protos/google/api/system_parameter.proto",
        "content/protos/google/api/usage.proto",
        "content/protos/google/api/visibility.proto",
        "content/protos/google/rpc/code.proto",
        "content/protos/google/rpc/context/attribute_context.proto",
        "content/protos/google/rpc/context/audit_context.proto",
        "content/protos/google/rpc/error_details.proto",
        "content/protos/google/rpc/http.proto",
        "content/protos/google/rpc/status.proto",
        "content/protos/google/type/calendar_period.proto",
        "content/protos/google/type/color.proto",
        "content/protos/google/type/date.proto",
        "content/protos/google/type/datetime.proto",
        "content/protos/google/type/dayofweek.proto",
        "content/protos/google/type/decimal.proto",
        "content/protos/google/type/expr.proto",
        "content/protos/google/type/fraction.proto",
        "content/protos/google/type/interval.proto",
        "content/protos/google/type/latlng.proto",
        "content/protos/google/type/localized_text.proto",
        "content/protos/google/type/money.proto",
        "content/protos/google/type/month.proto",
        "content/protos/google/type/phone_number.proto",
        "content/protos/google/type/postal_address.proto",
        "content/protos/google/type/quaternion.proto",
        "content/protos/google/type/timeofday.proto",
        "google.api.commonprotos.2.16.0.nupkg.sha512",
        "google.api.commonprotos.nuspec",
        "lib/net461/Google.Api.CommonProtos.dll",
        "lib/net461/Google.Api.CommonProtos.pdb",
        "lib/net461/Google.Api.CommonProtos.xml",
        "lib/netstandard2.0/Google.Api.CommonProtos.dll",
        "lib/netstandard2.0/Google.Api.CommonProtos.pdb",
        "lib/netstandard2.0/Google.Api.CommonProtos.xml"
      ]
    },
    "Google.Api.Gax/4.9.0": {
      "sha512": "fjHHYcQ99u0ztqwT537rvVtJMdDy6G2VHBZ+F1cBjDGYNVZfrpk40DMQ/OpUGToT9ZGHVirhh3eJ73bw2ANVPQ==",
      "type": "package",
      "path": "google.api.gax/4.9.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.api.gax.4.9.0.nupkg.sha512",
        "google.api.gax.nuspec",
        "lib/net462/Google.Api.Gax.dll",
        "lib/net462/Google.Api.Gax.pdb",
        "lib/net462/Google.Api.Gax.xml",
        "lib/netstandard2.0/Google.Api.Gax.dll",
        "lib/netstandard2.0/Google.Api.Gax.pdb",
        "lib/netstandard2.0/Google.Api.Gax.xml"
      ]
    },
    "Google.Api.Gax.Grpc/4.9.0": {
      "sha512": "ToCx/0cs+wJ9j7vzKRcPAKneJVZrz/s9JhW9QsFx1dar9WzTxawQZ8xTjyieSy8tY0UiYCL1qYkn/iRrklYnSA==",
      "type": "package",
      "path": "google.api.gax.grpc/4.9.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.api.gax.grpc.4.9.0.nupkg.sha512",
        "google.api.gax.grpc.nuspec",
        "lib/net462/Google.Api.Gax.Grpc.dll",
        "lib/net462/Google.Api.Gax.Grpc.pdb",
        "lib/net462/Google.Api.Gax.Grpc.xml",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.dll",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.pdb",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.xml"
      ]
    },
    "Google.Apis/1.70.0": {
      "sha512": "K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "type": "package",
      "path": "google.apis/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.1.70.0.nupkg.sha512",
        "google.apis.nuspec",
        "lib/net462/Google.Apis.dll",
        "lib/net462/Google.Apis.pdb",
        "lib/net462/Google.Apis.xml",
        "lib/net6.0/Google.Apis.dll",
        "lib/net6.0/Google.Apis.pdb",
        "lib/net6.0/Google.Apis.xml",
        "lib/netstandard2.0/Google.Apis.dll",
        "lib/netstandard2.0/Google.Apis.pdb",
        "lib/netstandard2.0/Google.Apis.xml"
      ]
    },
    "Google.Apis.Auth/1.70.0": {
      "sha512": "2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "type": "package",
      "path": "google.apis.auth/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.auth.1.70.0.nupkg.sha512",
        "google.apis.auth.nuspec",
        "lib/net462/Google.Apis.Auth.dll",
        "lib/net462/Google.Apis.Auth.pdb",
        "lib/net462/Google.Apis.Auth.xml",
        "lib/net6.0/Google.Apis.Auth.dll",
        "lib/net6.0/Google.Apis.Auth.pdb",
        "lib/net6.0/Google.Apis.Auth.xml",
        "lib/netstandard2.0/Google.Apis.Auth.dll",
        "lib/netstandard2.0/Google.Apis.Auth.pdb",
        "lib/netstandard2.0/Google.Apis.Auth.xml"
      ]
    },
    "Google.Apis.Core/1.70.0": {
      "sha512": "R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "type": "package",
      "path": "google.apis.core/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.core.1.70.0.nupkg.sha512",
        "google.apis.core.nuspec",
        "lib/net462/Google.Apis.Core.dll",
        "lib/net462/Google.Apis.Core.pdb",
        "lib/net462/Google.Apis.Core.xml",
        "lib/net6.0/Google.Apis.Core.dll",
        "lib/net6.0/Google.Apis.Core.pdb",
        "lib/net6.0/Google.Apis.Core.xml",
        "lib/netstandard2.0/Google.Apis.Core.dll",
        "lib/netstandard2.0/Google.Apis.Core.pdb",
        "lib/netstandard2.0/Google.Apis.Core.xml"
      ]
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "sha512": "WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "type": "package",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512",
        "google.apis.youtube.v3.nuspec",
        "lib/net462/Google.Apis.YouTube.v3.dll",
        "lib/net462/Google.Apis.YouTube.v3.pdb",
        "lib/net462/Google.Apis.YouTube.v3.xml",
        "lib/net6.0/Google.Apis.YouTube.v3.dll",
        "lib/net6.0/Google.Apis.YouTube.v3.pdb",
        "lib/net6.0/Google.Apis.YouTube.v3.xml",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.dll",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.pdb",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.xml"
      ]
    },
    "Google.Cloud.TextToSpeech.V1/3.12.0": {
      "sha512": "5eIfjGicnKagFSkmF5vyJt2x6JdBIs+tjBKPU3E8ppZ4587CwlgVYixa72WL9yygPijjGvlUg+3vwssAz8z+KQ==",
      "type": "package",
      "path": "google.cloud.texttospeech.v1/3.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.cloud.texttospeech.v1.3.12.0.nupkg.sha512",
        "google.cloud.texttospeech.v1.nuspec",
        "lib/net462/Google.Cloud.TextToSpeech.V1.dll",
        "lib/net462/Google.Cloud.TextToSpeech.V1.pdb",
        "lib/net462/Google.Cloud.TextToSpeech.V1.xml",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.pdb",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.xml"
      ]
    },
    "Google.LongRunning/3.3.0": {
      "sha512": "F2SZ83Jo466Wj/s1Z7QhIAmWBXxJZQyXZpcx0P8BR7d6s0FAj67vQjeUPESSJcvsy8AqYiYBhkUr2YpZhTQeHg==",
      "type": "package",
      "path": "google.longrunning/3.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.longrunning.3.3.0.nupkg.sha512",
        "google.longrunning.nuspec",
        "lib/net462/Google.LongRunning.dll",
        "lib/net462/Google.LongRunning.pdb",
        "lib/net462/Google.LongRunning.xml",
        "lib/netstandard2.0/Google.LongRunning.dll",
        "lib/netstandard2.0/Google.LongRunning.pdb",
        "lib/netstandard2.0/Google.LongRunning.xml"
      ]
    },
    "Google.Protobuf/3.28.2": {
      "sha512": "Z86ZKAB+v1B/m0LTM+EVamvZlYw/g3VND3/Gs4M/+aDIxa2JE9YPKjDxTpf0gv2sh26hrve3eI03brxBmzn92g==",
      "type": "package",
      "path": "google.protobuf/3.28.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "google.protobuf.3.28.2.nupkg.sha512",
        "google.protobuf.nuspec",
        "lib/net45/Google.Protobuf.dll",
        "lib/net45/Google.Protobuf.pdb",
        "lib/net45/Google.Protobuf.xml",
        "lib/net5.0/Google.Protobuf.dll",
        "lib/net5.0/Google.Protobuf.pdb",
        "lib/net5.0/Google.Protobuf.xml",
        "lib/netstandard1.1/Google.Protobuf.dll",
        "lib/netstandard1.1/Google.Protobuf.pdb",
        "lib/netstandard1.1/Google.Protobuf.xml",
        "lib/netstandard2.0/Google.Protobuf.dll",
        "lib/netstandard2.0/Google.Protobuf.pdb",
        "lib/netstandard2.0/Google.Protobuf.xml"
      ]
    },
    "Grpc.Auth/2.66.0": {
      "sha512": "FRQlhMAcHf0GjAXIfhN6RydfZncLLXNNTOtpLL1bt57kp59vu40faW+dr6Vwl7ef/IUFfF38aiB5jvhAA/9Aow==",
      "type": "package",
      "path": "grpc.auth/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.auth.2.66.0.nupkg.sha512",
        "grpc.auth.nuspec",
        "lib/net462/Grpc.Auth.dll",
        "lib/net462/Grpc.Auth.pdb",
        "lib/net462/Grpc.Auth.xml",
        "lib/netstandard2.0/Grpc.Auth.dll",
        "lib/netstandard2.0/Grpc.Auth.pdb",
        "lib/netstandard2.0/Grpc.Auth.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Core.Api/2.66.0": {
      "sha512": "HsjsQVAHe4hqP4t4rpUnmq+MZvPdyrlPsWF4T5fbMvyP3o/lMV+KVJfDlaNH8+v0aGQTVT3EsDFufbhaWb52cw==",
      "type": "package",
      "path": "grpc.core.api/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.core.api.2.66.0.nupkg.sha512",
        "grpc.core.api.nuspec",
        "lib/net462/Grpc.Core.Api.dll",
        "lib/net462/Grpc.Core.Api.pdb",
        "lib/net462/Grpc.Core.Api.xml",
        "lib/netstandard2.0/Grpc.Core.Api.dll",
        "lib/netstandard2.0/Grpc.Core.Api.pdb",
        "lib/netstandard2.0/Grpc.Core.Api.xml",
        "lib/netstandard2.1/Grpc.Core.Api.dll",
        "lib/netstandard2.1/Grpc.Core.Api.pdb",
        "lib/netstandard2.1/Grpc.Core.Api.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Client/2.66.0": {
      "sha512": "GwkSsssXFgN9+M2U+UQWdErf61sn1iqgP+2NRBlDXATcP9vlxda0wySxd/eIL8U522+SnyFNUXlvQ5tAzGk9cA==",
      "type": "package",
      "path": "grpc.net.client/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.client.2.66.0.nupkg.sha512",
        "grpc.net.client.nuspec",
        "lib/net462/Grpc.Net.Client.dll",
        "lib/net462/Grpc.Net.Client.pdb",
        "lib/net462/Grpc.Net.Client.xml",
        "lib/net6.0/Grpc.Net.Client.dll",
        "lib/net6.0/Grpc.Net.Client.pdb",
        "lib/net6.0/Grpc.Net.Client.xml",
        "lib/net7.0/Grpc.Net.Client.dll",
        "lib/net7.0/Grpc.Net.Client.pdb",
        "lib/net7.0/Grpc.Net.Client.xml",
        "lib/net8.0/Grpc.Net.Client.dll",
        "lib/net8.0/Grpc.Net.Client.pdb",
        "lib/net8.0/Grpc.Net.Client.xml",
        "lib/netstandard2.0/Grpc.Net.Client.dll",
        "lib/netstandard2.0/Grpc.Net.Client.pdb",
        "lib/netstandard2.0/Grpc.Net.Client.xml",
        "lib/netstandard2.1/Grpc.Net.Client.dll",
        "lib/netstandard2.1/Grpc.Net.Client.pdb",
        "lib/netstandard2.1/Grpc.Net.Client.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Common/2.66.0": {
      "sha512": "YJpQpIvpo0HKlsG6SHwaieyji08qfv0DdEDIewCAA0egQY08637sHOj1netLGUhzBEsCqlGC3e92TZ2uqhxnvw==",
      "type": "package",
      "path": "grpc.net.common/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.net.common.2.66.0.nupkg.sha512",
        "grpc.net.common.nuspec",
        "lib/net6.0/Grpc.Net.Common.dll",
        "lib/net6.0/Grpc.Net.Common.pdb",
        "lib/net6.0/Grpc.Net.Common.xml",
        "lib/net7.0/Grpc.Net.Common.dll",
        "lib/net7.0/Grpc.Net.Common.pdb",
        "lib/net7.0/Grpc.Net.Common.xml",
        "lib/net8.0/Grpc.Net.Common.dll",
        "lib/net8.0/Grpc.Net.Common.pdb",
        "lib/net8.0/Grpc.Net.Common.xml",
        "lib/netstandard2.0/Grpc.Net.Common.dll",
        "lib/netstandard2.0/Grpc.Net.Common.pdb",
        "lib/netstandard2.0/Grpc.Net.Common.xml",
        "lib/netstandard2.1/Grpc.Net.Common.dll",
        "lib/netstandard2.1/Grpc.Net.Common.pdb",
        "lib/netstandard2.1/Grpc.Net.Common.xml",
        "packageIcon.png"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
      "sha512": "UcSjPsst+DfAdJGVDsu346FX0ci0ah+lw3WRtn18NUwEqRt70HaOQ7lI72vy3+1LxtqI3T5GWwV39rQSrCzAeg==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net461/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.6.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.CognitiveServices.Speech/1.44.0": {
      "sha512": "pUGHPjxsv72SYw2Fh0rQV8NehZcDqzlUMLZ1keOSWaX8Yqs6QcANIu+xopdRnI2V8rY0x+8GJ8Ern/i4+D6Hdw==",
      "type": "package",
      "path": "microsoft.cognitiveservices.speech/1.44.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "build/Microsoft.CognitiveServices.Speech.props",
        "build/REDIST.txt",
        "build/monoandroid/Microsoft.CognitiveServices.Speech.targets",
        "build/native/ARM/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/ARM64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/Microsoft.CognitiveServices.Speech.targets",
        "build/native/Win32/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/include/c_api/CMakeLists.txt",
        "build/native/include/c_api/azac_api_c_common.h",
        "build/native/include/c_api/azac_api_c_diagnostics.h",
        "build/native/include/c_api/azac_api_c_error.h",
        "build/native/include/c_api/azac_api_c_pal.h",
        "build/native/include/c_api/azac_debug.h",
        "build/native/include/c_api/azac_error.h",
        "build/native/include/c_api/speechapi_c.h",
        "build/native/include/c_api/speechapi_c_audio_config.h",
        "build/native/include/c_api/speechapi_c_audio_processing_options.h",
        "build/native/include/c_api/speechapi_c_audio_stream.h",
        "build/native/include/c_api/speechapi_c_audio_stream_format.h",
        "build/native/include/c_api/speechapi_c_auto_detect_source_lang_config.h",
        "build/native/include/c_api/speechapi_c_common.h",
        "build/native/include/c_api/speechapi_c_connection.h",
        "build/native/include/c_api/speechapi_c_conversation.h",
        "build/native/include/c_api/speechapi_c_conversation_transcription_result.h",
        "build/native/include/c_api/speechapi_c_conversation_translator.h",
        "build/native/include/c_api/speechapi_c_diagnostics.h",
        "build/native/include/c_api/speechapi_c_dialog_service_config.h",
        "build/native/include/c_api/speechapi_c_dialog_service_connector.h",
        "build/native/include/c_api/speechapi_c_embedded_speech_config.h",
        "build/native/include/c_api/speechapi_c_error.h",
        "build/native/include/c_api/speechapi_c_ext_audiocompression.h",
        "build/native/include/c_api/speechapi_c_factory.h",
        "build/native/include/c_api/speechapi_c_grammar.h",
        "build/native/include/c_api/speechapi_c_hybrid_speech_config.h",
        "build/native/include/c_api/speechapi_c_intent_recognizer.h",
        "build/native/include/c_api/speechapi_c_intent_result.h",
        "build/native/include/c_api/speechapi_c_intent_trigger.h",
        "build/native/include/c_api/speechapi_c_json.h",
        "build/native/include/c_api/speechapi_c_keyword_recognition_model.h",
        "build/native/include/c_api/speechapi_c_language_understanding_model.h",
        "build/native/include/c_api/speechapi_c_meeting.h",
        "build/native/include/c_api/speechapi_c_meeting_transcription_result.h",
        "build/native/include/c_api/speechapi_c_operations.h",
        "build/native/include/c_api/speechapi_c_participant.h",
        "build/native/include/c_api/speechapi_c_pattern_matching_model.h",
        "build/native/include/c_api/speechapi_c_pronunciation_assessment_config.h",
        "build/native/include/c_api/speechapi_c_property_bag.h",
        "build/native/include/c_api/speechapi_c_recognizer.h",
        "build/native/include/c_api/speechapi_c_result.h",
        "build/native/include/c_api/speechapi_c_session.h",
        "build/native/include/c_api/speechapi_c_source_lang_config.h",
        "build/native/include/c_api/speechapi_c_speaker_recognition.h",
        "build/native/include/c_api/speechapi_c_speech_config.h",
        "build/native/include/c_api/speechapi_c_speech_recognition_model.h",
        "build/native/include/c_api/speechapi_c_speech_translation_config.h",
        "build/native/include/c_api/speechapi_c_speech_translation_model.h",
        "build/native/include/c_api/speechapi_c_synthesis_request.h",
        "build/native/include/c_api/speechapi_c_synthesizer.h",
        "build/native/include/c_api/speechapi_c_translation_recognizer.h",
        "build/native/include/c_api/speechapi_c_translation_result.h",
        "build/native/include/c_api/speechapi_c_user.h",
        "build/native/include/c_api/spxdebug.h",
        "build/native/include/c_api/spxerror.h",
        "build/native/include/cxx_api/CMakeLists.txt",
        "build/native/include/cxx_api/azac_api_cxx_common.h",
        "build/native/include/cxx_api/speechapi_cxx.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_config.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_data_stream.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_processing_options.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_stream.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_stream_format.h",
        "build/native/include/cxx_api/speechapi_cxx_auto_detect_source_lang_config.h",
        "build/native/include/cxx_api/speechapi_cxx_auto_detect_source_lang_result.h",
        "build/native/include/cxx_api/speechapi_cxx_class_language_model.h",
        "build/native/include/cxx_api/speechapi_cxx_common.h",
        "build/native/include/cxx_api/speechapi_cxx_connection.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_message.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_message_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcriber.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcription_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcription_result.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_translator.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_translator_events.h",
        "build/native/include/cxx_api/speechapi_cxx_conversational_language_understanding_model.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_config.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_connector.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_connector_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_embedded_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_enums.h",
        "build/native/include/cxx_api/speechapi_cxx_event_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_eventsignal.h",
        "build/native/include/cxx_api/speechapi_cxx_eventsignalbase.h",
        "build/native/include/cxx_api/speechapi_cxx_file_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar_list.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar_phrase.h",
        "build/native/include/cxx_api/speechapi_cxx_hybrid_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_trigger.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_model.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_language_understanding_model.h",
        "build/native/include/cxx_api/speechapi_cxx_log_level.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcriber.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcription_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcription_result.h",
        "build/native/include/cxx_api/speechapi_cxx_memory_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_participant.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_entity.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_intent.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_model.h",
        "build/native/include/cxx_api/speechapi_cxx_phrase_list_grammar.h",
        "build/native/include/cxx_api/speechapi_cxx_pronunciation_assessment_config.h",
        "build/native/include/cxx_api/speechapi_cxx_pronunciation_assessment_result.h",
        "build/native/include/cxx_api/speechapi_cxx_properties.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_async_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_base_async_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_session.h",
        "build/native/include/cxx_api/speechapi_cxx_session_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_smart_handle.h",
        "build/native/include/cxx_api/speechapi_cxx_source_lang_config.h",
        "build/native/include/cxx_api/speechapi_cxx_source_language_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_identification_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_verification_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_bookmark_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_request.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_viseme_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_word_boundary_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_translation_config.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_translation_model.h",
        "build/native/include/cxx_api/speechapi_cxx_string_helpers.h",
        "build/native/include/cxx_api/speechapi_cxx_synthesis_voices_result.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_result.h",
        "build/native/include/cxx_api/speechapi_cxx_user.h",
        "build/native/include/cxx_api/speechapi_cxx_utils.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_info.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_client.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_enrollment_result.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_phrase_result.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_result.h",
        "build/native/uap/ARM/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/ARM64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/Win32/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/x64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/x64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/net462/Microsoft.CognitiveServices.Speech.targets",
        "build/net8.0-android/Microsoft.CognitiveServices.Speech.targets",
        "build/net8.0-ios/Microsoft.CognitiveServices.Speech.targets",
        "lib/net462/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net462/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-android/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-android/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-ios/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-ios/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-maccatalyst/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-maccatalyst/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/uap10.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/uap10.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "microsoft.cognitiveservices.speech.1.44.0.nupkg.sha512",
        "microsoft.cognitiveservices.speech.nuspec",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-arm/native/libpal_azure_c_shared.so",
        "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-arm64/native/libpal_azure_c_shared.so",
        "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-x64/native/libpal_azure_c_shared.so",
        "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib",
        "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib",
        "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib",
        "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "sha512": "0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "sha512": "LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Newtonsoft.Json/13.0.3": {
      "sha512": "HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "type": "package",
      "path": "newtonsoft.json/13.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/net6.0/Newtonsoft.Json.dll",
        "lib/net6.0/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.3.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "SkiaSharp/3.119.0": {
      "sha512": "gR9yVoOta2Mc1Rxt15LD65AckfHMfwjIs/3kkD59C9bT2nYYISsE6uz3t4aMPNHA6CgsIL0Ssn+jE5OVilZ1yw==",
      "type": "package",
      "path": "skiasharp/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "icon.png",
        "interactive-extensions/dotnet/SkiaSharp.DotNet.Interactive.dll",
        "lib/net462/SkiaSharp.dll",
        "lib/net462/SkiaSharp.pdb",
        "lib/net6.0/SkiaSharp.dll",
        "lib/net6.0/SkiaSharp.pdb",
        "lib/net8.0-android34.0/SkiaSharp.dll",
        "lib/net8.0-android34.0/SkiaSharp.pdb",
        "lib/net8.0-android34.0/SkiaSharp.xml",
        "lib/net8.0-ios17.0/SkiaSharp.dll",
        "lib/net8.0-ios17.0/SkiaSharp.pdb",
        "lib/net8.0-maccatalyst17.0/SkiaSharp.dll",
        "lib/net8.0-maccatalyst17.0/SkiaSharp.pdb",
        "lib/net8.0-macos14.0/SkiaSharp.dll",
        "lib/net8.0-macos14.0/SkiaSharp.pdb",
        "lib/net8.0-tizen7.0/SkiaSharp.dll",
        "lib/net8.0-tizen7.0/SkiaSharp.pdb",
        "lib/net8.0-tvos17.0/SkiaSharp.dll",
        "lib/net8.0-tvos17.0/SkiaSharp.pdb",
        "lib/net8.0-windows10.0.19041/SkiaSharp.dll",
        "lib/net8.0-windows10.0.19041/SkiaSharp.pdb",
        "lib/net8.0/SkiaSharp.dll",
        "lib/net8.0/SkiaSharp.pdb",
        "lib/netstandard2.0/SkiaSharp.dll",
        "lib/netstandard2.0/SkiaSharp.pdb",
        "lib/netstandard2.1/SkiaSharp.dll",
        "lib/netstandard2.1/SkiaSharp.pdb",
        "ref/net462/SkiaSharp.dll",
        "ref/net6.0/SkiaSharp.dll",
        "ref/net8.0-android34.0/SkiaSharp.dll",
        "ref/net8.0-ios17.0/SkiaSharp.dll",
        "ref/net8.0-maccatalyst17.0/SkiaSharp.dll",
        "ref/net8.0-macos14.0/SkiaSharp.dll",
        "ref/net8.0-tizen7.0/SkiaSharp.dll",
        "ref/net8.0-tvos17.0/SkiaSharp.dll",
        "ref/net8.0-windows10.0.19041/SkiaSharp.dll",
        "ref/net8.0/SkiaSharp.dll",
        "ref/netstandard2.0/SkiaSharp.dll",
        "ref/netstandard2.1/SkiaSharp.dll",
        "skiasharp.3.119.0.nupkg.sha512",
        "skiasharp.nuspec"
      ]
    },
    "SkiaSharp.NativeAssets.macOS/3.119.0": {
      "sha512": "YE1vNn0Nyw2PWtv7hw1PYkKJO0itFiQp9vSqGppZUKzQJqwp28a2jgdCMPfYtOiR8KCnDgZqQoynqJRRaE2ZVg==",
      "type": "package",
      "path": "skiasharp.nativeassets.macos/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "THIRD-PARTY-NOTICES.txt",
        "build/net462/SkiaSharp.NativeAssets.macOS.targets",
        "buildTransitive/net462/SkiaSharp.NativeAssets.macOS.targets",
        "buildTransitive/net8.0-macos14.0/SkiaSharp.NativeAssets.macOS.targets",
        "icon.png",
        "lib/net462/_._",
        "lib/net6.0/_._",
        "lib/net8.0-macos14.0/_._",
        "lib/net8.0/_._",
        "lib/netstandard2.0/_._",
        "lib/netstandard2.1/_._",
        "runtimes/osx/native/libSkiaSharp.dylib",
        "skiasharp.nativeassets.macos.3.119.0.nupkg.sha512",
        "skiasharp.nativeassets.macos.nuspec"
      ]
    },
    "SkiaSharp.NativeAssets.Win32/3.119.0": {
      "sha512": "IwC9yx36lOdXVT2DjgmWHl1qkVspfj8ctd4+li8CNnvqdfaTolXCOh6TLznURcPAvzatx9K/tLOB7zT6T8EA9w==",
      "type": "package",
      "path": "skiasharp.nativeassets.win32/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "THIRD-PARTY-NOTICES.txt",
        "build/net462/SkiaSharp.NativeAssets.Win32.targets",
        "buildTransitive/net462/SkiaSharp.NativeAssets.Win32.targets",
        "icon.png",
        "lib/net462/_._",
        "lib/net6.0-windows10.0.19041/_._",
        "lib/net6.0/_._",
        "lib/net8.0-windows10.0.19041/_._",
        "lib/net8.0/_._",
        "lib/netstandard2.0/_._",
        "lib/netstandard2.1/_._",
        "runtimes/win-arm64/native/libSkiaSharp.dll",
        "runtimes/win-x64/native/libSkiaSharp.dll",
        "runtimes/win-x86/native/libSkiaSharp.dll",
        "skiasharp.nativeassets.win32.3.119.0.nupkg.sha512",
        "skiasharp.nativeassets.win32.nuspec"
      ]
    },
    "System.ClientModel/1.1.0": {
      "sha512": "UocOlCkxLZrG2CKMAAImPcldJTxeesHnHGHwhJ0pNlZEvEXcWKuQvVOER2/NiOkJGRJk978SNdw3j6/7O9H1lg==",
      "type": "package",
      "path": "system.clientmodel/1.1.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CHANGELOG.md",
        "DotNetPackageIcon.png",
        "README.md",
        "lib/net6.0/System.ClientModel.dll",
        "lib/net6.0/System.ClientModel.xml",
        "lib/netstandard2.0/System.ClientModel.dll",
        "lib/netstandard2.0/System.ClientModel.xml",
        "system.clientmodel.1.1.0.nupkg.sha512",
        "system.clientmodel.nuspec"
      ]
    },
    "System.CodeDom/7.0.0": {
      "sha512": "GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "type": "package",
      "path": "system.codedom/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.CodeDom.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "lib/net462/System.CodeDom.dll",
        "lib/net462/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/net7.0/System.CodeDom.dll",
        "lib/net7.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.7.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/6.0.1": {
      "sha512": "KiLYDu2k2J82Q9BJpWiuQqCkFjRBWVq4jDzKKWawVi9KWzyD0XG3cmfX0vqTQlL14Wi9EufJrbL0+KCLTbqWiQ==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/6.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Diagnostics.DiagnosticSource.dll",
        "lib/net461/System.Diagnostics.DiagnosticSource.xml",
        "lib/net5.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net5.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net6.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net6.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.6.0.1.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Management/7.0.2": {
      "sha512": "/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "type": "package",
      "path": "system.management/7.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Management.targets",
        "lib/net462/_._",
        "lib/net6.0/System.Management.dll",
        "lib/net6.0/System.Management.xml",
        "lib/net7.0/System.Management.dll",
        "lib/net7.0/System.Management.xml",
        "lib/netstandard2.0/System.Management.dll",
        "lib/netstandard2.0/System.Management.xml",
        "runtimes/win/lib/net6.0/System.Management.dll",
        "runtimes/win/lib/net6.0/System.Management.xml",
        "runtimes/win/lib/net7.0/System.Management.dll",
        "runtimes/win/lib/net7.0/System.Management.xml",
        "system.management.7.0.2.nupkg.sha512",
        "system.management.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Memory.Data/6.0.0": {
      "sha512": "ntFHArH3I4Lpjf5m4DCXQHJuGwWPNVJPaAvM95Jy/u+2Yzt2ryiyIN04LAogkjP9DeRcEOiviAjQotfmPq/FrQ==",
      "type": "package",
      "path": "system.memory.data/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Memory.Data.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Memory.Data.dll",
        "lib/net461/System.Memory.Data.xml",
        "lib/net6.0/System.Memory.Data.dll",
        "lib/net6.0/System.Memory.Data.xml",
        "lib/netstandard2.0/System.Memory.Data.dll",
        "lib/netstandard2.0/System.Memory.Data.xml",
        "system.memory.data.6.0.0.nupkg.sha512",
        "system.memory.data.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Numerics.Vectors/4.5.0": {
      "sha512": "QQTlPTl06J/iiDbJCiepZ4H//BVraReU4O4EoRw1U02H5TLUIT7xn3GnDp9AXPSlJUDyFs4uWjWafNX6WrAojQ==",
      "type": "package",
      "path": "system.numerics.vectors/4.5.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net46/System.Numerics.Vectors.dll",
        "lib/net46/System.Numerics.Vectors.xml",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard1.0/System.Numerics.Vectors.dll",
        "lib/netstandard1.0/System.Numerics.Vectors.xml",
        "lib/netstandard2.0/System.Numerics.Vectors.dll",
        "lib/netstandard2.0/System.Numerics.Vectors.xml",
        "lib/portable-net45+win8+wp8+wpa81/System.Numerics.Vectors.dll",
        "lib/portable-net45+win8+wp8+wpa81/System.Numerics.Vectors.xml",
        "lib/uap10.0.16299/_._",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "ref/MonoAndroid10/_._",
        "ref/MonoTouch10/_._",
        "ref/net45/System.Numerics.Vectors.dll",
        "ref/net45/System.Numerics.Vectors.xml",
        "ref/net46/System.Numerics.Vectors.dll",
        "ref/net46/System.Numerics.Vectors.xml",
        "ref/netcoreapp2.0/_._",
        "ref/netstandard1.0/System.Numerics.Vectors.dll",
        "ref/netstandard1.0/System.Numerics.Vectors.xml",
        "ref/netstandard2.0/System.Numerics.Vectors.dll",
        "ref/netstandard2.0/System.Numerics.Vectors.xml",
        "ref/uap10.0.16299/_._",
        "ref/xamarinios10/_._",
        "ref/xamarinmac20/_._",
        "ref/xamarintvos10/_._",
        "ref/xamarinwatchos10/_._",
        "system.numerics.vectors.4.5.0.nupkg.sha512",
        "system.numerics.vectors.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "sha512": "/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "type": "package",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
        "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512",
        "system.runtime.compilerservices.unsafe.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Speech/9.0.6": {
      "sha512": "Cyc9GLB8OpPNFFSlvnaLzkLSyGCuIENllB47w0WwP+SzVfDWvGdTEK1iIaMQEoRjpdl4sRYrchCDYx6GqNlu/w==",
      "type": "package",
      "path": "system.speech/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Speech.targets",
        "lib/net462/_._",
        "lib/net8.0/System.Speech.dll",
        "lib/net8.0/System.Speech.xml",
        "lib/net9.0/System.Speech.dll",
        "lib/net9.0/System.Speech.xml",
        "lib/netstandard2.0/System.Speech.dll",
        "lib/netstandard2.0/System.Speech.xml",
        "runtimes/win/lib/net8.0/System.Speech.dll",
        "runtimes/win/lib/net8.0/System.Speech.xml",
        "runtimes/win/lib/net9.0/System.Speech.dll",
        "runtimes/win/lib/net9.0/System.Speech.xml",
        "system.speech.9.0.6.nupkg.sha512",
        "system.speech.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/6.0.0": {
      "sha512": "Vg8eB5Tawm1IFqj4TVK1czJX89rhFxJo9ELqc/Eiq0eXy13RK00eubyU6TJE6y+GQXjyV5gSfiewDUZjQgSE0w==",
      "type": "package",
      "path": "system.text.encodings.web/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Text.Encodings.Web.dll",
        "lib/net461/System.Text.Encodings.Web.xml",
        "lib/net6.0/System.Text.Encodings.Web.dll",
        "lib/net6.0/System.Text.Encodings.Web.xml",
        "lib/netcoreapp3.1/System.Text.Encodings.Web.dll",
        "lib/netcoreapp3.1/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.6.0.0.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/6.0.10": {
      "sha512": "NSB0kDipxn2ychp88NXWfFRFlmi1bst/xynOutbnpEfRCT9JZkZ7KOmF/I/hNKo2dILiMGnqblm+j1sggdLB9g==",
      "type": "package",
      "path": "system.text.json/6.0.10",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp3.1/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net461/System.Text.Json.dll",
        "lib/net461/System.Text.Json.xml",
        "lib/net6.0/System.Text.Json.dll",
        "lib/net6.0/System.Text.Json.xml",
        "lib/netcoreapp3.1/System.Text.Json.dll",
        "lib/netcoreapp3.1/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.6.0.10.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "sha512": "zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "type": "package",
      "path": "system.threading.tasks.extensions/4.5.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net461/System.Threading.Tasks.Extensions.dll",
        "lib/net461/System.Threading.Tasks.Extensions.xml",
        "lib/netcoreapp2.1/_._",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.xml",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.xml",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.dll",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.xml",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "ref/MonoAndroid10/_._",
        "ref/MonoTouch10/_._",
        "ref/netcoreapp2.1/_._",
        "ref/xamarinios10/_._",
        "ref/xamarinmac20/_._",
        "ref/xamarintvos10/_._",
        "ref/xamarinwatchos10/_._",
        "system.threading.tasks.extensions.4.5.4.nupkg.sha512",
        "system.threading.tasks.extensions.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj",
      "msbuildProject": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj"
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj",
      "msbuildProject": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj"
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj",
      "msbuildProject": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0": [
      "Google.Apis.YouTube.v3 >= 1.69.0.3764",
      "Google.Cloud.TextToSpeech.V1 >= 3.12.0",
      "Microsoft.CognitiveServices.Speech >= 1.44.0",
      "Microsoft.Extensions.Logging.Abstractions >= 9.0.6",
      "Newtonsoft.Json >= 13.0.3",
      "RedditVideoStudio.Core >= 1.0.0",
      "RedditVideoStudio.Domain >= 1.0.0",
      "RedditVideoStudio.Shared >= 1.0.0",
      "SkiaSharp >= 3.119.0",
      "System.Speech >= 9.0.6"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
      "projectName": "RedditVideoStudio.Infrastructure",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "dependencies": {
          "Google.Apis.YouTube.v3": {
            "target": "Package",
            "version": "[1.69.0.3764, )"
          },
          "Google.Cloud.TextToSpeech.V1": {
            "target": "Package",
            "version": "[3.12.0, )"
          },
          "Microsoft.CognitiveServices.Speech": {
            "target": "Package",
            "version": "[1.44.0, )"
          },
          "Microsoft.Extensions.Logging.Abstractions": {
            "target": "Package",
            "version": "[9.0.6, )"
          },
          "Newtonsoft.Json": {
            "target": "Package",
            "version": "[13.0.3, )"
          },
          "SkiaSharp": {
            "target": "Package",
            "version": "[3.119.0, )"
          },
          "System.Speech": {
            "target": "Package",
            "version": "[9.0.6, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\obj\RedditVideoStudio.Infrastructure.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\AudioUtility.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using System;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class AudioUtility : IAudioUtility
    {
        private readonly IAppConfiguration _appConfig;
        private readonly ILogger<AudioUtility> _logger;

        public AudioUtility(IAppConfiguration appConfig, ILogger<AudioUtility> logger)
        {
            _appConfig = appConfig;
            _logger = logger;
        }

        public async Task<TimeSpan> GetAudioDurationAsync(string audioFilePath, CancellationToken cancellationToken = default)
        {
            if (!File.Exists(audioFilePath))
            {
                _logger.LogError("Audio file not found at {Path}", audioFilePath);
                throw new FileNotFoundException("Audio file not found.", audioFilePath);
            }

            // ADDED: Logging for debugging
            _logger.LogInformation("Getting audio duration for: \"{Path}\"", audioFilePath);

            var ffprobePath = _appConfig.Settings.Ffmpeg.FfprobeExePath;

            if (!File.Exists(ffprobePath))
            {
                throw new FileNotFoundException("ffprobe.exe not found. Please check your FFmpeg installation path in settings.", ffprobePath);
            }

            var startInfo = new ProcessStartInfo
            {
                FileName = ffprobePath,
                Arguments = $"-v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 \"{audioFilePath}\"",
                RedirectStandardOutput = true,
                RedirectStandardError = true,
                UseShellExecute = false,
                CreateNoWindow = true
            };

            try
            {
                using var process = Process.Start(startInfo);
                if (process == null)
                {
                    throw new FfmpegException("Failed to start ffprobe process.");
                }

                string output = await process.StandardOutput.ReadToEndAsync(cancellationToken);
                string error = await process.StandardError.ReadToEndAsync(cancellationToken);

                // ADDED: Logging for debugging
                _logger.LogInformation("ffprobe raw output: '{Output}'", output.Trim());

                await process.WaitForExitAsync(cancellationToken);

                if (process.ExitCode != 0)
                {
                    throw new FfmpegException($"ffprobe process exited with code {process.ExitCode}. Error: {error}", process.ExitCode, error, null);
                }

                if (double.TryParse(output.Trim(), NumberStyles.Any, CultureInfo.InvariantCulture, out var seconds))
                {
                    var duration = TimeSpan.FromSeconds(seconds);
                    // ADDED: Logging for debugging
                    _logger.LogInformation("Parsed duration: {Duration}", duration);
                    return duration;
                }

                throw new FormatException($"Unable to parse duration from ffprobe output. Output: '{output}'. Error: '{error}'");
            }
            catch (Exception ex) when (ex is not FfmpegException && ex is not FormatException)
            {
                _logger.LogError(ex, "An unexpected error occurred while getting audio duration for {File}", audioFilePath);
                throw new FfmpegException("An unexpected error occurred while running ffprobe.", ex);
            }
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\AzureTextToSpeechService.cs">
<![CDATA[
using Microsoft.CognitiveServices.Speech;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models; // Added
using System;
using System.IO;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITextToSpeechService using the Azure Cognitive Services Speech SDK.
    /// </summary>
    public class AzureTextToSpeechService : ITextToSpeechService
    {
        private readonly ILogger<AzureTextToSpeechService> _logger;
        private readonly SpeechConfig _speechConfig;
        private readonly IAudioUtility _audioUtility; // Added

        // CORRECTED: Constructor now accepts IAudioUtility
        public AzureTextToSpeechService(ILogger<AzureTextToSpeechService> logger, IAppConfiguration configService, IAudioUtility audioUtility)
        {
            _logger = logger;
            _audioUtility = audioUtility; // Added
            var azureSettings = configService.Settings.AzureTts;

            if (string.IsNullOrWhiteSpace(azureSettings.ApiKey) || string.IsNullOrWhiteSpace(azureSettings.Region))
            {
                _logger.LogError("Azure TTS API Key or Region is not configured.");
                // Create a "null" config to prevent crashes, but it will fail on use
                _speechConfig = SpeechConfig.FromSubscription("missing", "missing");
            }
            else
            {
                _speechConfig = SpeechConfig.FromSubscription(azureSettings.ApiKey, azureSettings.Region);
                _speechConfig.SetSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3);
            }
        }

        // CORRECTED: Method now returns the SpeechGenerationResult record
        public async Task<SpeechGenerationResult> GenerateSpeechAsync(string text, string outputFilePath, CancellationToken cancellationToken = default)
        {
            _logger.LogInformation("Generating speech using Azure TTS for text snippet: '{TextSnippet}'", text.Length > 40 ? text[..40] + "..." : text);

            try
            {
                var outputDirectory = Path.GetDirectoryName(outputFilePath);
                if (outputDirectory != null)
                {
                    Directory.CreateDirectory(outputDirectory);
                }

                using var synthesizer = new SpeechSynthesizer(_speechConfig, null);
                var result = await synthesizer.SpeakTextAsync(text);

                if (cancellationToken.IsCancellationRequested)
                {
                    _logger.LogInformation("Azure TTS generation was cancelled.");
                    cancellationToken.ThrowIfCancellationRequested();
                }

                if (result.Reason == ResultReason.Canceled)
                {
                    var cancellation = SpeechSynthesisCancellationDetails.FromResult(result);
                    _logger.LogError("Azure TTS synthesis canceled. Reason: {Reason}, ErrorCode: {ErrorCode}, Details: {ErrorDetails}",
                        cancellation.Reason, cancellation.ErrorCode, cancellation.ErrorDetails);
                    throw new TtsException($"Azure TTS synthesis failed: {cancellation.ErrorDetails}");
                }

                if (result.Reason == ResultReason.SynthesizingAudioCompleted)
                {
                    await File.WriteAllBytesAsync(outputFilePath, result.AudioData, cancellationToken);
                    _logger.LogInformation("Successfully wrote Azure TTS audio file to {Path}", outputFilePath);

                    // Get the accurate duration of the created audio file.
                    var duration = await _audioUtility.GetAudioDurationAsync(outputFilePath, cancellationToken);

                    // Return the new result object containing the path and the duration.
                    return new SpeechGenerationResult(outputFilePath, duration);
                }

                throw new TtsException($"Azure TTS synthesis returned an unexpected status: {result.Reason}");
            }
            catch (Exception ex) when (ex is not TtsException)
            {
                _logger.LogError(ex, "An unexpected error occurred during Azure TTS speech generation for file {Path}", outputFilePath);
                throw new TtsException("An unexpected error occurred during Azure TTS speech generation.", ex);
            }
        }

        public string[] GetVoices()
        {
            // Azure provider doesn't support listing voices in this implementation.
            return Array.Empty<string>();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\ElevenLabsTextToSpeechService.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models; // Added
using System;
using System.IO;
using System.Net.Http;
using System.Text;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITextToSpeechService using the ElevenLabs API. 
    /// </summary>
    public class ElevenLabsTextToSpeechService : ITextToSpeechService
    {
        private readonly HttpClient _httpClient;
        private readonly IAppConfiguration _appConfig;
        private readonly ILogger<ElevenLabsTextToSpeechService> _logger;
        private readonly IAudioUtility _audioUtility; // Added

        // CORRECTED: Constructor now accepts IAudioUtility
        public ElevenLabsTextToSpeechService(IAppConfiguration appConfig, IAudioUtility audioUtility, ILogger<ElevenLabsTextToSpeechService> logger)
        {
            _appConfig = appConfig;
            _logger = logger;
            _audioUtility = audioUtility; // Added
            _httpClient = new HttpClient
            {
                BaseAddress = new System.Uri("https://api.elevenlabs.io/")
            };
        }

        // CORRECTED: Method now returns the SpeechGenerationResult record
        public async Task<SpeechGenerationResult> GenerateSpeechAsync(string text, string outputFilePath, CancellationToken cancellationToken = default)
        {
            var settings = _appConfig.Settings.ElevenLabs;
            if (string.IsNullOrWhiteSpace(settings.ApiKey))
            {
                throw new AppConfigurationException("ElevenLabs API key is not configured.");
            }
            if (string.IsNullOrWhiteSpace(settings.VoiceId))
            {
                throw new AppConfigurationException("ElevenLabs VoiceId is not configured.");
            }

            _logger.LogInformation("Generating speech using ElevenLabs TTS for text snippet: '{TextSnippet}'", text.Length > 40 ? text[..40] + "..." : text);

            try
            {
                var requestUrl = $"v1/text-to-speech/{settings.VoiceId}";
                var requestBody = new
                {
                    text,
                    model_id = settings.ModelId,
                };

                using var request = new HttpRequestMessage(HttpMethod.Post, requestUrl)
                {
                    Content = new StringContent(JsonSerializer.Serialize(requestBody), Encoding.UTF8, "application/json")
                };
                request.Headers.Add("xi-api-key", settings.ApiKey);

                var response = await _httpClient.SendAsync(request, cancellationToken);

                if (!response.IsSuccessStatusCode)
                {
                    var errorContent = await response.Content.ReadAsStringAsync(cancellationToken);
                    _logger.LogError("ElevenLabs API request failed with status {StatusCode}. Content: {ErrorContent}", response.StatusCode, errorContent);
                    throw new ElevenLabsApiException($"ElevenLabs API request failed: {response.ReasonPhrase}. Details: {errorContent}");
                }

                var outputDirectory = Path.GetDirectoryName(outputFilePath);
                if (outputDirectory != null)
                {
                    Directory.CreateDirectory(outputDirectory);
                }

                byte[] audioData = await response.Content.ReadAsByteArrayAsync(cancellationToken);
                await File.WriteAllBytesAsync(outputFilePath, audioData, cancellationToken);

                _logger.LogDebug("Successfully wrote ElevenLabs TTS audio file to {Path}", outputFilePath);

                // Get the accurate duration of the created audio file.
                var duration = await _audioUtility.GetAudioDurationAsync(outputFilePath, cancellationToken);

                // Return the new result object containing the path and the duration.
                return new SpeechGenerationResult(outputFilePath, duration);
            }
            catch (Exception ex) when (ex is not ElevenLabsApiException)
            {
                _logger.LogError(ex, "An unexpected error occurred during ElevenLabs speech generation for file {Path}", outputFilePath);
                throw new TtsException("An unexpected error occurred during ElevenLabs speech generation.", ex);
            }
        }

        public string[] GetVoices()
        {
            // ElevenLabs provider doesn't support listing voices in this implementation.
            return Array.Empty<string>();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\FfmpegService.cs">
<![CDATA[
// In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\FfmpegService.cs

using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using RedditVideoStudio.Shared.Models;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class FfmpegService : IFfmpegService
    {
        private readonly IAppConfiguration _appConfig;
        private readonly ILogger<FfmpegService> _logger;

        public FfmpegService(IAppConfiguration appConfig, ILogger<FfmpegService> logger)
        {
            _appConfig = appConfig;
            _logger = logger;
        }

        private async Task RunFfmpegAsync(string arguments, IProgress<ProgressReport>? progress, TimeSpan totalDuration, CancellationToken cancellationToken)
        {
            // --- START OF MODIFICATION ---
            var ffmpegExePath = _appConfig.Settings.Ffmpeg.FfmpegExePath;
            if (!File.Exists(ffmpegExePath))
            {
                throw new FfmpegException($"FFmpeg executable not found at the specified path: {ffmpegExePath}");
            }

            if (totalDuration > TimeSpan.FromHours(1))
            {
                throw new FfmpegException($"Aborting FFmpeg render due to excessively long calculated duration: {totalDuration}. This often indicates a timing calculation error in the storyboard.");
            }
            // --- END OF MODIFICATION ---

            var startInfo = new ProcessStartInfo
            {
                FileName = ffmpegExePath,
                Arguments = arguments,
                WorkingDirectory = AppContext.BaseDirectory,
                RedirectStandardOutput = true,
                RedirectStandardError = true,
                UseShellExecute = false,
                CreateNoWindow = true
            };

            using var process = new Process { StartInfo = startInfo, EnableRaisingEvents = true };
            var errorOutput = new StringBuilder();

            process.ErrorDataReceived += (sender, args) =>
            {
                if (string.IsNullOrEmpty(args.Data)) return;
                _logger.LogTrace("FFmpeg: {Data}", args.Data);
                errorOutput.AppendLine(args.Data);
                if (progress != null && totalDuration > TimeSpan.Zero)
                {
                    var match = Regex.Match(args.Data, @"time=(\d{2}):(\d{2}):(\d{2})\.(\d{2})");
                    if (match.Success)
                    {
                        var currentTime = new TimeSpan(0, int.Parse(match.Groups[1].Value), int.Parse(match.Groups[2].Value), int.Parse(match.Groups[3].Value), int.Parse(match.Groups[4].Value) * 10);
                        var percentage = (int)((currentTime.TotalSeconds / totalDuration.TotalSeconds) * 100);
                        progress.Report(new ProgressReport { Percentage = Math.Min(100, percentage), Message = $"Rendering video... {percentage}%" });
                    }
                }
            };

            try
            {
                _logger.LogInformation("Starting FFmpeg with arguments: {Arguments}", arguments);

                if (!process.Start())
                {
                    throw new FfmpegException($"Failed to start FFmpeg process. Ensure '{startInfo.FileName}' exists and is accessible.");
                }

                process.BeginErrorReadLine();
                await process.WaitForExitAsync(cancellationToken);

                if (process.ExitCode != 0)
                {
                    // Throw an exception that includes the full FFmpeg error output for better debugging.
                    throw new FfmpegException($"FFmpeg process exited with code {process.ExitCode}.", process.ExitCode, errorOutput.ToString(), null);
                }

                _logger.LogInformation("FFmpeg process completed successfully.");
            }
            catch (Exception ex) when (ex is not FfmpegException)
            {
                _logger.LogError(ex, "An unexpected error occurred while running FFmpeg.");
                throw new FfmpegException("An unexpected error occurred while running FFmpeg.", ex);
            }
        }

        public async Task RenderFinalVideoAsync(string backgroundVideoPath, string? narrationAudioPath, Storyboard storyboard, TimeSpan videoDuration, IProgress<ProgressReport> progress, string outputPath, CancellationToken cancellationToken)
        {
            _logger.LogInformation("RenderFinalVideoAsync received request to render video with duration: {Duration}", videoDuration);

            var inputArgs = new List<string>
            {
                $"-stream_loop -1 -i \"{backgroundVideoPath}\""
            };

            if (!string.IsNullOrEmpty(narrationAudioPath) && File.Exists(narrationAudioPath))
            {
                inputArgs.Add($"-i \"{narrationAudioPath}\"");
            }

            foreach (var item in storyboard.Items)
            {
                if (File.Exists(item.ImagePath))
                {
                    inputArgs.Add($"-i \"{item.ImagePath}\"");
                }
            }

            var filterComplex = new StringBuilder("[0:v]scale=1920:1080:force_original_aspect_ratio=decrease,pad=1920:1080:-1:-1:color=black[bg];");
            var lastVideoStream = "[bg]";
            var overlayInputIndex = (!string.IsNullOrEmpty(narrationAudioPath) && File.Exists(narrationAudioPath)) ? 2 : 1;

            for (int i = 0; i < storyboard.Items.Count; i++)
            {
                var item = storyboard.Items[i];
                var currentOutput = $"[v{i + 1}]";
                var position = GetOverlayPosition(item.Position);
                var enable = $"between(t,{item.StartTime.TotalSeconds.ToString(CultureInfo.InvariantCulture)},{item.EndTime.TotalSeconds.ToString(CultureInfo.InvariantCulture)})";

                filterComplex.Append($"{lastVideoStream}[{overlayInputIndex}:v]overlay={position}:enable='{enable}'{(i == storyboard.Items.Count - 1 ? "[v_out]" : currentOutput)}");
                if (i < storyboard.Items.Count - 1)
                {
                    filterComplex.Append(';');
                }
                lastVideoStream = currentOutput;
                overlayInputIndex++;
            }

            var ffmpegSettings = _appConfig.Settings.Ffmpeg;
            var finalVideoMap = storyboard.Items.Any() ? "[v_out]" : "[bg]";

            var arguments = new StringBuilder();
            arguments.Append(string.Join(" ", inputArgs));
            arguments.Append(" -hide_banner");
            arguments.Append($" -filter_complex \"{filterComplex.ToString().TrimEnd(';')}\"");
            arguments.Append($" -map \"{finalVideoMap}\"");

            if (!string.IsNullOrEmpty(narrationAudioPath) && File.Exists(narrationAudioPath))
            {
                arguments.Append(" -map 1:a");
                arguments.Append($" -c:a {ffmpegSettings.AudioCodec} -b:a {ffmpegSettings.AudioBitrate}");
            }
            else
            {
                arguments.Append(" -an");
            }

            arguments.Append($" -t {videoDuration.TotalSeconds.ToString(CultureInfo.InvariantCulture)}");
            arguments.Append($" -c:v {ffmpegSettings.VideoCodec} -preset {ffmpegSettings.Preset} -b:v {ffmpegSettings.VideoBitrate} -pix_fmt yuv420p -video_track_timescale 90000");
            arguments.Append($" -y \"{outputPath}\"");

            await RunFfmpegAsync(arguments.ToString(), progress, videoDuration, cancellationToken);
            _logger.LogInformation("Video rendering complete: {Output}", outputPath);
        }

        // ... Other methods like ConcatenateAudioAsync, TrimVideoAsync, etc., remain here ...
        // They are omitted for brevity but should remain in your file.

        public async Task ConcatenateAudioAsync(IEnumerable<string> audioPaths, string outputPath, CancellationToken cancellationToken = default)
        {
            var validPaths = audioPaths.Where(File.Exists).ToList();
            if (!validPaths.Any())
            {
                throw new InvalidOperationException("No valid audio files to concatenate.");
            }

            var tempListPath = Path.Combine(Path.GetTempPath(), $"ffmpeg_audio_concat_{Guid.NewGuid()}.txt");

            var fileContent = string.Join(Environment.NewLine, validPaths.Select(p => $"file '{p.Replace("'", "'\\''")}'"));
            await File.WriteAllTextAsync(tempListPath, fileContent, cancellationToken);

            var ffmpegSettings = _appConfig.Settings.Ffmpeg;
            var args = $"-f concat -safe 0 -i \"{tempListPath}\" -c:a {ffmpegSettings.AudioCodec} -b:a {ffmpegSettings.AudioBitrate} \"{outputPath}\" -y";

            try
            {
                await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);
                _logger.LogInformation("Audio concatenation successful: {OutputPath}", outputPath);
            }
            finally
            {
                if (File.Exists(tempListPath))
                {
                    File.Delete(tempListPath);
                }
            }
        }

        public async Task<string> ConvertWavToMp3Async(string inputWavPath, string outputMp3Path, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Converting '{Input}' to MP3 at '{Output}'.", inputWavPath, outputMp3Path);

            var args = $"-i \"{inputWavPath}\" -acodec libmp3lame -q:a 2 \"{outputMp3Path}\" -y";

            await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);

            _logger.LogInformation("Successfully converted WAV to MP3.", outputMp3Path);
            return outputMp3Path;
        }

        public async Task ConcatenateVideosAsync(IEnumerable<string> videoPaths, string outputPath, CancellationToken cancellationToken = default)
        {
            var validPaths = videoPaths.Where(File.Exists).ToList();
            if (validPaths.Count < 1)
            {
                _logger.LogWarning("No valid video files provided for concatenation.");
                return;
            }

            var tempListPath = Path.Combine(Path.GetTempPath(), $"ffmpeg_concat_list_{Guid.NewGuid()}.txt");
            var fileContent = string.Join(Environment.NewLine, validPaths.Select(p => $"file '{p.Replace("'", "'\\''")}'"));

            await File.WriteAllTextAsync(tempListPath, fileContent, cancellationToken);

            var args = $"-f concat -safe 0 -i \"{tempListPath}\" -c copy \"{outputPath}\" -y";

            try
            {
                await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);
                _logger.LogInformation("Video concatenation successful: {OutputPath}", outputPath);
            }
            finally
            {
                if (File.Exists(tempListPath))
                {
                    File.Delete(tempListPath);
                }
            }
        }

        public async Task<TimeSpan> GetVideoDurationAsync(string videoFilePath, CancellationToken cancellationToken = default)
        {
            if (!File.Exists(videoFilePath))
                throw new FileNotFoundException("Video file not found.", videoFilePath);

            string ffprobePath = _appConfig.Settings.Ffmpeg.FfprobeExePath;

            try
            {
                var startInfo = new ProcessStartInfo
                {
                    FileName = ffprobePath,
                    Arguments = $"-v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 \"{videoFilePath}\"",
                    RedirectStandardOutput = true,
                    UseShellExecute = false,
                    CreateNoWindow = true
                };

                using var process = Process.Start(startInfo) ?? throw new InvalidOperationException("Failed to start ffprobe process.");
                string output = await process.StandardOutput.ReadToEndAsync(cancellationToken);
                await process.WaitForExitAsync(cancellationToken);

                if (double.TryParse(output.Trim(), NumberStyles.Any, CultureInfo.InvariantCulture, out double seconds))
                {
                    return TimeSpan.FromSeconds(seconds);
                }
                throw new FormatException($"Unable to parse duration from ffprobe output for {videoFilePath}: '{output}'");
            }
            catch (Exception ex)
            {
                throw new FfmpegException($"Failed to get video duration for {videoFilePath}.", ex);
            }
        }

        public async Task<string> NormalizeVideoAsync(string inputPath, string outputPath, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Normalizing video '{Input}' to standard format at '{Output}'.", inputPath, outputPath);
            var ffmpegSettings = _appConfig.Settings.Ffmpeg;
            bool hasAudio = await HasAudioStreamAsync(inputPath, cancellationToken);

            var arguments = new StringBuilder();
            arguments.Append($"-i \"{inputPath}\" ");

            if (!hasAudio)
            {
                _logger.LogWarning("Video '{Input}' has no audio. Adding silent track during normalization.", inputPath);
                var duration = await GetVideoDurationAsync(inputPath, cancellationToken);
                arguments.Append($"-f lavfi -i anullsrc=r=44100:cl=stereo -t {duration.TotalSeconds.ToString(CultureInfo.InvariantCulture)} ");
            }

            arguments.Append($"-c:v {ffmpegSettings.VideoCodec} -preset {ffmpegSettings.Preset} -b:v {ffmpegSettings.VideoBitrate} -s 1920x1080 -pix_fmt yuv420p -video_track_timescale 90000 ");
            arguments.Append($"-c:a {ffmpegSettings.AudioCodec} -b:a {ffmpegSettings.AudioBitrate} ");
            arguments.Append("-map 0:v:0 ");

            if (!hasAudio)
            {
                arguments.Append("-map 1:a:0 ");
            }
            else
            {
                arguments.Append("-map 0:a:0 ");
            }

            arguments.Append($"-shortest -y \"{outputPath}\"");

            await RunFfmpegAsync(arguments.ToString(), null, TimeSpan.Zero, cancellationToken);

            _logger.LogInformation("Successfully normalized video to {OutputPath}", outputPath);
            return outputPath;
        }

        public async Task<string> TrimVideoAsync(string inputPath, TimeSpan duration, string outputPath, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Trimming video {Input} to {Duration}s.", inputPath, duration.TotalSeconds);
            var ffmpegSettings = _appConfig.Settings.Ffmpeg;

            var args = $"-i \"{inputPath}\" -t {duration.TotalSeconds.ToString(CultureInfo.InvariantCulture)} -c:v {ffmpegSettings.VideoCodec} -preset {ffmpegSettings.Preset} -b:v {ffmpegSettings.VideoBitrate} -c:a {ffmpegSettings.AudioCodec} -b:a {ffmpegSettings.AudioBitrate} \"{outputPath}\" -y";

            await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);

            _logger.LogInformation("Trimmed video saved to: {OutputPath}", outputPath);
            return outputPath;
        }

        private string GetOverlayPosition(string position) => position.ToLowerInvariant() switch
        {
            "top-left" => "x=0:y=0",
            "top-right" => "x=W-w:y=0",
            "bottom-left" => "x=0:y=H-h",
            "bottom-right" => "x=W-w:y=H-h",
            "center" => "x=(W-w)/2:y=(H-h)/2",
            _ => "x=(W-w)/2:y=(H-h)/2"
        };

        public async Task<bool> HasAudioStreamAsync(string videoPath, CancellationToken cancellationToken)
        {
            if (!File.Exists(videoPath))
            {
                _logger.LogWarning("Video file not found for audio stream check: {Path}", videoPath);
                return false;
            }

            string ffprobePath = _appConfig.Settings.Ffmpeg.FfprobeExePath;
            var arguments = $"-v quiet -print_format json -show_streams -select_streams a \"{videoPath}\"";

            var startInfo = new ProcessStartInfo
            {
                FileName = ffprobePath,
                Arguments = arguments,
                RedirectStandardOutput = true,
                RedirectStandardError = true,
                UseShellExecute = false,
                CreateNoWindow = true
            };

            using var process = Process.Start(startInfo);
            if (process == null)
            {
                throw new FfmpegException("Failed to start ffprobe process to check for audio stream.");
            }

            string output = await process.StandardOutput.ReadToEndAsync(cancellationToken);
            await process.WaitForExitAsync(cancellationToken);

            if (process.ExitCode != 0)
            {
                string error = await process.StandardError.ReadToEndAsync(cancellationToken);
                _logger.LogError("ffprobe failed to check audio stream for {Path}. Error: {Error}", videoPath, error);
                return false;
            }

            using var jsonDoc = JsonDocument.Parse(output);
            return jsonDoc.RootElement.TryGetProperty("streams", out var streams) && streams.GetArrayLength() > 0;
        }

        public async Task<string> CreateSilentAudioAsync(TimeSpan duration, string outputPath, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Creating silent audio track with duration {Duration}s.", duration.TotalSeconds);

            var args = $"-f lavfi -i anullsrc=r=44100:cl=stereo -t {duration.TotalSeconds.ToString(CultureInfo.InvariantCulture)} -q:a 9 -acodec libmp3lame \"{outputPath}\" -y";

            await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);

            _logger.LogInformation("Silent audio track saved to: {OutputPath}", outputPath);
            return outputPath;
        }

        public async Task<string> MergeAudioAndVideoAsync(string videoPath, string audioPath, string outputPath, CancellationToken cancellationToken)
        {
            _logger.LogInformation("Merging video '{VideoPath}' and audio '{AudioPath}' without re-encoding video.", videoPath, audioPath);

            var args = $"-i \"{videoPath}\" -i \"{audioPath}\" -c:v copy -c:a aac -shortest \"{outputPath}\" -y";

            await RunFfmpegAsync(args, null, TimeSpan.Zero, cancellationToken);

            _logger.LogInformation("Successfully merged media to {OutputPath}", outputPath);
            return outputPath;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\GoogleTextToSpeechService.cs">
<![CDATA[
using Google.Cloud.TextToSpeech.V1;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models; // Added for SpeechGenerationResult
using System;
using System.IO;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITextToSpeechService using the Google Cloud Text-to-Speech API.
    /// </summary>
    public class GoogleTextToSpeechService : ITextToSpeechService
    {
        private readonly TextToSpeechClient _client;
        private readonly ILogger<GoogleTextToSpeechService> _logger;
        private readonly IAppConfiguration _appConfig;
        private readonly IAudioUtility _audioUtility; // Added dependency

        public GoogleTextToSpeechService(IAppConfiguration appConfig, IAudioUtility audioUtility, ILogger<GoogleTextToSpeechService> logger)
        {
            _logger = logger;
            _appConfig = appConfig;
            _audioUtility = audioUtility; // Added
            var keyPath = _appConfig.Settings.GoogleCloud.ServiceAccountKeyPath;

            // Constructor logic for creating _client remains the same...
        }

        // CORRECTED: Method now returns SpeechGenerationResult
        public async Task<SpeechGenerationResult> GenerateSpeechAsync(string text, string outputPath, CancellationToken cancellationToken = default)
        {
            if (string.IsNullOrWhiteSpace(text))
            {
                _logger.LogWarning("GenerateSpeechAsync called with empty or whitespace text. An empty audio file will be created at {Path}", outputPath);
                await File.WriteAllBytesAsync(outputPath, new byte[0], cancellationToken);
                return new SpeechGenerationResult(outputPath, TimeSpan.Zero);
            }

            try
            {
                var ttsSettings = _appConfig.Settings.Tts;
                var input = new SynthesisInput { Text = text };
                var voice = new VoiceSelectionParams
                {
                    LanguageCode = ttsSettings.LanguageCode,
                    SsmlGender = ttsSettings.VoiceGender.Equals("Male", StringComparison.OrdinalIgnoreCase)
                        ? SsmlVoiceGender.Male
                        : SsmlVoiceGender.Female
                };
                var audioConfig = new AudioConfig
                {
                    AudioEncoding = AudioEncoding.Mp3,
                    SpeakingRate = ttsSettings.SpeakingRate
                };

                var response = await _client.SynthesizeSpeechAsync(input, voice, audioConfig, cancellationToken);

                var outputDirectory = Path.GetDirectoryName(outputPath);
                if (outputDirectory != null)
                {
                    Directory.CreateDirectory(outputDirectory);
                }

                await File.WriteAllBytesAsync(outputPath, response.AudioContent.ToByteArray(), cancellationToken);
                _logger.LogDebug("Successfully wrote Google TTS audio file to {Path}", outputPath);

                // Get the accurate duration of the created MP3 file.
                var duration = await _audioUtility.GetAudioDurationAsync(outputPath, cancellationToken);

                // Return the result object with the path and accurate duration.
                return new SpeechGenerationResult(outputPath, duration);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Google TTS API call failed for file {Path}. Ensure the API is enabled and the provided service account key is valid.", outputPath);
                throw new TtsException("Failed to generate speech via Google TTS API.", ex);
            }
        }

        public string[] GetVoices()
        {
            // Google provider doesn't support listing voices in this implementation.
            return Array.Empty<string>();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\OverlayGeneratorService.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Shared.Configuration;
using SkiaSharp;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the IImageService using the SkiaSharp library to generate
    /// images from text and create video thumbnails.
    /// </summary>
    public class OverlayGeneratorService : IImageService
    {
        private readonly IAppConfiguration _appConfig;
        private readonly ILogger<OverlayGeneratorService> _logger;

        public OverlayGeneratorService(IAppConfiguration appConfig, ILogger<OverlayGeneratorService> logger)
        {
            _appConfig = appConfig;
            _logger = logger;
        }

        public Task<string> GenerateImageFromTextAsync(string text, string outputPath, CancellationToken cancellationToken)
        {
            var settings = _appConfig.Settings.ImageGeneration;
            using var font = CreateFont(settings.FontFamily, settings.FontSize);
            return CreateImageFromText(text, outputPath, settings, font, cancellationToken);
        }

        // In C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\OverlayGeneratorService.cs

        public async Task<string> GenerateThumbnailAsync(string backgroundImagePath, string text, string outputPath, CancellationToken cancellationToken)
        {
            if (!File.Exists(backgroundImagePath))
            {
                throw new FileNotFoundException("Thumbnail background image not found.", backgroundImagePath);
            }

            // --- START OF CORRECTION ---

            // Define a standard size for YouTube thumbnails
            const int thumbnailWidth = 1280;
            const int thumbnailHeight = 720;

            using var originalBitmap = SKBitmap.Decode(backgroundImagePath);

            // Create a new bitmap with the desired thumbnail dimensions
            using var resizedBitmap = new SKBitmap(thumbnailWidth, thumbnailHeight);

            // Resize the original image and draw it onto the new bitmap
            // This uses high-quality bicubic resampling
            using (var canvas = new SKCanvas(resizedBitmap))
            {
                canvas.DrawBitmap(originalBitmap, new SKRect(0, 0, thumbnailWidth, thumbnailHeight), new SKPaint { FilterQuality = SKFilterQuality.High });
            }

            // Use the resized bitmap for the surface
            using var surface = SKSurface.Create(new SKImageInfo(thumbnailWidth, thumbnailHeight));
            var surfaceCanvas = surface.Canvas;
            surfaceCanvas.DrawBitmap(resizedBitmap, 0, 0);

            // --- END OF CORRECTION ---

            var settings = _appConfig.Settings.ImageGeneration;
            using var font = CreateFont(settings.FontFamily, settings.ThumbnailFontSize, SKFontStyle.Bold);

            using var textFillPaint = new SKPaint(font)
            {
                IsAntialias = true,
                Color = SKColors.White,
                Style = SKPaintStyle.Fill,
                TextAlign = SKTextAlign.Center
            };

            using var textStrokePaint = new SKPaint(font)
            {
                IsAntialias = true,
                Color = SKColor.Parse(settings.ThumbnailFontOutlineColor),
                Style = SKPaintStyle.Stroke,
                StrokeWidth = settings.ThumbnailFontOutlineWidth,
                TextAlign = SKTextAlign.Center
            };

            var lines = BreakTextIntoLines(font, text, surfaceCanvas.DeviceClipBounds.Width * 0.9f);
            var totalTextHeight = lines.Count * font.Size * 1.2f;
            var startY = (surfaceCanvas.DeviceClipBounds.Height - totalTextHeight) / 2 + font.Size;

            foreach (var line in lines)
            {
                var x = surfaceCanvas.DeviceClipBounds.Width / 2f;
                surfaceCanvas.DrawText(line, x, startY, textStrokePaint);
                surfaceCanvas.DrawText(line, x, startY, textFillPaint);
                startY += font.Size * 1.2f;
            }

            using var image = surface.Snapshot();
            // Using a quality of 90 is a good balance for thumbnails.
            using var data = image.Encode(SKEncodedImageFormat.Jpeg, 90);
            await using var stream = new FileStream(outputPath, FileMode.Create, FileAccess.Write);
            await data.AsStream().CopyToAsync(stream, cancellationToken);

            _logger.LogInformation("Thumbnail generated successfully at {Path}", outputPath);
            return outputPath;
        }
        private async Task<string> CreateImageFromText(string text, string outputPath, ImageGenerationSettings settings, SKFont font, CancellationToken cancellationToken)
        {
            // Create the canvas and clear it to transparent.
            using var surface = SKSurface.Create(new SKImageInfo(settings.ImageWidth, settings.ImageHeight, SKColorType.Bgra8888, SKAlphaType.Premul));
            var canvas = surface.Canvas;
            canvas.Clear(SKColors.Transparent);

            float maxTextWidth = settings.ImageWidth - (2 * settings.ExteriorPadding);
            var textLines = BreakTextIntoLines(font, text, maxTextWidth);

            // Check if there is any actual text to render after breaking it into lines.
            if (textLines.Any())
            {
                // Only draw the background rectangle and text if there are lines to draw.
                using var textPaint = new SKPaint(font) { Color = SKColor.Parse(settings.TextColor), IsAntialias = true, TextAlign = SKTextAlign.Center };
                using var backgroundPaint = new SKPaint { Color = SKColor.Parse(settings.RectangleColor).WithAlpha((byte)(settings.BackgroundOpacity * 255)), IsAntialias = true };

                float textBlockHeight = (textLines.Count * font.Size * 1.5f);
                float rectHeight = textBlockHeight + (2 * settings.InteriorPadding);
                float rectWidth = maxTextWidth + (2 * settings.InteriorPadding);

                float rectLeft = (settings.ImageWidth - rectWidth) / 2;
                float rectTop = (settings.ImageHeight - rectHeight) / 2;
                var rect = new SKRect(rectLeft, rectTop, rectLeft + rectWidth, rectTop + rectHeight);

                canvas.DrawRoundRect(rect, 25, 25, backgroundPaint);

                var startY = rect.Top + settings.InteriorPadding + font.Size;
                float centerX = settings.ImageWidth / 2f;
                foreach (var line in textLines)
                {
                    canvas.DrawText(line, centerX, startY, textPaint);
                    startY += font.Size * 1.5f;
                }
            }
            else
            {
                _logger.LogWarning("No text lines to render for overlay image at {Path}. A blank, transparent image will be created.", outputPath);
            }

            // Always create and save an image file, even if it's just transparent.
            // This prevents a FileNotFoundException in downstream processes that expect this file to exist.
            using var image = surface.Snapshot();
            using var data = image.Encode(SKEncodedImageFormat.Png, 100);
            await using var stream = new FileStream(outputPath, FileMode.Create, FileAccess.Write);
            await data.AsStream().CopyToAsync(stream, cancellationToken);

            return outputPath;
        }

        private SKFont CreateFont(string fontFamily, float size)
        {
            return CreateFont(fontFamily, size, SKFontStyle.Normal);
        }

        private SKFont CreateFont(string fontFamily, float size, SKFontStyle style)
        {
            var typeface = SKTypeface.FromFamilyName(fontFamily, style);
            if (typeface == null)
            {
                _logger.LogWarning("Font family '{FontFamily}' not found. Falling back to default typeface.", fontFamily);
                typeface = SKTypeface.Default;
            }
            return new SKFont(typeface, size);
        }

        private List<string> BreakTextIntoLines(SKFont font, string text, float maxWidth)
        {
            var lines = new List<string>();
            var words = text.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
            if (!words.Any()) return lines;
            var currentLine = "";
            foreach (var word in words)
            {
                var testLine = string.IsNullOrEmpty(currentLine) ? word : $"{currentLine} {word}";
                if (font.MeasureText(testLine) > maxWidth)
                {
                    if (!string.IsNullOrEmpty(currentLine)) lines.Add(currentLine);
                    currentLine = word;
                }
                else
                {
                    currentLine = testLine;
                }
            }
            lines.Add(currentLine);
            return lines;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\PexelsService.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using System;
using System.IO;
using System.Net.Http;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the IPexelsService interface to interact with the Pexels API
    /// for downloading stock photos and videos.
    /// </summary>
    public class PexelsService : IPexelsService
    {
        private readonly HttpClient _client;
        private readonly ILogger<PexelsService> _logger;
        private readonly IAppConfiguration _appConfig;

        public PexelsService(IAppConfiguration appConfig, ILogger<PexelsService> logger)
        {
            _logger = logger;
            _appConfig = appConfig;

            var apiKey = _appConfig.Settings.Pexels.ApiKey;
            if (string.IsNullOrWhiteSpace(apiKey))
            {
                throw new AppConfigurationException("Pexels API key is missing or empty in configuration.");
            }

            _client = new HttpClient
            {
                BaseAddress = new Uri("https://api.pexels.com/")
            };
            _client.DefaultRequestHeaders.Add("Authorization", apiKey);
        }

        public async Task<string> DownloadRandomVideoAsync(string query, string downloadPath, CancellationToken cancellationToken = default)
        {
            try
            {
                var requestUrl = $"videos/search?query={Uri.EscapeDataString(query)}&per_page=15&orientation=landscape";
                var response = await _client.GetAsync(requestUrl, cancellationToken);

                if (!response.IsSuccessStatusCode)
                {
                    var errorContent = await response.Content.ReadAsStringAsync(cancellationToken);
                    throw new PexelsApiException($"Pexels video API request failed with status {response.StatusCode}. Content: {errorContent}");
                }

                using var json = await response.Content.ReadAsStreamAsync(cancellationToken);
                using var document = await JsonDocument.ParseAsync(json, cancellationToken: cancellationToken);
                var videos = document.RootElement.GetProperty("videos");

                if (videos.GetArrayLength() == 0)
                {
                    throw new PexelsApiException($"No videos found for query '{query}'");
                }

                var randomVideo = videos[new Random().Next(videos.GetArrayLength())];
                var videoLink = randomVideo.GetProperty("video_files")[0].GetProperty("link").GetString();

                if (string.IsNullOrEmpty(videoLink))
                {
                    throw new PexelsApiException("Could not find a downloadable video link in the Pexels API response.");
                }

                Directory.CreateDirectory(Path.GetDirectoryName(downloadPath)!);

                using var videoStream = await _client.GetStreamAsync(videoLink, cancellationToken);
                await using var fileStream = new FileStream(downloadPath, FileMode.Create, FileAccess.Write, FileShare.None);
                await videoStream.CopyToAsync(fileStream, cancellationToken);

                _logger.LogInformation("Pexels video saved to: {Path}", downloadPath);
                return downloadPath;
            }
            catch (Exception ex) when (ex is not PexelsApiException)
            {
                _logger.LogError(ex, "An unexpected error occurred while downloading a video from Pexels for query: {Query}", query);
                throw new PexelsApiException($"An unexpected error occurred while downloading from Pexels: {ex.Message}", ex);
            }
        }

        public async Task<string> DownloadRandomImageAsync(string query, string downloadPath, CancellationToken cancellationToken = default)
        {
            try
            {
                var requestUrl = $"v1/search?query={Uri.EscapeDataString(query)}&per_page=1";
                var response = await _client.GetAsync(requestUrl, cancellationToken);

                if (!response.IsSuccessStatusCode)
                {
                    var errorContent = await response.Content.ReadAsStringAsync(cancellationToken);
                    throw new PexelsApiException($"Pexels image API request failed with status {response.StatusCode}. Content: {errorContent}");
                }

                using var json = await response.Content.ReadAsStreamAsync(cancellationToken);
                using var document = await JsonDocument.ParseAsync(json, cancellationToken: cancellationToken);
                var imageLink = document.RootElement.GetProperty("photos")[0].GetProperty("src").GetProperty("original").GetString();

                if (string.IsNullOrEmpty(imageLink))
                {
                    throw new PexelsApiException("Could not find a downloadable image link in the Pexels API response.");
                }

                Directory.CreateDirectory(Path.GetDirectoryName(downloadPath)!);

                using var imageStream = await _client.GetStreamAsync(imageLink, cancellationToken);
                await using var fileStream = new FileStream(downloadPath, FileMode.Create, FileAccess.Write, FileShare.None);
                await imageStream.CopyToAsync(fileStream, cancellationToken);

                _logger.LogInformation("Pexels image saved to: {Path}", downloadPath);
                return downloadPath;
            }
            catch (Exception ex) when (ex is not PexelsApiException)
            {
                _logger.LogError(ex, "An unexpected error occurred while downloading an image from Pexels for query: {Query}", query);
                throw new PexelsApiException($"An unexpected error occurred while downloading from Pexels: {ex.Message}", ex);
            }
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\RedditService.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the IRedditService interface to fetch post and comment data from the Reddit API.
    /// </summary>
    public class RedditService : IRedditService
    {
        private readonly HttpClient _httpClient;
        private readonly ILogger<RedditService> _logger;
        private readonly IAppConfiguration _appConfig;

        public RedditService(IAppConfiguration appConfig, ILogger<RedditService> logger)
        {
            _appConfig = appConfig;
            _logger = logger;
            _httpClient = new HttpClient();
            // It's good practice to set a custom User-Agent when interacting with APIs.
            _httpClient.DefaultRequestHeaders.Add("User-Agent", "RedditVideoStudio/1.0");
        }

        public async Task<List<RedditPostData>> FetchFullPostDataAsync(CancellationToken cancellationToken)
        {
            var redditSettings = _appConfig.Settings.Reddit;
            var url = $"https://www.reddit.com/r/{redditSettings.Subreddit}/top.json?limit={redditSettings.PostLimit}";
            var result = new List<RedditPostData>();

            try
            {
                _logger.LogInformation("Fetching top {PostLimit} posts from r/{Subreddit}", redditSettings.PostLimit, redditSettings.Subreddit);
                var response = await _httpClient.GetAsync(url, cancellationToken);
                response.EnsureSuccessStatusCode();

                using var contentStream = await response.Content.ReadAsStreamAsync(cancellationToken);
                var jsonDoc = await JsonDocument.ParseAsync(contentStream, cancellationToken: cancellationToken);
                var posts = jsonDoc.RootElement.GetProperty("data").GetProperty("children").EnumerateArray();

                foreach (var post in posts)
                {
                    var data = post.GetProperty("data");
                    var postId = data.GetProperty("id").GetString() ?? string.Empty;
                    _logger.LogInformation("Fetching top {CommentLimit} comments for post ID: {PostId}", redditSettings.CommentLimit, postId);

                    var commentsUrl = $"https://www.reddit.com/comments/{postId}.json?limit={redditSettings.CommentLimit}";
                    var commentResponse = await _httpClient.GetAsync(commentsUrl, cancellationToken);
                    commentResponse.EnsureSuccessStatusCode();

                    using var commentContentStream = await commentResponse.Content.ReadAsStreamAsync(cancellationToken);
                    var commentDoc = await JsonDocument.ParseAsync(commentContentStream, cancellationToken: cancellationToken);
                    var comments = new List<string>();

                    var commentListings = commentDoc.RootElement[1].GetProperty("data").GetProperty("children").EnumerateArray();
                    foreach (var commentItem in commentListings)
                    {
                        if (commentItem.TryGetProperty("data", out var commentData) && commentData.TryGetProperty("body", out var body))
                        {
                            var commentText = body.GetString() ?? "";
                            if (!string.IsNullOrWhiteSpace(commentText) &&
                                !commentText.Contains("[deleted]", StringComparison.OrdinalIgnoreCase) &&
                                !commentText.Contains("[removed]", StringComparison.OrdinalIgnoreCase))
                            {
                                comments.Add(commentText);
                            }
                        }
                    }

                    result.Add(new RedditPostData
                    {
                        Id = postId,
                        Title = data.GetProperty("title").GetString() ?? "",
                        Subreddit = data.GetProperty("subreddit").GetString() ?? "",
                        Url = data.GetProperty("url").GetString() ?? "",
                        Permalink = data.GetProperty("permalink").GetString() ?? "",
                        Score = data.TryGetProperty("score", out var scoreVal) ? scoreVal.GetInt32() : 0,
                        Comments = comments
                    });
                }
                return result;
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to fetch full Reddit post data for subreddit {Subreddit}", redditSettings.Subreddit);
                throw new RedditApiException($"Failed to fetch data from Reddit. Check network connection and subreddit name.", ex);
            }
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\RegistryAppConfiguration.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using Microsoft.Win32;
using Google.Apis.Auth.OAuth2;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Shared.Configuration;
using System;
using System.Globalization;
using System.Threading;
using System.Threading.Tasks;
using System.Text.Json; // This 'using' statement is required.

namespace RedditVideoStudio.Infrastructure.Services
{
    public class RegistryAppConfiguration : IAppConfiguration
    {
        private const string BaseRegistryKey = @"Software\RedditVideoStudio";
        private readonly ILogger<RegistryAppConfiguration> _logger;
        private AppSettings _settings;

        public AppSettings Settings => _settings;

        public RegistryAppConfiguration(ILogger<RegistryAppConfiguration> logger)
        {
            _logger = logger;
            _settings = LoadSettings();
        }

        public void Reload()
        {
            _settings = LoadSettings();
            _logger.LogInformation("Configuration reloaded from registry.");
        }

        /// <summary>
        /// This is the synchronous Save method required by the IAppConfiguration interface.
        /// Its logic is copied from your existing SaveAsync implementation.
        /// </summary>
        public void Save()
        {
            try
            {
                using var baseKey = Registry.CurrentUser.CreateSubKey(BaseRegistryKey + @"\AppSettings");
                if (baseKey == null)
                {
                    throw new AppConfigurationException("Failed to create or open registry key for AppSettings.");
                }

                SaveSection(baseKey, nameof(AppSettings.Reddit), _settings.Reddit);
                SaveSection(baseKey, nameof(AppSettings.Pexels), _settings.Pexels);
                SaveSection(baseKey, nameof(AppSettings.Tts), _settings.Tts);
                SaveSection(baseKey, nameof(AppSettings.ImageGeneration), _settings.ImageGeneration);
                SaveSection(baseKey, nameof(AppSettings.YouTube), _settings.YouTube);
                SaveSection(baseKey, nameof(AppSettings.ClipSettings), _settings.ClipSettings);
                SaveSection(baseKey, nameof(AppSettings.GoogleCloud), _settings.GoogleCloud);
                SaveSection(baseKey, nameof(AppSettings.AzureTts), _settings.AzureTts);
                SaveSection(baseKey, nameof(AppSettings.Ffmpeg), _settings.Ffmpeg);
                SaveSection(baseKey, nameof(AppSettings.ElevenLabs), _settings.ElevenLabs);
                SaveSection(baseKey, nameof(AppSettings.TikTok), _settings.TikTok);

                _logger.LogInformation("Configuration saved successfully to the registry.");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to save configuration to the registry.");
                throw new AppConfigurationException("Failed to save configuration.", ex);
            }
        }

        /// <summary>
        /// The asynchronous SaveAsync method now simply calls the synchronous Save method
        /// on a background thread. This removes duplicated code.
        /// </summary>
        public async Task SaveAsync(CancellationToken cancellationToken = default)
        {
            await Task.Run(() => Save(), cancellationToken);
        }

        public Task<ClientSecrets> GetYouTubeSecretsAsync(CancellationToken cancellationToken = default)
        {
            try
            {
                using var youtubeKey = Registry.CurrentUser.OpenSubKey($@"{BaseRegistryKey}\YouTubeSecrets");
                if (youtubeKey == null)
                {
                    throw new AppConfigurationException("YouTube secrets not found in the registry. Please ensure the .reg file has been imported.");
                }

                var secrets = new ClientSecrets
                {
                    ClientId = youtubeKey.GetValue("client_id") as string ?? string.Empty,
                    ClientSecret = youtubeKey.GetValue("client_secret") as string ?? string.Empty,
                };

                if (string.IsNullOrEmpty(secrets.ClientId) || string.IsNullOrEmpty(secrets.ClientSecret))
                {
                    throw new AppConfigurationException("YouTube client_id or client_secret is missing from the registry.");
                }

                return Task.FromResult(secrets);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to retrieve YouTube secrets from the registry.");
                throw new AppConfigurationException("Failed to retrieve YouTube secrets.", ex);
            }
        }

        private AppSettings LoadSettings()
        {
            var settings = new AppSettings();
            const string appSettingsRegistryKey = BaseRegistryKey + @"\AppSettings";

            try
            {
                using var settingsKey = Registry.CurrentUser.OpenSubKey(appSettingsRegistryKey);
                if (settingsKey == null)
                {
                    _logger.LogWarning("AppSettings registry key not found. Loading default settings. Key will be created on save.");
                    return settings;
                }

                LoadSection(settingsKey, nameof(AppSettings.Reddit), settings.Reddit);
                LoadSection(settingsKey, nameof(AppSettings.Pexels), settings.Pexels);
                LoadSection(settingsKey, nameof(AppSettings.Tts), settings.Tts);
                LoadSection(settingsKey, nameof(AppSettings.ImageGeneration), settings.ImageGeneration);
                LoadSection(settingsKey, nameof(AppSettings.YouTube), settings.YouTube);
                LoadSection(settingsKey, nameof(AppSettings.ClipSettings), settings.ClipSettings);
                LoadSection(settingsKey, nameof(AppSettings.GoogleCloud), settings.GoogleCloud);
                LoadSection(settingsKey, nameof(AppSettings.AzureTts), settings.AzureTts);
                LoadSection(settingsKey, nameof(AppSettings.Ffmpeg), settings.Ffmpeg);
                LoadSection(settingsKey, nameof(AppSettings.ElevenLabs), settings.ElevenLabs);
                LoadSection(settingsKey, nameof(AppSettings.TikTok), settings.TikTok);

                _logger.LogInformation("Configuration loaded successfully from the registry.");
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while loading settings from the registry. Default settings will be used.");
                return new AppSettings();
            }

            return settings;
        }

        private void LoadSection(RegistryKey baseKey, string sectionName, object sectionObject)
        {
            using var sectionKey = baseKey.OpenSubKey(sectionName);
            if (sectionKey == null)
            {
                _logger.LogDebug("Registry section '{SectionName}' not found. Skipping.", sectionName);
                return;
            }

            foreach (var prop in sectionObject.GetType().GetProperties())
            {
                if (!prop.CanWrite) continue;

                var value = sectionKey.GetValue(prop.Name);
                if (value != null)
                {
                    try
                    {
                        var convertedValue = Convert.ChangeType(value, prop.PropertyType, CultureInfo.InvariantCulture);
                        prop.SetValue(sectionObject, convertedValue);
                    }
                    catch (Exception ex)
                    {
                        _logger.LogWarning(ex, "Error loading registry value '{PropertyName}' in section '{SectionName}'.", prop.Name, sectionName);
                    }
                }
            }
        }

        private void SaveSection(RegistryKey baseKey, string sectionName, object sectionObject)
        {
            using var sectionKey = baseKey.CreateSubKey(sectionName);
            foreach (var prop in sectionObject.GetType().GetProperties())
            {
                if (!prop.CanRead) continue;

                var value = prop.GetValue(sectionObject);
                if (value != null)
                {
                    sectionKey.SetValue(prop.Name, value.ToString(), RegistryValueKind.String);
                }
            }
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\SettingsService.cs">
<![CDATA[
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Shared.Configuration;
using System.Text.Json;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class SettingsService : ISettingsService
    {
        private readonly IAppConfiguration _appConfiguration;

        public SettingsService(IAppConfiguration appConfiguration)
        {
            _appConfiguration = appConfiguration;
        }

        public AppSettings GetSettings()
        {
            var settingsAsJson = JsonSerializer.Serialize(_appConfiguration.Settings);
            return JsonSerializer.Deserialize<AppSettings>(settingsAsJson) ?? new AppSettings();
        }

        public void SaveSettings(AppSettings settings)
        {
            _appConfiguration.Settings.Reddit = settings.Reddit;
            _appConfiguration.Settings.Pexels = settings.Pexels;
            _appConfiguration.Settings.Tts = settings.Tts;
            _appConfiguration.Settings.Ffmpeg = settings.Ffmpeg;
            _appConfiguration.Settings.YouTube = settings.YouTube;
            _appConfiguration.Settings.TikTok = settings.TikTok;
            _appConfiguration.Settings.ImageGeneration = settings.ImageGeneration;
            _appConfiguration.Settings.GoogleCloud = settings.GoogleCloud;
            _appConfiguration.Settings.ClipSettings = settings.ClipSettings;
            _appConfiguration.Settings.AzureTts = settings.AzureTts;
            _appConfiguration.Settings.ElevenLabs = settings.ElevenLabs;

            _appConfiguration.Save();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TempDirectory.cs">
<![CDATA[
using RedditVideoStudio.Core.Interfaces;
using System;
using System.IO;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITempDirectory interface to provide a self-cleaning temporary directory.
    /// The directory is created upon instantiation and is automatically deleted when the object is disposed.
    /// </summary>
    public class TempDirectory : ITempDirectory
    {
        public string Path { get; }

        public TempDirectory()
        {
            Path = System.IO.Path.Combine(System.IO.Path.GetTempPath(), "RedditVideoStudio", Guid.NewGuid().ToString());
            Directory.CreateDirectory(Path);
        }

        public void Dispose()
        {
            try
            {
                if (Directory.Exists(Path))
                {
                    Directory.Delete(Path, true);
                }
            }
            catch (Exception)
            {
                // Log this exception in a real-world scenario. For now, we'll ignore it
                // as the OS will eventually clean up the temp folder.
            }
            GC.SuppressFinalize(this);
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TempDirectoryFactory.cs">
<![CDATA[
using RedditVideoStudio.Core.Interfaces;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITempDirectoryFactory interface to provide instances
    /// of the TempDirectory class. This factory is essential for decoupling
    /// the creation of disposable resources from the application layer.
    /// </summary>
    public class TempDirectoryFactory : ITempDirectoryFactory
    {
        public ITempDirectory Create()
        {
            return new TempDirectory();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokAuthService.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokAuthService.cs
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;
using System.Diagnostics;
using System.Net;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// A conceptual service to handle the TikTok OAuth 2.0 authorization flow.
    /// </summary>
    public class TikTokAuthService
    {
        private readonly ILogger<TikTokAuthService> _logger;
        private readonly IAppConfiguration _config;

        public TikTokAuthService(ILogger<TikTokAuthService> logger, IAppConfiguration config)
        {
            _logger = logger;
            _config = config;
        }

        public async Task<string> AuthorizeAndGetTokenAsync()
        {
            var settings = _config.Settings.TikTok;
            string redirectUri = "http://localhost:8910/callback/";

            _logger.LogInformation("Starting TikTok authorization flow...");

            // Step 1: Launch browser for user to grant permission
            string authUrl = $"https://www.tiktok.com/v2/auth/authorize?client_key={settings.ClientKey}&scope={settings.Scopes}&response_type=code&redirect_uri={WebUtility.UrlEncode(redirectUri)}";
            _logger.LogInformation("Launching browser to: {AuthUrl}", authUrl);
            Process.Start(new ProcessStartInfo(authUrl) { UseShellExecute = true });

            // Step 2: Listen for the redirect containing the authorization code
            // In a real application, this would involve a temporary HttpListener.
            _logger.LogInformation("Listening on {RedirectUri} for authorization code...", redirectUri);

            // This is a placeholder for the logic that would capture the auth code.
            string authCode = "placeholder_auth_code_from_tiktok";
            await Task.Delay(1000); // Simulate waiting for user
            _logger.LogInformation("Received authorization code: {AuthCode}", authCode);

            // Step 3: Exchange the authorization code for an access token
            // This would be a real HttpClient POST request to TikTok's token endpoint.
            _logger.LogInformation("Exchanging authorization code for an access token...");
            await Task.Delay(1000); // Simulate network request

            string accessToken = "placeholder_access_token_from_tiktok";
            _logger.LogInformation("Successfully obtained TikTok access token.");
            return accessToken;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokServiceFactory.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokServiceFactory.cs
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the ITikTokServiceFactory to create instances of the TikTokUploader service.
    /// </summary>
    public class TikTokServiceFactory : ITikTokServiceFactory
    {
        private readonly ILoggerFactory _loggerFactory;

        public TikTokServiceFactory(ILoggerFactory loggerFactory)
        {
            _loggerFactory = loggerFactory;
        }

        /// <summary>
        /// Creates a new instance of the TikTokUploader service with the provided access token.
        /// </summary>
        /// <param name="accessToken">The authenticated user's access token.</param>
        /// <returns>A fully configured ITikTokUploadService instance.</returns>
        public ITikTokUploadService Create(string accessToken)
        {
            return new TikTokUploader(
                _loggerFactory.CreateLogger<TikTokUploader>(),
                accessToken);
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokUploader.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\TikTokUploader.cs
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class TikTokUploader : ITikTokUploadService
    {
        private readonly ILogger<TikTokUploader> _logger;
        private readonly string _accessToken;

        public TikTokUploader(ILogger<TikTokUploader> logger, string accessToken)
        {
            _logger = logger;
            _accessToken = accessToken;
        }

        public async Task UploadVideoAsync(string videoPath, string title, CancellationToken cancellationToken = default)
        {
            _logger.LogInformation("TikTokUploader: Preparing to upload '{Title}'.", title);

            // In a real implementation, you would:
            // 1. Create an HttpClient.
            // 2. Set the Authorization header with the Bearer token.
            // 3. Create a multipart/form-data request containing the video file.
            // 4. POST the request to the TikTok API endpoint.
            // 5. Check the response for success or failure.

            _logger.LogWarning("TikTokUploader: This is a placeholder. No real upload will occur.");
            await Task.Delay(1500, cancellationToken); // Simulate network activity

            _logger.LogInformation("TikTokUploader: Successfully processed upload for '{title}'.", title);
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\WindowsSpeechSynthesizerService.cs">
<![CDATA[
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Domain.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Speech.Synthesis;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class WindowsTextToSpeechService : ITextToSpeechService
    {
        private readonly IAppConfiguration _appConfig;
        private readonly IFfmpegService _ffmpegService;
        private readonly IAudioUtility _audioUtility;
        private readonly ILogger<WindowsTextToSpeechService> _logger;

        public WindowsTextToSpeechService(IAppConfiguration appConfig, IFfmpegService ffmpegService, IAudioUtility audioUtility, ILogger<WindowsTextToSpeechService> logger)
        {
            _appConfig = appConfig;
            _ffmpegService = ffmpegService;
            _audioUtility = audioUtility;
            _logger = logger;
        }

        public string[] GetVoices()
        {
            using (var speechSynthesizer = new SpeechSynthesizer())
            {
                return speechSynthesizer.GetInstalledVoices()
                    .Where(v => v.Enabled)
                    .Select(v => v.VoiceInfo.Name)
                    .ToArray();
            }
        }

        // In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\WindowsSpeechSynthesizerService.cs

        public async Task<SpeechGenerationResult> GenerateSpeechAsync(string text, string outputFilePath, CancellationToken cancellationToken = default)
        {
            var tempWavPath = Path.ChangeExtension(outputFilePath, ".wav");
            var tcs = new TaskCompletionSource<bool>();

            using (var speechSynthesizer = new SpeechSynthesizer())
            {
                var voiceToUse = _appConfig.Settings.Tts.WindowsVoice;
                _logger.LogInformation("Using Windows TTS voice: \"{Voice}\"", voiceToUse);

                try
                {
                    speechSynthesizer.SelectVoice(voiceToUse);
                }
                catch (Exception ex)
                {
                    throw new TtsException($"Cannot set voice '{voiceToUse}'. No matching voice is installed or the voice was disabled.", ex);
                }

                speechSynthesizer.SetOutputToWaveFile(tempWavPath);
                _logger.LogInformation("Generating temporary WAV file at: \"{Path}\"", tempWavPath);

                speechSynthesizer.SpeakCompleted += (s, e) =>
                {
                    if (e.Error != null) tcs.TrySetException(e.Error);
                    else if (e.Cancelled) tcs.TrySetCanceled();
                    else tcs.TrySetResult(true);
                };

                using (cancellationToken.Register(() => speechSynthesizer.SpeakAsyncCancelAll()))
                {
                    speechSynthesizer.SpeakAsync(text);
                    await tcs.Task;
                }
            }

            // --- START OF CORRECTION ---

            // First, convert the WAV file to the final MP3 format.
            _logger.LogInformation("Converting '\"{WavPath}\"' to MP3 at '\"{Mp3Path}\"'.", tempWavPath, outputFilePath);
            await _ffmpegService.ConvertWavToMp3Async(tempWavPath, outputFilePath, cancellationToken);

            // Now, measure the duration of the FINAL MP3 file. This is the true duration.
            var accurateDuration = await _audioUtility.GetAudioDurationAsync(outputFilePath, cancellationToken);
            _logger.LogInformation("Accurate duration measured from MP3 file: {Duration}", accurateDuration);

            if (File.Exists(tempWavPath))
            {
                File.Delete(tempWavPath);
            }

            // Return the MP3 path along with its own accurate duration.
            return new SpeechGenerationResult(outputFilePath, accurateDuration);

            // --- END OF CORRECTION ---
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\YouTubeServiceFactory.cs">
<![CDATA[
using Google.Apis.Auth.OAuth2;
using Google.Apis.Services;
using Google.Apis.YouTube.v3;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Interfaces;

namespace RedditVideoStudio.Infrastructure.Services
{
    /// <summary>
    /// Implements the IYouTubeServiceFactory to create instances of the YouTubeUploader service.
    /// This factory pattern is used to decouple the UI's interactive authentication flow
    /// from the core application logic.
    /// </summary>
    public class YouTubeServiceFactory : IYouTubeServiceFactory
    {
        private readonly ILoggerFactory _loggerFactory;
        private readonly IAppConfiguration _appConfig;

        public YouTubeServiceFactory(ILoggerFactory loggerFactory, IAppConfiguration appConfig)
        {
            _loggerFactory = loggerFactory;
            _appConfig = appConfig;
        }

        /// <summary>
        /// Creates a new instance of the YouTubeUploader service.
        /// </summary>
        /// <param name="credential">The authenticated user credential obtained from the UI layer.</param>
        /// <returns>A fully configured IYouTubeUploadService instance.</returns>
        public IYouTubeUploadService Create(UserCredential credential)
        {
            var youtubeService = new YouTubeService(new BaseClientService.Initializer
            {
                HttpClientInitializer = credential,
                ApplicationName = "RedditVideoStudio"
            });

            return new YouTubeUploader(
                _loggerFactory.CreateLogger<YouTubeUploader>(),
                _appConfig.Settings,
                youtubeService);
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\YouTubeUploader.cs">
<![CDATA[
// In: C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\Services\YouTubeUploader.cs

using Google.Apis.Upload;
using Google.Apis.YouTube.v3;
using Google.Apis.YouTube.v3.Data;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Shared.Configuration;
using RedditVideoStudio.Shared.Models; // Add this using statement
using RedditVideoStudio.Shared.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace RedditVideoStudio.Infrastructure.Services
{
    public class YouTubeUploader : IYouTubeUploadService
    {
        private readonly ILogger<YouTubeUploader> _logger;
        private readonly YouTubeService _youTubeService;
        private readonly AppSettings _settings;

        public YouTubeUploader(
             ILogger<YouTubeUploader> logger,
             AppSettings settings,
             YouTubeService youtubeService)
        {
            _logger = logger;
            _settings = settings;
            _youTubeService = youtubeService;
        }

        // --- START OF MODIFICATION: Updated method signature ---
        public async Task<string?> UploadVideoAsync(
            string videoPath,
            string thumbnailPath,
            string title,
            string description,
            DateTime? scheduledPublishTimeUtc,
            IProgress<ProgressReport> progress,
            CancellationToken cancellationToken = default)
        // --- END OF MODIFICATION ---
        {
            if (!File.Exists(videoPath)) throw new FileNotFoundException("Video file not found for upload.", videoPath);
            if (string.IsNullOrWhiteSpace(title)) throw new ArgumentException("Video title cannot be null or empty.", nameof(title));

            var video = new Video
            {
                Snippet = new VideoSnippet
                {
                    Title = TextUtils.SanitizeYouTubeTitle(title),
                    Description = description ?? "",
                    CategoryId = "22"
                },
                Status = new VideoStatus
                {
                    PrivacyStatus = _settings.YouTube.PrivacyStatus,
                }
            };

            if (_settings.YouTube.PrivacyStatus.Equals("private", StringComparison.OrdinalIgnoreCase) && scheduledPublishTimeUtc.HasValue)
            {
                video.Status.PublishAt = scheduledPublishTimeUtc.Value.ToUniversalTime();
            }

            FileStream? fileStream = null;
            try
            {
                fileStream = new FileStream(videoPath, FileMode.Open, FileAccess.Read);
                _logger.LogInformation("Uploading video with title: '{Title}'", video.Snippet.Title);

                var insertRequest = _youTubeService.Videos.Insert(video, "snippet,status", fileStream, "video/*");

                // --- START OF MODIFICATION: Handle progress reporting ---
                var fileSize = fileStream.Length;
                insertRequest.ProgressChanged += (IUploadProgress uploadProgress) =>
                {
                    switch (uploadProgress.Status)
                    {
                        case UploadStatus.Uploading:
                            var percentage = (int)(((double)uploadProgress.BytesSent / fileSize) * 100);
                            progress.Report(new ProgressReport { Percentage = percentage, Message = $"Uploading to YouTube... {percentage}%" });
                            break;
                        case UploadStatus.Failed:
                            _logger.LogError(uploadProgress.Exception, "YouTube upload failed.");
                            break;
                    }
                };
                // --- END OF MODIFICATION ---

                insertRequest.ResponseReceived += OnUploadResponse;

                var uploadStatus = await insertRequest.UploadAsync(cancellationToken);

                if (uploadStatus.Status != UploadStatus.Completed)
                {
                    var errorMessage = uploadStatus.Exception?.Message ?? "Unknown upload error.";
                    throw new YouTubeApiException($"YouTube upload failed: {errorMessage}", uploadStatus.Exception);
                }

                string videoId = insertRequest.ResponseBody.Id;
                _logger.LogInformation("Video uploaded to YouTube with ID: {VideoId}", videoId);

                if (!string.IsNullOrWhiteSpace(thumbnailPath) && File.Exists(thumbnailPath))
                {
                    _logger.LogInformation("Uploading thumbnail for video ID: {VideoId}", videoId);
                    await using var thumbStream = new FileStream(thumbnailPath, FileMode.Open, FileAccess.Read);
                    var thumbRequest = _youTubeService.Thumbnails.Set(videoId, thumbStream, "image/jpeg");

                    var thumbUploadStatus = await thumbRequest.UploadAsync(cancellationToken);
                    if (thumbUploadStatus.Status != UploadStatus.Completed)
                    {
                        var errorMessage = thumbUploadStatus.Exception?.Message ?? "Unknown thumbnail upload error.";
                        throw new YouTubeApiException($"YouTube thumbnail upload failed: {errorMessage}. Note: This can happen if the video is 'private' and the YouTube channel is not verified for advanced features.", thumbUploadStatus.Exception);
                    }
                    _logger.LogInformation("Thumbnail uploaded successfully for video ID: {VideoId}", videoId);
                }

                return videoId;
            }
            catch (Exception ex) when (ex is not YouTubeApiException)
            {
                _logger.LogError(ex, "An error occurred during YouTube upload for video: {VideoPath}", videoPath);
                throw new YouTubeApiException("An error occurred during the YouTube upload process.", ex);
            }
            finally
            {
                fileStream?.Dispose();
            }
        }

        // ... (OnUploadResponse and FetchUploadedVideoTitlesAsync methods remain the same) ...
        private void OnUploadResponse(Video video)
        {
            _logger.LogInformation("Video upload response received. Video ID: {VideoId}", video.Id);
        }

        public async Task<List<string>> FetchUploadedVideoTitlesAsync(CancellationToken cancellationToken)
        {
            var videoTitles = new HashSet<string>();
            var nextPageToken = "";
            _logger.LogInformation("Fetching all uploaded video titles from YouTube...");
            while (nextPageToken != null)
            {
                var searchRequest = _youTubeService.Search.List("snippet");
                searchRequest.ForMine = true;
                searchRequest.Type = "video";
                searchRequest.MaxResults = 50;
                searchRequest.PageToken = nextPageToken;

                var searchResponse = await searchRequest.ExecuteAsync(cancellationToken);

                foreach (var searchResult in searchResponse.Items)
                {
                    var sanitizedTitle = TextUtils.SanitizeYouTubeTitle(searchResult.Snippet.Title);
                    if (!videoTitles.Add(sanitizedTitle))
                    {
                        _logger.LogWarning("Found duplicate video title on YouTube channel: \"{Title}\"", sanitizedTitle);
                    }
                }

                nextPageToken = searchResponse.NextPageToken;
            }
            _logger.LogInformation("Finished fetching video titles. Found {Count} unique titles.", videoTitles.Count);
            return videoTitles.ToList();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\GlobalSuppressions.cs">
<![CDATA[
// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Interoperability", "CA1416:Validate platform compatibility", Justification = "<Pending>", Scope = "member", Target = "~M:RedditVideoStudio.Infrastructure.Services.WindowsTextToSpeechService.GetVoices~System.String[]")]
[assembly: SuppressMessage("Interoperability", "CA1416:Validate platform compatibility", Justification = "<Pending>", Scope = "member", Target = "~M:RedditVideoStudio.Infrastructure.Services.WindowsTextToSpeechService.GenerateSpeechAsync(System.String,System.String,System.Threading.CancellationToken)~System.Threading.Tasks.Task{RedditVideoStudio.Domain.Models.SpeechGenerationResult}")]
[assembly: SuppressMessage("Interoperability", "CA1416:Validate platform compatibility", Justification = "<Pending>", Scope = "member", Target = "~M:RedditVideoStudio.Infrastructure.Services.RegistryAppConfiguration.SaveAsync(System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Interoperability", "CA1416:Validate platform compatibility", Justification = "<Pending>", Scope = "member", Target = "~M:RedditVideoStudio.Infrastructure.Services.RegistryAppConfiguration.GetYouTubeSecretsAsync(System.Threading.CancellationToken)~System.Threading.Tasks.Task{Google.Apis.Auth.OAuth2.ClientSecrets}")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Infrastructure\RedditVideoStudio.Infrastructure.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Apis.YouTube.v3" Version="1.69.0.3764" />
    <PackageReference Include="Google.Cloud.TextToSpeech.V1" Version="3.12.0" />
    <PackageReference Include="Microsoft.CognitiveServices.Speech" Version="1.44.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.6" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="SkiaSharp" Version="3.119.0" />
    <PackageReference Include="System.Speech" Version="9.0.6" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RedditVideoStudio.Core\RedditVideoStudio.Core.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Domain\RedditVideoStudio.Domain.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj" />
  </ItemGroup>

</Project>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\bin\Debug\net9.0\RedditVideoStudio.Shared.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.Shared/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Shared.dll": {}
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\AppSettings.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\AppSettings.cs
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// A container for all application settings, organized by feature area.
    /// </summary>
    public class AppSettings
    {
        public RedditSettings Reddit { get; set; } = new();
        public PexelsSettings Pexels { get; set; } = new();
        public TtsSettings Tts { get; set; } = new();
        public FfmpegSettings Ffmpeg { get; set; } = new();
        public YouTubeSettings YouTube { get; set; } = new();
        public ImageGenerationSettings ImageGeneration { get; set; } = new();
        public GoogleCloudSettings GoogleCloud { get; set; } = new();
        public ClipSettings ClipSettings { get; set; } = new();
        public AzureTtsSettings AzureTts { get; set; } = new();
        public ElevenLabsSettings ElevenLabs { get; set; } = new();

        // New property for TikTok settings
        public TikTokSettings TikTok { get; set; } = new();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\AzureTtsSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings specific to the Azure Text-to-Speech service,
    /// including the necessary API key and region for authentication.
    /// </summary>
    public class AzureTtsSettings
    {
        public string ApiKey { get; set; } = string.Empty;
        public string Region { get; set; } = string.Empty;
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\ClipSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings for optional video clips that can be added
    /// to the beginning, middle, or end of a generated video.
    /// </summary>
    public class ClipSettings
    {
        public string IntroPath { get; set; } = string.Empty;
        public string OutroPath { get; set; } = string.Empty;
        public string BreakClipPath { get; set; } = string.Empty;
        public double IntroDuration { get; set; } = 0;
        public double BreakClipDuration { get; set; } = 0;
        public double OutroDuration { get; set; } = 0;
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\ElevenLabsSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings specific to the ElevenLabs Text-to-Speech service.
    /// </summary>
    public class ElevenLabsSettings
    {
        public string ApiKey { get; set; } = string.Empty;
        public string VoiceId { get; set; } = "21m00Tcm4TlvDq8ikWAM"; // A default voice ID
        public string ModelId { get; set; } = "eleven_multilingual_v2";
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\FfmpegSettings.cs">
<![CDATA[
using System;
using System.IO;

namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains all settings related to the FFmpeg process, including the directory
    /// where the executables are located and parameters for video and audio encoding.
    /// </summary>
    public class FfmpegSettings
    {
        /// <summary>
        /// The directory containing ffmpeg.exe and ffprobe.exe, relative to the application's startup directory.
        /// </summary>
        public string FfmpegDirectory { get; set; } = "ffmpeg";

        public string VideoCodec { get; set; } = "libx264";

        // CORRECTED: Changed the default audio codec to 'libmp3lame',
        // which is the standard encoder for the .mp3 file format.
        public string AudioCodec { get; set; } = "libmp3lame";

        public string Preset { get; set; } = "ultrafast";
        public string VideoBitrate { get; set; } = "5000k";
        public string AudioBitrate { get; set; } = "192k";

        /// <summary>
        /// A read-only property that constructs the full path to ffmpeg.exe.
        /// </summary>
        [System.Text.Json.Serialization.JsonIgnore]
        public string FfmpegExePath => Path.Combine(AppContext.BaseDirectory, FfmpegDirectory, "ffmpeg.exe");

        /// <summary>
        /// A read-only property that constructs the full path to ffprobe.exe.
        /// </summary>
        [System.Text.Json.Serialization.JsonIgnore]
        public string FfprobeExePath => Path.Combine(AppContext.BaseDirectory, FfmpegDirectory, "ffprobe.exe");
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\GoogleCloudSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings related to Google Cloud Platform services,
    /// primarily the path to the service account key for authentication.
    /// </summary>
    public class GoogleCloudSettings
    {
        public string ServiceAccountKeyPath { get; set; } = string.Empty;
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\ImageGenerationSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Holds all settings related to the generation of images, including
    /// text overlays for video segments and the final video thumbnail.
    /// </summary>
    public class ImageGenerationSettings
    {
        public int InteriorPadding { get; set; } = 50;
        public int ExteriorPadding { get; set; } = 100;
        public int FontSize { get; set; } = 48;
        public string FontFamily { get; set; } = "Arial";
        public double BackgroundOpacity { get; set; } = 0.6;
        public string RectangleColor { get; set; } = "#000000";
        public string TextColor { get; set; } = "#FFFFFF";
        public int MaxCharactersPerPage { get; set; } = 400;
        public int ImageWidth { get; set; } = 1920;
        public int ImageHeight { get; set; } = 1080;
        public string ThumbnailBackgroundColor { get; set; } = "#1A1A1B";
        public string ThumbnailPexelsQuery { get; set; } = "abstract background";
        public int ThumbnailFontSize { get; set; } = 120;
        public int ThumbnailFontOutlineWidth { get; set; } = 8;
        public string ThumbnailFontOutlineColor { get; set; } = "#000000";
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\PexelsSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Holds configuration settings for the Pexels API, which is used
    /// to source background videos and images.
    /// </summary>
    public class PexelsSettings
    {
        public string ApiKey { get; set; } = string.Empty;
        public string DefaultQuery { get; set; } = "nature";
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\RedditSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings specific to interacting with the Reddit API,
    /// such as the target subreddit and limits for fetching posts and comments.
    /// </summary>
    public class RedditSettings
    {
        public string Subreddit { get; set; } = "askreddit";
        public int PostLimit { get; set; } = 5;
        public int CommentLimit { get; set; } = 10;
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\TikTokSettings.cs">
<![CDATA[
// C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\TikTokSettings.cs
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings specific to the TikTok Content Posting API.
    /// </summary>
    public class TikTokSettings
    {
        /// <summary>
        /// The Client Key for your TikTok application.
        /// </summary>
        public string? ClientKey { get; set; }

        /// <summary>
        /// The Client Secret for your TikTok application.
        /// </summary>
        public string? ClientSecret { get; set; }

        /// <summary>
        /// The scopes required for the application's API access.
        /// 'video.upload' is required for posting content.
        /// </summary>
        public string Scopes { get; set; } = "video.upload";
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\TtsSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings for the Text-to-Speech (TTS) services.
    /// This allows for configuring which TTS provider is used, as well as
    /// voice characteristics like language, gender, and speaking rate.
    /// </summary>
    public class TtsSettings
    {
        public string Provider { get; set; } = "Google";
        public string LanguageCode { get; set; } = "en-US";
        public string VoiceGender { get; set; } = "Female";
        public double SpeakingRate { get; set; } = 1.0;
        public string WindowsVoice { get; set; } = "Microsoft David Desktop";

    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Configuration\YouTubeSettings.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Configuration
{
    /// <summary>
    /// Contains settings related to uploading videos to YouTube,
    /// such as the default privacy status for new uploads.
    /// </summary>
    public class YouTubeSettings
    {
        public string PrivacyStatus { get; set; } = "private"; // "private", "unlisted", or "public"

        /// <summary>
        /// The interval in minutes to wait between automatically scheduled video uploads.
        /// </summary>
        public int AutoScheduleIntervalMinutes { get; set; } = 30;
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Models\ProgressReport.cs">
<![CDATA[
namespace RedditVideoStudio.Shared.Models
{
    /// <summary>
    /// Represents a progress report for long-running operations,
    /// containing a percentage completion value and a descriptive message.
    /// </summary>
    public class ProgressReport
    {
        public int Percentage { get; set; }
        public string Message { get; set; } = string.Empty;
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\Debug\net9.0\RedditVideoStudio.Shared.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.Shared")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.Shared")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.Shared")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\Debug\net9.0\RedditVideoStudio.Shared.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\Debug\net9.0\RedditVideoStudio.Shared.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0": {}
  },
  "libraries": {},
  "projectFileDependencyGroups": {
    "net9.0": []
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
      "projectName": "RedditVideoStudio.Shared",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0": {
        "targetAlias": "net9.0",
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\obj\RedditVideoStudio.Shared.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Utilities\FileUtils.cs">
<![CDATA[
using System.IO;
using System.Linq;

namespace RedditVideoStudio.Shared.Utilities
{
    /// <summary>
    /// Provides utility methods for file and path manipulation.
    /// </summary>
    public static class FileUtils
    {
        /// <summary>
        /// Sanitizes a string by replacing characters that are invalid in file names
        /// with an underscore.
        /// </summary>
        /// <param name="input">The string to sanitize.</param>
        /// <returns>A sanitized string that is safe to use as a file name.</returns>
        public static string SanitizeFileName(string input)
        {
            var invalidChars = Path.GetInvalidFileNameChars();
            return new string(input.Select(c => invalidChars.Contains(c) ? '_' : c).ToArray());
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\Utilities\TextUtils.cs">
<![CDATA[
using System;
using System.Collections.Generic;
using System.Net; // Add this using statement
using System.Text;
using System.Text.RegularExpressions;

namespace RedditVideoStudio.Shared.Utilities
{
    /// <summary>
    /// Provides utility methods for text manipulation.
    /// </summary>
    public static class TextUtils
    {
        /// <summary>
        /// Cleans text content by removing hyperlinks, emojis, decoding HTML entities, and trimming extra whitespace.
        /// </summary>
        /// <param name="text">The input text to sanitize.</param>
        /// <returns>Sanitized text.</returns>
        public static string SanitizePostContent(string text)
        {
            if (string.IsNullOrWhiteSpace(text))
            {
                return string.Empty;
            }

            // 1. Decode HTML character entities (e.g., &amp; -> &)
            var sanitized = WebUtility.HtmlDecode(text);

            // 2. Remove standard hyperlinks
            sanitized = Regex.Replace(sanitized, @"https?:\/\/[^\s/$.?#].[^\s]*", "", RegexOptions.IgnoreCase);

            // 3. Remove markdown style links e.g., [link text](url)
            sanitized = Regex.Replace(sanitized, @"\[(.*?)\]\(.*?\)", "$1", RegexOptions.IgnoreCase);

            // 4. Remove emojis. This regex covers a wide range of common emojis.
            sanitized = Regex.Replace(sanitized, @"[\uD800-\uDBFF][\uDC00-\uDFFF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2600-\u26FF]|[\u2700-\u27BF]", "");

            // 5. Replace multiple whitespace characters with a single space and trim
            sanitized = Regex.Replace(sanitized, @"\s+", " ").Trim();

            return sanitized;
        }

        /// <summary>
        /// Sanitizes a string to be a valid YouTube video title by decoding HTML, removing forbidden
        /// characters ('<' and '>'), and truncating it to 100 characters.
        /// </summary>
        /// <param name="title">The original title.</param>
        /// <returns>A sanitized title safe for YouTube upload.</returns>
        public static string SanitizeYouTubeTitle(string title)
        {
            // --- START OF MODIFICATION ---

            // 1. Decode HTML entities first to ensure consistency with API responses.
            var decodedTitle = WebUtility.HtmlDecode(title);

            // 2. Remove forbidden characters
            var sanitizedTitle = decodedTitle.Replace('<', ' ').Replace('>', ' ');

            // 3. Truncate to YouTube's 100-character limit
            if (sanitizedTitle.Length > 100)
            {
                sanitizedTitle = sanitizedTitle.Substring(0, 100);
            }

            // --- END OF MODIFICATION ---

            return sanitizedTitle;
        }

        /// <summary>
        /// Splits a long string of text into smaller pages, without breaking words.
        /// </summary>
        /// <param name="text">The text to split.</param>
        /// <param name="maxCharactersPerPage">The maximum characters allowed on a page.</param>
        /// <returns>A list of pages.</returns>
        public static List<string> SplitTextIntoPages(string text, int maxCharactersPerPage)
        {
            var pages = new List<string>();
            if (string.IsNullOrWhiteSpace(text))
            {
                return pages;
            }

            var words = text.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
            var currentPage = new StringBuilder();

            foreach (var word in words)
            {
                if (currentPage.Length > 0 && currentPage.Length + word.Length + 1 > maxCharactersPerPage)
                {
                    pages.Add(currentPage.ToString().TrimEnd());
                    currentPage.Clear();
                }
                currentPage.Append(word + " ");
            }

            if (currentPage.Length > 0)
            {
                pages.Add(currentPage.ToString().TrimEnd());
            }

            return pages;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

</Project>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\bin\Debug\net9.0-windows\RedditVideoStudio.UI.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "RedditVideoStudio.UI/1.0.0": {
        "dependencies": {
          "CommunityToolkit.Mvvm": "8.4.0",
          "MediatR": "12.5.0",
          "Microsoft.Extensions.Hosting": "9.0.6",
          "RedditVideoStudio.Application": "1.0.0",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Infrastructure": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0",
          "Serilog.Extensions.Hosting": "9.0.0",
          "Serilog.Sinks.File": "7.0.0",
          "SkiaSharp": "3.119.0",
          "SkiaSharp.NativeAssets.Win32": "3.119.0"
        },
        "runtime": {
          "RedditVideoStudio.UI.dll": {}
        }
      },
      "Azure.Core/1.44.1": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "System.ClientModel": "1.1.0",
          "System.Diagnostics.DiagnosticSource": "6.0.1",
          "System.Memory.Data": "6.0.0",
          "System.Numerics.Vectors": "4.5.0",
          "System.Text.Encodings.Web": "6.0.0",
          "System.Text.Json": "6.0.10",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "runtime": {
          "lib/net6.0/Azure.Core.dll": {
            "assemblyVersion": "1.44.1.0",
            "fileVersion": "1.4400.124.50905"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "assemblyVersion": "8.4.0.0",
            "fileVersion": "8.4.0.1"
          }
        }
      },
      "Google.Api.CommonProtos/2.16.0": {
        "dependencies": {
          "Google.Protobuf": "3.28.2"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "assemblyVersion": "2.16.0.0",
            "fileVersion": "2.16.0.0"
          }
        }
      },
      "Google.Api.Gax/4.9.0": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "Newtonsoft.Json": "13.0.3",
          "System.Diagnostics.DiagnosticSource": "6.0.1"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Api.Gax.Grpc/4.9.0": {
        "dependencies": {
          "Google.Api.CommonProtos": "2.16.0",
          "Google.Api.Gax": "4.9.0",
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Auth": "2.66.0",
          "Grpc.Core.Api": "2.66.0",
          "Grpc.Net.Client": "2.66.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Apis/1.70.0": {
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Auth": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "assemblyVersion": "1.69.0.3764",
            "fileVersion": "1.69.0.3764"
          }
        }
      },
      "Google.Cloud.TextToSpeech.V1/3.12.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0",
          "Google.LongRunning": "3.3.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "assemblyVersion": "3.12.0.0",
            "fileVersion": "3.12.0.0"
          }
        }
      },
      "Google.LongRunning/3.3.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "assemblyVersion": "3.3.0.0",
            "fileVersion": "3.3.0.0"
          }
        }
      },
      "Google.Protobuf/3.28.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.28.2.0",
            "fileVersion": "3.28.2.0"
          }
        }
      },
      "Grpc.Auth/2.66.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.66.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.66.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.66.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.66.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "MediatR/12.5.0": {
        "dependencies": {
          "MediatR.Contracts": "2.0.1",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net6.0/MediatR.dll": {
            "assemblyVersion": "12.0.0.0",
            "fileVersion": "12.5.0.0"
          }
        }
      },
      "MediatR.Contracts/2.0.1": {
        "runtime": {
          "lib/netstandard2.0/MediatR.Contracts.dll": {
            "assemblyVersion": "2.0.1.0",
            "fileVersion": "2.0.1.0"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "Microsoft.CognitiveServices.Speech/1.44.0": {
        "dependencies": {
          "Azure.Core": "1.44.1"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          }
        },
        "runtimeTargets": {
          "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "ios-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          }
        }
      },
      "Microsoft.Extensions.Configuration/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Binder/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Json/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Diagnostics/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileSystemGlobbing": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Hosting/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.Configuration.CommandLine": "9.0.6",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.Configuration.UserSecrets": "9.0.6",
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Logging.Console": "9.0.6",
          "Microsoft.Extensions.Logging.Debug": "9.0.6",
          "Microsoft.Extensions.Logging.EventLog": "9.0.6",
          "Microsoft.Extensions.Logging.EventSource": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Configuration/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Console/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Console.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Debug/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Debug.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventLog/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "System.Diagnostics.EventLog": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventSource/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        }
      },
      "Serilog/4.2.0": {
        "runtime": {
          "lib/net9.0/Serilog.dll": {
            "assemblyVersion": "4.2.0.0",
            "fileVersion": "4.2.0.0"
          }
        }
      },
      "Serilog.Extensions.Hosting/9.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Serilog": "4.2.0",
          "Serilog.Extensions.Logging": "9.0.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Hosting.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "Serilog.Extensions.Logging/9.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Logging": "9.0.6",
          "Serilog": "4.2.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "Serilog.Sinks.File/7.0.0": {
        "dependencies": {
          "Serilog": "4.2.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Sinks.File.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.0.0"
          }
        }
      },
      "SkiaSharp/3.119.0": {
        "dependencies": {
          "SkiaSharp.NativeAssets.Win32": "3.119.0",
          "SkiaSharp.NativeAssets.macOS": "3.119.0"
        },
        "runtime": {
          "lib/net8.0/SkiaSharp.dll": {
            "assemblyVersion": "3.119.0.0",
            "fileVersion": "3.119.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.macOS/3.119.0": {
        "runtimeTargets": {
          "runtimes/osx/native/libSkiaSharp.dylib": {
            "rid": "osx",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.Win32/3.119.0": {
        "runtimeTargets": {
          "runtimes/win-arm64/native/libSkiaSharp.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/libSkiaSharp.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/libSkiaSharp.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "System.ClientModel/1.1.0": {
        "dependencies": {
          "System.Memory.Data": "6.0.0",
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.ClientModel.dll": {
            "assemblyVersion": "1.1.0.0",
            "fileVersion": "1.100.24.46703"
          }
        }
      },
      "System.CodeDom/7.0.0": {},
      "System.Diagnostics.DiagnosticSource/6.0.1": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        }
      },
      "System.Diagnostics.EventLog/9.0.6": {
        "runtime": {
          "lib/net9.0/System.Diagnostics.EventLog.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "System.Management/7.0.2": {
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        }
      },
      "System.Memory.Data/6.0.0": {
        "dependencies": {
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.Memory.Data.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Numerics.Vectors/4.5.0": {},
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Speech/9.0.6": {
        "runtime": {
          "lib/net9.0/System.Speech.dll": {
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Speech.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "System.Text.Encodings.Web/6.0.0": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        }
      },
      "System.Text.Json/6.0.10": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0",
          "System.Text.Encodings.Web": "6.0.0"
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {},
      "RedditVideoStudio.Application/1.0.0": {
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Application.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Core/1.0.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "runtime": {
          "RedditVideoStudio.Core.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Domain.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Infrastructure/1.0.0": {
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Google.Cloud.TextToSpeech.V1": "3.12.0",
          "Microsoft.CognitiveServices.Speech": "1.44.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Newtonsoft.Json": "13.0.3",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0",
          "SkiaSharp": "3.119.0",
          "System.Speech": "9.0.6"
        },
        "runtime": {
          "RedditVideoStudio.Infrastructure.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "runtime": {
          "RedditVideoStudio.Shared.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        }
      }
    }
  },
  "libraries": {
    "RedditVideoStudio.UI/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "Azure.Core/1.44.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YyznXLQZCregzHvioip07/BkzjuWNXogJEVz9T5W6TwjNr17ax41YGzYMptlo2G10oLCuVPoyva62y0SIRDixg==",
      "path": "azure.core/1.44.1",
      "hashPath": "azure.core.1.44.1.nupkg.sha512"
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "path": "communitytoolkit.mvvm/8.4.0",
      "hashPath": "communitytoolkit.mvvm.8.4.0.nupkg.sha512"
    },
    "Google.Api.CommonProtos/2.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-37MuZrE9AAqHAdYgFLoTHydAiXDRriQZGVKEg6fr6ASnrY5GtauYXnQrGk5x2K3NmYzEXe+wkpaPVmxjb3NKjg==",
      "path": "google.api.commonprotos/2.16.0",
      "hashPath": "google.api.commonprotos.2.16.0.nupkg.sha512"
    },
    "Google.Api.Gax/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-fjHHYcQ99u0ztqwT537rvVtJMdDy6G2VHBZ+F1cBjDGYNVZfrpk40DMQ/OpUGToT9ZGHVirhh3eJ73bw2ANVPQ==",
      "path": "google.api.gax/4.9.0",
      "hashPath": "google.api.gax.4.9.0.nupkg.sha512"
    },
    "Google.Api.Gax.Grpc/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ToCx/0cs+wJ9j7vzKRcPAKneJVZrz/s9JhW9QsFx1dar9WzTxawQZ8xTjyieSy8tY0UiYCL1qYkn/iRrklYnSA==",
      "path": "google.api.gax.grpc/4.9.0",
      "hashPath": "google.api.gax.grpc.4.9.0.nupkg.sha512"
    },
    "Google.Apis/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "path": "google.apis/1.70.0",
      "hashPath": "google.apis.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Auth/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "path": "google.apis.auth/1.70.0",
      "hashPath": "google.apis.auth.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Core/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "path": "google.apis.core/1.70.0",
      "hashPath": "google.apis.core.1.70.0.nupkg.sha512"
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "hashPath": "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512"
    },
    "Google.Cloud.TextToSpeech.V1/3.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5eIfjGicnKagFSkmF5vyJt2x6JdBIs+tjBKPU3E8ppZ4587CwlgVYixa72WL9yygPijjGvlUg+3vwssAz8z+KQ==",
      "path": "google.cloud.texttospeech.v1/3.12.0",
      "hashPath": "google.cloud.texttospeech.v1.3.12.0.nupkg.sha512"
    },
    "Google.LongRunning/3.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-F2SZ83Jo466Wj/s1Z7QhIAmWBXxJZQyXZpcx0P8BR7d6s0FAj67vQjeUPESSJcvsy8AqYiYBhkUr2YpZhTQeHg==",
      "path": "google.longrunning/3.3.0",
      "hashPath": "google.longrunning.3.3.0.nupkg.sha512"
    },
    "Google.Protobuf/3.28.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z86ZKAB+v1B/m0LTM+EVamvZlYw/g3VND3/Gs4M/+aDIxa2JE9YPKjDxTpf0gv2sh26hrve3eI03brxBmzn92g==",
      "path": "google.protobuf/3.28.2",
      "hashPath": "google.protobuf.3.28.2.nupkg.sha512"
    },
    "Grpc.Auth/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-FRQlhMAcHf0GjAXIfhN6RydfZncLLXNNTOtpLL1bt57kp59vu40faW+dr6Vwl7ef/IUFfF38aiB5jvhAA/9Aow==",
      "path": "grpc.auth/2.66.0",
      "hashPath": "grpc.auth.2.66.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HsjsQVAHe4hqP4t4rpUnmq+MZvPdyrlPsWF4T5fbMvyP3o/lMV+KVJfDlaNH8+v0aGQTVT3EsDFufbhaWb52cw==",
      "path": "grpc.core.api/2.66.0",
      "hashPath": "grpc.core.api.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GwkSsssXFgN9+M2U+UQWdErf61sn1iqgP+2NRBlDXATcP9vlxda0wySxd/eIL8U522+SnyFNUXlvQ5tAzGk9cA==",
      "path": "grpc.net.client/2.66.0",
      "hashPath": "grpc.net.client.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YJpQpIvpo0HKlsG6SHwaieyji08qfv0DdEDIewCAA0egQY08637sHOj1netLGUhzBEsCqlGC3e92TZ2uqhxnvw==",
      "path": "grpc.net.common/2.66.0",
      "hashPath": "grpc.net.common.2.66.0.nupkg.sha512"
    },
    "MediatR/12.5.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vqm2H8/nqL5NAJHPhsG1JOPwfkmbVrPyh4svdoRzu+uZh6Ex7PRoHBGsLYC0/RWCEJFqD1ohHNpteQvql9OktA==",
      "path": "mediatr/12.5.0",
      "hashPath": "mediatr.12.5.0.nupkg.sha512"
    },
    "MediatR.Contracts/2.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-FYv95bNT4UwcNA+G/J1oX5OpRiSUxteXaUt2BJbRSdRNiIUNbggJF69wy6mnk2wYToaanpdXZdCwVylt96MpwQ==",
      "path": "mediatr.contracts/2.0.1",
      "hashPath": "mediatr.contracts.2.0.1.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UcSjPsst+DfAdJGVDsu346FX0ci0ah+lw3WRtn18NUwEqRt70HaOQ7lI72vy3+1LxtqI3T5GWwV39rQSrCzAeg==",
      "path": "microsoft.bcl.asyncinterfaces/6.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.6.0.0.nupkg.sha512"
    },
    "Microsoft.CognitiveServices.Speech/1.44.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pUGHPjxsv72SYw2Fh0rQV8NehZcDqzlUMLZ1keOSWaX8Yqs6QcANIu+xopdRnI2V8rY0x+8GJ8Ern/i4+D6Hdw==",
      "path": "microsoft.cognitiveservices.speech/1.44.0",
      "hashPath": "microsoft.cognitiveservices.speech.1.44.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-VWB5jdkxHsRiuoniTqwOL32R4OWyp5If/bAucLjRJczRVNcwb8iCXKLjn3Inv8fv+jHMVMnvQLg7xhSys+y5PA==",
      "path": "microsoft.extensions.configuration/9.0.6",
      "hashPath": "microsoft.extensions.configuration.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3GgMIi2jP8g1fBW93Z9b9Unamc0SIsgyhiCmC91gq4loTixK9vQMuxxUsfJ1kRGwn+/FqLKwOHqmn0oYWn3Fvw==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Binder/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Opl/7SIrwDy9WjHn/vU2thQ8CUtrIWHLr+89I7/0VYNEJQvpL24zvqYrh83cH38RzNKHji0WGVkCVP6HJChVVw==",
      "path": "microsoft.extensions.configuration.binder/9.0.6",
      "hashPath": "microsoft.extensions.configuration.binder.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-DC5I4Y1nK35jY4piDqQCzWjDXzT6ECMctBAxgAJoc6pn0k6uyxcDeOuVDRooFui/N65ptn9xT5mk9eO4mSTj/g==",
      "path": "microsoft.extensions.configuration.commandline/9.0.6",
      "hashPath": "microsoft.extensions.configuration.commandline.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-RGYG2JBak9lf2rIPiZUVmWjUqoxaHPy3XPhPsJyIQ8QqK47rKvJz7jxVYefTnYdM5LTEiGFBdC7v3+SiosvmkQ==",
      "path": "microsoft.extensions.configuration.environmentvariables/9.0.6",
      "hashPath": "microsoft.extensions.configuration.environmentvariables.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pCEueasI5JhJ24KYzMFxtG40zyLnWpcQYawpARh9FNq9XbWozuWgexmdkPa8p8YoVNlpi3ecKfcjfoRMkKAufw==",
      "path": "microsoft.extensions.configuration.fileextensions/9.0.6",
      "hashPath": "microsoft.extensions.configuration.fileextensions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Json/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-N0dgOYQ9tDzJouL9Tyx2dgMCcHV2pBaY8yVtorbDqYYwiDRS2zd1TbhTA2FMHqXF3SMjBoO+gONZcDoA79gdSA==",
      "path": "microsoft.extensions.configuration.json/9.0.6",
      "hashPath": "microsoft.extensions.configuration.json.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0ZZMzdvNwIS0f09S0IcaEbKFm+Xc41vRROsA/soeKEpzRISTDdiVwGlzdldbXEsuPjNVvNHyvIP8YW2hfIig0w==",
      "path": "microsoft.extensions.configuration.usersecrets/9.0.6",
      "hashPath": "microsoft.extensions.configuration.usersecrets.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vS65HMo5RS10DD543fknsyVDxihMcVxVn3/hNaILgBxWYnOLxWIeCIO9X0QFuCvPRNjClvXe9Aj8KaQNx7vFkQ==",
      "path": "microsoft.extensions.dependencyinjection/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mIqCzZseDK9SqTRy4LxtjLwjlUu6aH5UdA6j0vgVER14yki9oRqLF+SmBiF6OlwsBSeL6dMQ8dmq02JMeE2puQ==",
      "path": "microsoft.extensions.diagnostics/9.0.6",
      "hashPath": "microsoft.extensions.diagnostics.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GIoXX7VDcTEsNM6yvffTBaOwnPQELGI5dzExR7L2O7AUkDsHBYIZawUbuwfq3cYzz8dIAAJotQYJMzH7qy27Ng==",
      "path": "microsoft.extensions.diagnostics.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.diagnostics.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-q9FPkSGVA9ipI255p3PBAvWNXas5Tzjyp/DwYSwT+46mIFw9fWZahsF6vHpoxLt5/vtANotH2sAm7HunuFIx9g==",
      "path": "microsoft.extensions.fileproviders.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.fileproviders.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-l+dFA0NRl90vSIiJNy5d7V0kpTEOWHTqbgoWYzlTwF5uiM5sWJ953haaELKE05jkyJdnemVTnqjrlgo4wo7oyg==",
      "path": "microsoft.extensions.fileproviders.physical/9.0.6",
      "hashPath": "microsoft.extensions.fileproviders.physical.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-1HJCAbwukNEoYbHgHbKHmenU0V/0huw8+i7Qtf5rLUG1E+3kEwRJQxpwD3wbTEagIgPSQisNgJTvmUX9yYVc6g==",
      "path": "microsoft.extensions.filesystemglobbing/9.0.6",
      "hashPath": "microsoft.extensions.filesystemglobbing.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Iu1UyXUnjMhoOwThKM0kCyjgWqqQnuujsbPMnF44ITUbmETT7RAVlozNgev2L/damwNoPZKpmwArRKBy2IOAZg==",
      "path": "microsoft.extensions.hosting/9.0.6",
      "hashPath": "microsoft.extensions.hosting.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-G9T95JbcG/wQpeVIzg0IMwxI+uTywDmbxWUWN2P0mdna35rmuTqgTrZ4SU5rcfUT3EJfbI9N4K8UyCAAc6QK8Q==",
      "path": "microsoft.extensions.hosting.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.hosting.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XBzjitTFaQhF8EbJ645vblZezV1p52ePTxKHoVkRidHF11Xkjxg94qr0Rvp2qyxK2vBJ4OIZ41NB15YUyxTGMQ==",
      "path": "microsoft.extensions.logging/9.0.6",
      "hashPath": "microsoft.extensions.logging.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Configuration/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lCgpxE5r6v43SB40/yUVnSWZUUqUZF5iUWizhkx4gqvq0L0rMw5g8adWKGO7sfIaSbCiU0et85sDQWswhLcceg==",
      "path": "microsoft.extensions.logging.configuration/9.0.6",
      "hashPath": "microsoft.extensions.logging.configuration.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Console/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-L1O0M3MrqGlkrPYMLzcCphQpCG0lSHfTSPrm1otALNBzTPiO8rxxkjhBIIa2onKv92UP30Y4QaiigVMTx8YcxQ==",
      "path": "microsoft.extensions.logging.console/9.0.6",
      "hashPath": "microsoft.extensions.logging.console.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Debug/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-u21euQdOjaEwmlnnB1Zd4XGqOmWI8FkoGeUleV7n4BZ8HPQC/jrYzX/B5Cz3uI/FXjd//W88clPfkGIbSif7Jw==",
      "path": "microsoft.extensions.logging.debug/9.0.6",
      "hashPath": "microsoft.extensions.logging.debug.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventLog/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IyyGy7xNJAjdlFYXc7SZ7kS3CWd3Ma4hing9QGtzXi+LXm8RWCEXdKA1cPx5AeFmdg3rVG+ADGIn44K14O+vFA==",
      "path": "microsoft.extensions.logging.eventlog/9.0.6",
      "hashPath": "microsoft.extensions.logging.eventlog.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventSource/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ayCRr/8ON3aINH81ak9l3vLAF/0pV/xrfChCbIlT2YnHAd4TYBWLcWhzbJWwPFV4XmJFrx/z8oq+gZzIc/74OA==",
      "path": "microsoft.extensions.logging.eventsource/9.0.6",
      "hashPath": "microsoft.extensions.logging.eventsource.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wUPhNM1zsI58Dy10xRdF2+pnsisiUuETg5ZBncyAEEUm/CQ9Q1vmivyUWH8RDbAlqyixf2dJNQ2XZb7HsKUEQw==",
      "path": "microsoft.extensions.options/9.0.6",
      "hashPath": "microsoft.extensions.options.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2lnp8nrvfzyp+5zvfeULm/hkZsDsKkl2ziBt5T8EZKoON5q+XRpRLoWcSPo8mP7GNZXpxKMBVjFNIZNbBIcnRw==",
      "path": "microsoft.extensions.options.configurationextensions/9.0.6",
      "hashPath": "microsoft.extensions.options.configurationextensions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BHniU24QV67qp1pJknqYSofAPYGmijGI8D+ci9yfw33iuFdyOeB9lWTg78ThyYLyQwZw3s0vZ36VMb0MqbUuLw==",
      "path": "microsoft.extensions.primitives/9.0.6",
      "hashPath": "microsoft.extensions.primitives.9.0.6.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "Serilog/4.2.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gmoWVOvKgbME8TYR+gwMf7osROiWAURterc6Rt2dQyX7wtjZYpqFiA/pY6ztjGQKKV62GGCyOcmtP1UKMHgSmA==",
      "path": "serilog/4.2.0",
      "hashPath": "serilog.4.2.0.nupkg.sha512"
    },
    "Serilog.Extensions.Hosting/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-u2TRxuxbjvTAldQn7uaAwePkWxTHIqlgjelekBtilAGL5sYyF3+65NWctN4UrwwGLsDC7c3Vz3HnOlu+PcoxXg==",
      "path": "serilog.extensions.hosting/9.0.0",
      "hashPath": "serilog.extensions.hosting.9.0.0.nupkg.sha512"
    },
    "Serilog.Extensions.Logging/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NwSSYqPJeKNzl5AuXVHpGbr6PkZJFlNa14CdIebVjK3k/76kYj/mz5kiTRNVSsSaxM8kAIa1kpy/qyT9E4npRQ==",
      "path": "serilog.extensions.logging/9.0.0",
      "hashPath": "serilog.extensions.logging.9.0.0.nupkg.sha512"
    },
    "Serilog.Sinks.File/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-fKL7mXv7qaiNBUC71ssvn/dU0k9t0o45+qm2XgKAlSt19xF+ijjxyA3R6HmCgfKEKwfcfkwWjayuQtRueZFkYw==",
      "path": "serilog.sinks.file/7.0.0",
      "hashPath": "serilog.sinks.file.7.0.0.nupkg.sha512"
    },
    "SkiaSharp/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gR9yVoOta2Mc1Rxt15LD65AckfHMfwjIs/3kkD59C9bT2nYYISsE6uz3t4aMPNHA6CgsIL0Ssn+jE5OVilZ1yw==",
      "path": "skiasharp/3.119.0",
      "hashPath": "skiasharp.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.macOS/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YE1vNn0Nyw2PWtv7hw1PYkKJO0itFiQp9vSqGppZUKzQJqwp28a2jgdCMPfYtOiR8KCnDgZqQoynqJRRaE2ZVg==",
      "path": "skiasharp.nativeassets.macos/3.119.0",
      "hashPath": "skiasharp.nativeassets.macos.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.Win32/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IwC9yx36lOdXVT2DjgmWHl1qkVspfj8ctd4+li8CNnvqdfaTolXCOh6TLznURcPAvzatx9K/tLOB7zT6T8EA9w==",
      "path": "skiasharp.nativeassets.win32/3.119.0",
      "hashPath": "skiasharp.nativeassets.win32.3.119.0.nupkg.sha512"
    },
    "System.ClientModel/1.1.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UocOlCkxLZrG2CKMAAImPcldJTxeesHnHGHwhJ0pNlZEvEXcWKuQvVOER2/NiOkJGRJk978SNdw3j6/7O9H1lg==",
      "path": "system.clientmodel/1.1.0",
      "hashPath": "system.clientmodel.1.1.0.nupkg.sha512"
    },
    "System.CodeDom/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "path": "system.codedom/7.0.0",
      "hashPath": "system.codedom.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/6.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-KiLYDu2k2J82Q9BJpWiuQqCkFjRBWVq4jDzKKWawVi9KWzyD0XG3cmfX0vqTQlL14Wi9EufJrbL0+KCLTbqWiQ==",
      "path": "system.diagnostics.diagnosticsource/6.0.1",
      "hashPath": "system.diagnostics.diagnosticsource.6.0.1.nupkg.sha512"
    },
    "System.Diagnostics.EventLog/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lum+Dv+8S4gqN5H1C576UcQe0M2buoRjEUVs4TctXRSWjBH3ay3w2KyQrOo1yPdRs1I+xK69STz+4mjIisFI5w==",
      "path": "system.diagnostics.eventlog/9.0.6",
      "hashPath": "system.diagnostics.eventlog.9.0.6.nupkg.sha512"
    },
    "System.Management/7.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "path": "system.management/7.0.2",
      "hashPath": "system.management.7.0.2.nupkg.sha512"
    },
    "System.Memory.Data/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ntFHArH3I4Lpjf5m4DCXQHJuGwWPNVJPaAvM95Jy/u+2Yzt2ryiyIN04LAogkjP9DeRcEOiviAjQotfmPq/FrQ==",
      "path": "system.memory.data/6.0.0",
      "hashPath": "system.memory.data.6.0.0.nupkg.sha512"
    },
    "System.Numerics.Vectors/4.5.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QQTlPTl06J/iiDbJCiepZ4H//BVraReU4O4EoRw1U02H5TLUIT7xn3GnDp9AXPSlJUDyFs4uWjWafNX6WrAojQ==",
      "path": "system.numerics.vectors/4.5.0",
      "hashPath": "system.numerics.vectors.4.5.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Speech/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Cyc9GLB8OpPNFFSlvnaLzkLSyGCuIENllB47w0WwP+SzVfDWvGdTEK1iIaMQEoRjpdl4sRYrchCDYx6GqNlu/w==",
      "path": "system.speech/9.0.6",
      "hashPath": "system.speech.9.0.6.nupkg.sha512"
    },
    "System.Text.Encodings.Web/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vg8eB5Tawm1IFqj4TVK1czJX89rhFxJo9ELqc/Eiq0eXy13RK00eubyU6TJE6y+GQXjyV5gSfiewDUZjQgSE0w==",
      "path": "system.text.encodings.web/6.0.0",
      "hashPath": "system.text.encodings.web.6.0.0.nupkg.sha512"
    },
    "System.Text.Json/6.0.10": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NSB0kDipxn2ychp88NXWfFRFlmi1bst/xynOutbnpEfRCT9JZkZ7KOmF/I/hNKo2dILiMGnqblm+j1sggdLB9g==",
      "path": "system.text.json/6.0.10",
      "hashPath": "system.text.json.6.0.10.nupkg.sha512"
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "path": "system.threading.tasks.extensions/4.5.4",
      "hashPath": "system.threading.tasks.extensions.4.5.4.nupkg.sha512"
    },
    "RedditVideoStudio.Application/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Infrastructure/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\bin\Debug\net9.0-windows\RedditVideoStudio.UI.runtimeconfig.json">
<![CDATA[
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "9.0.0"
      },
      {
        "name": "Microsoft.WindowsDesktop.App",
        "version": "9.0.0"
      }
    ],
    "configProperties": {
      "MVVMTOOLKIT_ENABLE_INOTIFYPROPERTYCHANGING_SUPPORT": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false,
      "CSWINRT_USE_WINDOWS_UI_XAML_PROJECTIONS": false
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Converters\FullPathToFileNameConverter.cs">
<![CDATA[
using System;
using System.Globalization;
using System.IO;
using System.Windows.Data;

namespace RedditVideoStudio.UI.Converters
{
    public class FullPathToFileNameConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture) => value is string path && !string.IsNullOrEmpty(path) ? Path.GetFileName(path) : string.Empty;
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) => throw new NotImplementedException();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Converters\NotNullToBooleanConverter.cs">
<![CDATA[
using System;
using System.Globalization;
using System.Windows.Data;

namespace RedditVideoStudio.UI.Converters
{
    public class NotNullToBooleanConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture) => value != null;
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) => throw new NotImplementedException();
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Logging\DelegatingSink.cs">
<![CDATA[
using Serilog.Core;
using Serilog.Events;
using System;

namespace RedditVideoStudio.UI.Logging
{
    /// <summary>
    /// A Serilog sink that delegates the emission of log events to another sink.
    /// This allows the log output target to be changed at runtime.
    /// </summary>
    public class DelegatingSink : ILogEventSink
    {
        private static ILogEventSink _sink = new NullSink();

        public void Emit(LogEvent logEvent)
        {
            _sink?.Emit(logEvent);
        }

        public static void SetSink(ILogEventSink sink)
        {
            _sink = sink;
        }

        /// <summary>
        /// A sink that does nothing, used as a default to prevent null reference exceptions.
        /// </summary>
        private class NullSink : ILogEventSink
        {
            public void Emit(LogEvent logEvent) { }
        }
    }
}

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Logging\TextBoxSink.cs">
<![CDATA[
using Serilog.Core;
using Serilog.Events;
using System;
using System.IO;
using System.Windows.Controls;
using System.Windows.Threading;

namespace RedditVideoStudio.UI.Logging
{
    /// <summary>
    /// A Serilog sink that writes log events to a WPF TextBox control.
    /// It ensures that UI updates are performed on the correct thread using the Dispatcher.
    /// </summary>
    public class TextBoxSink : ILogEventSink
    {
        private readonly TextBox _textBox;
        private readonly Dispatcher _dispatcher;
        private readonly IFormatProvider? _formatProvider;

        public TextBoxSink(TextBox textBox, Dispatcher dispatcher, IFormatProvider? formatProvider = null)
        {
            _textBox = textBox;
            _dispatcher = dispatcher;
            _formatProvider = formatProvider;
        }

        public void Emit(LogEvent logEvent)
        {
            if (logEvent == null) throw new ArgumentNullException(nameof(logEvent));

            // MODIFIED: Build a formatted string instead of just rendering the message.
            var writer = new StringWriter();
            logEvent.RenderMessage(writer, _formatProvider);

            var formattedMessage = $"[{logEvent.Timestamp:HH:mm:ss} {logEvent.Level.ToString().ToUpperInvariant()}] {writer.ToString()}";

            _dispatcher.InvokeAsync(() =>
            {
                _textBox.AppendText(formattedMessage + Environment.NewLine);
                _textBox.ScrollToEnd();
            });
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\Views\DestinationsSettingsView.g.cs">
<![CDATA[
#pragma checksum "..\..\..\..\Views\DestinationsSettingsView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "BD89EE032CA3C292D1ACC2B98921B9967E965B0E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI.ViewModels.Settings;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI.Views.Settings {
    
    
    /// <summary>
    /// DestinationsSettingsView
    /// </summary>
    public partial class DestinationsSettingsView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/views/destinationssettingsview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DestinationsSettingsView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\Views\DestinationsSettingsView.g.i.cs">
<![CDATA[
#pragma checksum "..\..\..\..\Views\DestinationsSettingsView.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "BD89EE032CA3C292D1ACC2B98921B9967E965B0E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI.ViewModels.Settings;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI.Views.Settings {
    
    
    /// <summary>
    /// DestinationsSettingsView
    /// </summary>
    public partial class DestinationsSettingsView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector {
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/views/destinationssettingsview.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\..\Views\DestinationsSettingsView.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs">
<![CDATA[
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v9.0", FrameworkDisplayName = ".NET 9.0")]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\App.g.cs">
<![CDATA[
#pragma checksum "..\..\..\App.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ABA4B8F0B679BAB6014F63ABB14B2390B628700E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// App
    /// </summary>
    public partial class App : System.Windows.Application {
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            
            #line 5 "..\..\..\App.xaml"
            this.Startup += new System.Windows.StartupEventHandler(this.Application_Startup);
            
            #line default
            #line hidden
        }
        
        /// <summary>
        /// Application Entry Point.
        /// </summary>
        [System.STAThreadAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public static void Main() {
            RedditVideoStudio.UI.App app = new RedditVideoStudio.UI.App();
            app.InitializeComponent();
            app.Run();
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\App.g.i.cs">
<![CDATA[
#pragma checksum "..\..\..\App.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ABA4B8F0B679BAB6014F63ABB14B2390B628700E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// App
    /// </summary>
    public partial class App : System.Windows.Application {
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            
            #line 5 "..\..\..\App.xaml"
            this.Startup += new System.Windows.StartupEventHandler(this.Application_Startup);
            
            #line default
            #line hidden
        }
        
        /// <summary>
        /// Application Entry Point.
        /// </summary>
        [System.STAThreadAttribute()]
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public static void Main() {
            RedditVideoStudio.UI.App app = new RedditVideoStudio.UI.App();
            app.InitializeComponent();
            app.Run();
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\GeneratedInternalTypeHelper.g.cs">
<![CDATA[



]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\GeneratedInternalTypeHelper.g.i.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XamlGeneratedNamespace {
    
    
    /// <summary>
    /// GeneratedInternalTypeHelper
    /// </summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
    public sealed class GeneratedInternalTypeHelper : System.Windows.Markup.InternalTypeHelper {
        
        /// <summary>
        /// CreateInstance
        /// </summary>
        protected override object CreateInstance(System.Type type, System.Globalization.CultureInfo culture) {
            return System.Activator.CreateInstance(type, ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) 
                            | (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.CreateInstance)), null, null, culture);
        }
        
        /// <summary>
        /// GetPropertyValue
        /// </summary>
        protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
            return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// SetPropertyValue
        /// </summary>
        protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
            propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
        }
        
        /// <summary>
        /// CreateDelegate
        /// </summary>
        protected override System.Delegate CreateDelegate(System.Type delegateType, object target, string handler) {
            return ((System.Delegate)(target.GetType().InvokeMember("_CreateDelegate", (System.Reflection.BindingFlags.InvokeMethod 
                            | (System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance)), null, target, new object[] {
                        delegateType,
                        handler}, null)));
        }
        
        /// <summary>
        /// AddEventHandler
        /// </summary>
        protected override void AddEventHandler(System.Reflection.EventInfo eventInfo, object target, System.Delegate handler) {
            eventInfo.AddEventHandler(target, handler);
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\MainWindow.g.cs">
<![CDATA[
#pragma checksum "..\..\..\MainWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54D8BFCC4EB2AE4C541A1CC8C3E5F8E014FA4748"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI;
using RedditVideoStudio.UI.Converters;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// MainWindow
    /// </summary>
    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 26 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.CheckBox AutoScheduleCheckBox;
        
        #line default
        #line hidden
        
        
        #line 28 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.CheckBox PublishToTikTokCheckBox;
        
        #line default
        #line hidden
        
        
        #line 33 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ListBox RedditPostListBox;
        
        #line default
        #line hidden
        
        
        #line 107 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.DatePicker ScheduleDatePicker;
        
        #line default
        #line hidden
        
        
        #line 109 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.TextBox ScheduleTimeTextBox;
        
        #line default
        #line hidden
        
        
        #line 115 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ListBox CommentPreviewListBox;
        
        #line default
        #line hidden
        
        
        #line 127 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ProgressBar GenerationProgressBar;
        
        #line default
        #line hidden
        
        
        #line 129 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.TextBox LogTextBox;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/mainwindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\MainWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            
            #line 23 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.RefreshPosts_Click);
            
            #line default
            #line hidden
            return;
            case 2:
            
            #line 24 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenSettings_Click);
            
            #line default
            #line hidden
            return;
            case 3:
            
            #line 25 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ResetYouTubeAuth_Click);
            
            #line default
            #line hidden
            return;
            case 4:
            this.AutoScheduleCheckBox = ((System.Windows.Controls.CheckBox)(target));
            return;
            case 5:
            this.PublishToTikTokCheckBox = ((System.Windows.Controls.CheckBox)(target));
            return;
            case 6:
            
            #line 31 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateVideo_Click);
            
            #line default
            #line hidden
            return;
            case 7:
            this.RedditPostListBox = ((System.Windows.Controls.ListBox)(target));
            return;
            case 8:
            this.ScheduleDatePicker = ((System.Windows.Controls.DatePicker)(target));
            return;
            case 9:
            this.ScheduleTimeTextBox = ((System.Windows.Controls.TextBox)(target));
            return;
            case 10:
            this.CommentPreviewListBox = ((System.Windows.Controls.ListBox)(target));
            return;
            case 11:
            this.GenerationProgressBar = ((System.Windows.Controls.ProgressBar)(target));
            return;
            case 12:
            this.LogTextBox = ((System.Windows.Controls.TextBox)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\MainWindow.g.i.cs">
<![CDATA[
#pragma checksum "..\..\..\MainWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54D8BFCC4EB2AE4C541A1CC8C3E5F8E014FA4748"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI;
using RedditVideoStudio.UI.Converters;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// MainWindow
    /// </summary>
    public partial class MainWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 26 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.CheckBox AutoScheduleCheckBox;
        
        #line default
        #line hidden
        
        
        #line 28 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.CheckBox PublishToTikTokCheckBox;
        
        #line default
        #line hidden
        
        
        #line 33 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ListBox RedditPostListBox;
        
        #line default
        #line hidden
        
        
        #line 107 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.DatePicker ScheduleDatePicker;
        
        #line default
        #line hidden
        
        
        #line 109 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.TextBox ScheduleTimeTextBox;
        
        #line default
        #line hidden
        
        
        #line 115 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ListBox CommentPreviewListBox;
        
        #line default
        #line hidden
        
        
        #line 127 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ProgressBar GenerationProgressBar;
        
        #line default
        #line hidden
        
        
        #line 129 "..\..\..\MainWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.TextBox LogTextBox;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/mainwindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\MainWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            
            #line 23 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.RefreshPosts_Click);
            
            #line default
            #line hidden
            return;
            case 2:
            
            #line 24 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OpenSettings_Click);
            
            #line default
            #line hidden
            return;
            case 3:
            
            #line 25 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ResetYouTubeAuth_Click);
            
            #line default
            #line hidden
            return;
            case 4:
            this.AutoScheduleCheckBox = ((System.Windows.Controls.CheckBox)(target));
            return;
            case 5:
            this.PublishToTikTokCheckBox = ((System.Windows.Controls.CheckBox)(target));
            return;
            case 6:
            
            #line 31 "..\..\..\MainWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.GenerateVideo_Click);
            
            #line default
            #line hidden
            return;
            case 7:
            this.RedditPostListBox = ((System.Windows.Controls.ListBox)(target));
            return;
            case 8:
            this.ScheduleDatePicker = ((System.Windows.Controls.DatePicker)(target));
            return;
            case 9:
            this.ScheduleTimeTextBox = ((System.Windows.Controls.TextBox)(target));
            return;
            case 10:
            this.CommentPreviewListBox = ((System.Windows.Controls.ListBox)(target));
            return;
            case 11:
            this.GenerationProgressBar = ((System.Windows.Controls.ProgressBar)(target));
            return;
            case 12:
            this.LogTextBox = ((System.Windows.Controls.TextBox)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI.designer.deps.json">
<![CDATA[
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v9.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v9.0": {
      "Azure.Core/1.44.1": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "System.ClientModel": "1.1.0",
          "System.Diagnostics.DiagnosticSource": "6.0.1",
          "System.Memory.Data": "6.0.0",
          "System.Numerics.Vectors": "4.5.0",
          "System.Text.Encodings.Web": "6.0.0",
          "System.Text.Json": "6.0.10",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "runtime": {
          "lib/net6.0/Azure.Core.dll": {
            "assemblyVersion": "1.44.1.0",
            "fileVersion": "1.4400.124.50905"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "assemblyVersion": "8.4.0.0",
            "fileVersion": "8.4.0.1"
          }
        }
      },
      "Google.Api.CommonProtos/2.16.0": {
        "dependencies": {
          "Google.Protobuf": "3.28.2"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "assemblyVersion": "2.16.0.0",
            "fileVersion": "2.16.0.0"
          }
        }
      },
      "Google.Api.Gax/4.9.0": {
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "Newtonsoft.Json": "13.0.3",
          "System.Diagnostics.DiagnosticSource": "6.0.1"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Api.Gax.Grpc/4.9.0": {
        "dependencies": {
          "Google.Api.CommonProtos": "2.16.0",
          "Google.Api.Gax": "4.9.0",
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Auth": "2.66.0",
          "Grpc.Core.Api": "2.66.0",
          "Grpc.Net.Client": "2.66.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "assemblyVersion": "4.9.0.0",
            "fileVersion": "4.9.0.0"
          }
        }
      },
      "Google.Apis/1.70.0": {
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "assemblyVersion": "1.70.0.0",
            "fileVersion": "1.70.0.0"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Auth": "1.70.0"
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "assemblyVersion": "1.69.0.3764",
            "fileVersion": "1.69.0.3764"
          }
        }
      },
      "Google.Cloud.TextToSpeech.V1/3.12.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0",
          "Google.LongRunning": "3.3.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "assemblyVersion": "3.12.0.0",
            "fileVersion": "3.12.0.0"
          }
        }
      },
      "Google.LongRunning/3.3.0": {
        "dependencies": {
          "Google.Api.Gax.Grpc": "4.9.0"
        },
        "runtime": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "assemblyVersion": "3.3.0.0",
            "fileVersion": "3.3.0.0"
          }
        }
      },
      "Google.Protobuf/3.28.2": {
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "assemblyVersion": "3.28.2.0",
            "fileVersion": "3.28.2.0"
          }
        }
      },
      "Grpc.Auth/2.66.0": {
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Core.Api/2.66.0": {
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Client/2.66.0": {
        "dependencies": {
          "Grpc.Net.Common": "2.66.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "Grpc.Net.Common/2.66.0": {
        "dependencies": {
          "Grpc.Core.Api": "2.66.0"
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.66.0.0"
          }
        }
      },
      "MediatR/12.5.0": {
        "dependencies": {
          "MediatR.Contracts": "2.0.1",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net6.0/MediatR.dll": {
            "assemblyVersion": "12.0.0.0",
            "fileVersion": "12.5.0.0"
          }
        }
      },
      "MediatR.Contracts/2.0.1": {
        "runtime": {
          "lib/netstandard2.0/MediatR.Contracts.dll": {
            "assemblyVersion": "2.0.1.0",
            "fileVersion": "2.0.1.0"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "Microsoft.CognitiveServices.Speech/1.44.0": {
        "dependencies": {
          "Azure.Core": "1.44.1"
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          }
        },
        "runtimeTargets": {
          "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "linux-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-arm64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "rid": "osx-x64",
            "assetType": "runtime",
            "assemblyVersion": "1.44.0.28",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "android-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "ios-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "iossimulator-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so": {
            "rid": "linux-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "rid": "maccatalyst-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "rid": "osx-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "1.44.0.28"
          }
        }
      },
      "Microsoft.Extensions.Configuration/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Binder/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Json/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Diagnostics/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileSystemGlobbing": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Hosting/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.Configuration.CommandLine": "9.0.6",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.Configuration.UserSecrets": "9.0.6",
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Logging.Console": "9.0.6",
          "Microsoft.Extensions.Logging.Debug": "9.0.6",
          "Microsoft.Extensions.Logging.EventLog": "9.0.6",
          "Microsoft.Extensions.Logging.EventSource": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Configuration/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Console/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Console.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.Debug/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Debug.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventLog/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "System.Diagnostics.EventLog": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventSource/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.6": {
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        }
      },
      "Serilog/4.2.0": {
        "runtime": {
          "lib/net9.0/Serilog.dll": {
            "assemblyVersion": "4.2.0.0",
            "fileVersion": "4.2.0.0"
          }
        }
      },
      "Serilog.Extensions.Hosting/9.0.0": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Serilog": "4.2.0",
          "Serilog.Extensions.Logging": "9.0.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Hosting.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "Serilog.Extensions.Logging/9.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Logging": "9.0.6",
          "Serilog": "4.2.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "Serilog.Sinks.File/7.0.0": {
        "dependencies": {
          "Serilog": "4.2.0"
        },
        "runtime": {
          "lib/net9.0/Serilog.Sinks.File.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.0.0"
          }
        }
      },
      "SkiaSharp/3.119.0": {
        "dependencies": {
          "SkiaSharp.NativeAssets.Win32": "3.119.0",
          "SkiaSharp.NativeAssets.macOS": "3.119.0"
        },
        "runtime": {
          "lib/net8.0/SkiaSharp.dll": {
            "assemblyVersion": "3.119.0.0",
            "fileVersion": "3.119.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.macOS/3.119.0": {
        "runtimeTargets": {
          "runtimes/osx/native/libSkiaSharp.dylib": {
            "rid": "osx",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "SkiaSharp.NativeAssets.Win32/3.119.0": {
        "runtimeTargets": {
          "runtimes/win-arm64/native/libSkiaSharp.dll": {
            "rid": "win-arm64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x64/native/libSkiaSharp.dll": {
            "rid": "win-x64",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win-x86/native/libSkiaSharp.dll": {
            "rid": "win-x86",
            "assetType": "native",
            "fileVersion": "0.0.0.0"
          }
        }
      },
      "System.ClientModel/1.1.0": {
        "dependencies": {
          "System.Memory.Data": "6.0.0",
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.ClientModel.dll": {
            "assemblyVersion": "1.1.0.0",
            "fileVersion": "1.100.24.46703"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/6.0.1": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.1523.11507"
          }
        }
      },
      "System.Diagnostics.EventLog/9.0.6": {
        "runtime": {
          "lib/net9.0/System.Diagnostics.EventLog.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.Messages.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "0.0.0.0"
          },
          "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "System.Management/7.0.2": {
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "7.0.0.2",
            "fileVersion": "7.0.723.27404"
          }
        }
      },
      "System.Memory.Data/6.0.0": {
        "dependencies": {
          "System.Text.Json": "6.0.10"
        },
        "runtime": {
          "lib/net6.0/System.Memory.Data.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Numerics.Vectors/4.5.0": {},
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Speech/9.0.6": {
        "runtime": {
          "lib/net9.0/System.Speech.dll": {
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Speech.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.6",
            "fileVersion": "9.0.625.26613"
          }
        }
      },
      "System.Text.Encodings.Web/6.0.0": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Text.Json/6.0.10": {
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0",
          "System.Text.Encodings.Web": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/System.Text.Json.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.3524.45918"
          }
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {}
    }
  },
  "libraries": {
    "Azure.Core/1.44.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YyznXLQZCregzHvioip07/BkzjuWNXogJEVz9T5W6TwjNr17ax41YGzYMptlo2G10oLCuVPoyva62y0SIRDixg==",
      "path": "azure.core/1.44.1",
      "hashPath": "azure.core.1.44.1.nupkg.sha512"
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "path": "communitytoolkit.mvvm/8.4.0",
      "hashPath": "communitytoolkit.mvvm.8.4.0.nupkg.sha512"
    },
    "Google.Api.CommonProtos/2.16.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-37MuZrE9AAqHAdYgFLoTHydAiXDRriQZGVKEg6fr6ASnrY5GtauYXnQrGk5x2K3NmYzEXe+wkpaPVmxjb3NKjg==",
      "path": "google.api.commonprotos/2.16.0",
      "hashPath": "google.api.commonprotos.2.16.0.nupkg.sha512"
    },
    "Google.Api.Gax/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-fjHHYcQ99u0ztqwT537rvVtJMdDy6G2VHBZ+F1cBjDGYNVZfrpk40DMQ/OpUGToT9ZGHVirhh3eJ73bw2ANVPQ==",
      "path": "google.api.gax/4.9.0",
      "hashPath": "google.api.gax.4.9.0.nupkg.sha512"
    },
    "Google.Api.Gax.Grpc/4.9.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ToCx/0cs+wJ9j7vzKRcPAKneJVZrz/s9JhW9QsFx1dar9WzTxawQZ8xTjyieSy8tY0UiYCL1qYkn/iRrklYnSA==",
      "path": "google.api.gax.grpc/4.9.0",
      "hashPath": "google.api.gax.grpc.4.9.0.nupkg.sha512"
    },
    "Google.Apis/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "path": "google.apis/1.70.0",
      "hashPath": "google.apis.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Auth/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "path": "google.apis.auth/1.70.0",
      "hashPath": "google.apis.auth.1.70.0.nupkg.sha512"
    },
    "Google.Apis.Core/1.70.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "path": "google.apis.core/1.70.0",
      "hashPath": "google.apis.core.1.70.0.nupkg.sha512"
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "hashPath": "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512"
    },
    "Google.Cloud.TextToSpeech.V1/3.12.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5eIfjGicnKagFSkmF5vyJt2x6JdBIs+tjBKPU3E8ppZ4587CwlgVYixa72WL9yygPijjGvlUg+3vwssAz8z+KQ==",
      "path": "google.cloud.texttospeech.v1/3.12.0",
      "hashPath": "google.cloud.texttospeech.v1.3.12.0.nupkg.sha512"
    },
    "Google.LongRunning/3.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-F2SZ83Jo466Wj/s1Z7QhIAmWBXxJZQyXZpcx0P8BR7d6s0FAj67vQjeUPESSJcvsy8AqYiYBhkUr2YpZhTQeHg==",
      "path": "google.longrunning/3.3.0",
      "hashPath": "google.longrunning.3.3.0.nupkg.sha512"
    },
    "Google.Protobuf/3.28.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z86ZKAB+v1B/m0LTM+EVamvZlYw/g3VND3/Gs4M/+aDIxa2JE9YPKjDxTpf0gv2sh26hrve3eI03brxBmzn92g==",
      "path": "google.protobuf/3.28.2",
      "hashPath": "google.protobuf.3.28.2.nupkg.sha512"
    },
    "Grpc.Auth/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-FRQlhMAcHf0GjAXIfhN6RydfZncLLXNNTOtpLL1bt57kp59vu40faW+dr6Vwl7ef/IUFfF38aiB5jvhAA/9Aow==",
      "path": "grpc.auth/2.66.0",
      "hashPath": "grpc.auth.2.66.0.nupkg.sha512"
    },
    "Grpc.Core.Api/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HsjsQVAHe4hqP4t4rpUnmq+MZvPdyrlPsWF4T5fbMvyP3o/lMV+KVJfDlaNH8+v0aGQTVT3EsDFufbhaWb52cw==",
      "path": "grpc.core.api/2.66.0",
      "hashPath": "grpc.core.api.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Client/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GwkSsssXFgN9+M2U+UQWdErf61sn1iqgP+2NRBlDXATcP9vlxda0wySxd/eIL8U522+SnyFNUXlvQ5tAzGk9cA==",
      "path": "grpc.net.client/2.66.0",
      "hashPath": "grpc.net.client.2.66.0.nupkg.sha512"
    },
    "Grpc.Net.Common/2.66.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YJpQpIvpo0HKlsG6SHwaieyji08qfv0DdEDIewCAA0egQY08637sHOj1netLGUhzBEsCqlGC3e92TZ2uqhxnvw==",
      "path": "grpc.net.common/2.66.0",
      "hashPath": "grpc.net.common.2.66.0.nupkg.sha512"
    },
    "MediatR/12.5.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vqm2H8/nqL5NAJHPhsG1JOPwfkmbVrPyh4svdoRzu+uZh6Ex7PRoHBGsLYC0/RWCEJFqD1ohHNpteQvql9OktA==",
      "path": "mediatr/12.5.0",
      "hashPath": "mediatr.12.5.0.nupkg.sha512"
    },
    "MediatR.Contracts/2.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-FYv95bNT4UwcNA+G/J1oX5OpRiSUxteXaUt2BJbRSdRNiIUNbggJF69wy6mnk2wYToaanpdXZdCwVylt96MpwQ==",
      "path": "mediatr.contracts/2.0.1",
      "hashPath": "mediatr.contracts.2.0.1.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UcSjPsst+DfAdJGVDsu346FX0ci0ah+lw3WRtn18NUwEqRt70HaOQ7lI72vy3+1LxtqI3T5GWwV39rQSrCzAeg==",
      "path": "microsoft.bcl.asyncinterfaces/6.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.6.0.0.nupkg.sha512"
    },
    "Microsoft.CognitiveServices.Speech/1.44.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pUGHPjxsv72SYw2Fh0rQV8NehZcDqzlUMLZ1keOSWaX8Yqs6QcANIu+xopdRnI2V8rY0x+8GJ8Ern/i4+D6Hdw==",
      "path": "microsoft.cognitiveservices.speech/1.44.0",
      "hashPath": "microsoft.cognitiveservices.speech.1.44.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-VWB5jdkxHsRiuoniTqwOL32R4OWyp5If/bAucLjRJczRVNcwb8iCXKLjn3Inv8fv+jHMVMnvQLg7xhSys+y5PA==",
      "path": "microsoft.extensions.configuration/9.0.6",
      "hashPath": "microsoft.extensions.configuration.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3GgMIi2jP8g1fBW93Z9b9Unamc0SIsgyhiCmC91gq4loTixK9vQMuxxUsfJ1kRGwn+/FqLKwOHqmn0oYWn3Fvw==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Binder/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Opl/7SIrwDy9WjHn/vU2thQ8CUtrIWHLr+89I7/0VYNEJQvpL24zvqYrh83cH38RzNKHji0WGVkCVP6HJChVVw==",
      "path": "microsoft.extensions.configuration.binder/9.0.6",
      "hashPath": "microsoft.extensions.configuration.binder.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-DC5I4Y1nK35jY4piDqQCzWjDXzT6ECMctBAxgAJoc6pn0k6uyxcDeOuVDRooFui/N65ptn9xT5mk9eO4mSTj/g==",
      "path": "microsoft.extensions.configuration.commandline/9.0.6",
      "hashPath": "microsoft.extensions.configuration.commandline.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-RGYG2JBak9lf2rIPiZUVmWjUqoxaHPy3XPhPsJyIQ8QqK47rKvJz7jxVYefTnYdM5LTEiGFBdC7v3+SiosvmkQ==",
      "path": "microsoft.extensions.configuration.environmentvariables/9.0.6",
      "hashPath": "microsoft.extensions.configuration.environmentvariables.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pCEueasI5JhJ24KYzMFxtG40zyLnWpcQYawpARh9FNq9XbWozuWgexmdkPa8p8YoVNlpi3ecKfcjfoRMkKAufw==",
      "path": "microsoft.extensions.configuration.fileextensions/9.0.6",
      "hashPath": "microsoft.extensions.configuration.fileextensions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Json/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-N0dgOYQ9tDzJouL9Tyx2dgMCcHV2pBaY8yVtorbDqYYwiDRS2zd1TbhTA2FMHqXF3SMjBoO+gONZcDoA79gdSA==",
      "path": "microsoft.extensions.configuration.json/9.0.6",
      "hashPath": "microsoft.extensions.configuration.json.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0ZZMzdvNwIS0f09S0IcaEbKFm+Xc41vRROsA/soeKEpzRISTDdiVwGlzdldbXEsuPjNVvNHyvIP8YW2hfIig0w==",
      "path": "microsoft.extensions.configuration.usersecrets/9.0.6",
      "hashPath": "microsoft.extensions.configuration.usersecrets.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vS65HMo5RS10DD543fknsyVDxihMcVxVn3/hNaILgBxWYnOLxWIeCIO9X0QFuCvPRNjClvXe9Aj8KaQNx7vFkQ==",
      "path": "microsoft.extensions.dependencyinjection/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mIqCzZseDK9SqTRy4LxtjLwjlUu6aH5UdA6j0vgVER14yki9oRqLF+SmBiF6OlwsBSeL6dMQ8dmq02JMeE2puQ==",
      "path": "microsoft.extensions.diagnostics/9.0.6",
      "hashPath": "microsoft.extensions.diagnostics.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GIoXX7VDcTEsNM6yvffTBaOwnPQELGI5dzExR7L2O7AUkDsHBYIZawUbuwfq3cYzz8dIAAJotQYJMzH7qy27Ng==",
      "path": "microsoft.extensions.diagnostics.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.diagnostics.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-q9FPkSGVA9ipI255p3PBAvWNXas5Tzjyp/DwYSwT+46mIFw9fWZahsF6vHpoxLt5/vtANotH2sAm7HunuFIx9g==",
      "path": "microsoft.extensions.fileproviders.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.fileproviders.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-l+dFA0NRl90vSIiJNy5d7V0kpTEOWHTqbgoWYzlTwF5uiM5sWJ953haaELKE05jkyJdnemVTnqjrlgo4wo7oyg==",
      "path": "microsoft.extensions.fileproviders.physical/9.0.6",
      "hashPath": "microsoft.extensions.fileproviders.physical.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-1HJCAbwukNEoYbHgHbKHmenU0V/0huw8+i7Qtf5rLUG1E+3kEwRJQxpwD3wbTEagIgPSQisNgJTvmUX9yYVc6g==",
      "path": "microsoft.extensions.filesystemglobbing/9.0.6",
      "hashPath": "microsoft.extensions.filesystemglobbing.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Iu1UyXUnjMhoOwThKM0kCyjgWqqQnuujsbPMnF44ITUbmETT7RAVlozNgev2L/damwNoPZKpmwArRKBy2IOAZg==",
      "path": "microsoft.extensions.hosting/9.0.6",
      "hashPath": "microsoft.extensions.hosting.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-G9T95JbcG/wQpeVIzg0IMwxI+uTywDmbxWUWN2P0mdna35rmuTqgTrZ4SU5rcfUT3EJfbI9N4K8UyCAAc6QK8Q==",
      "path": "microsoft.extensions.hosting.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.hosting.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XBzjitTFaQhF8EbJ645vblZezV1p52ePTxKHoVkRidHF11Xkjxg94qr0Rvp2qyxK2vBJ4OIZ41NB15YUyxTGMQ==",
      "path": "microsoft.extensions.logging/9.0.6",
      "hashPath": "microsoft.extensions.logging.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Configuration/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lCgpxE5r6v43SB40/yUVnSWZUUqUZF5iUWizhkx4gqvq0L0rMw5g8adWKGO7sfIaSbCiU0et85sDQWswhLcceg==",
      "path": "microsoft.extensions.logging.configuration/9.0.6",
      "hashPath": "microsoft.extensions.logging.configuration.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Console/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-L1O0M3MrqGlkrPYMLzcCphQpCG0lSHfTSPrm1otALNBzTPiO8rxxkjhBIIa2onKv92UP30Y4QaiigVMTx8YcxQ==",
      "path": "microsoft.extensions.logging.console/9.0.6",
      "hashPath": "microsoft.extensions.logging.console.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Debug/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-u21euQdOjaEwmlnnB1Zd4XGqOmWI8FkoGeUleV7n4BZ8HPQC/jrYzX/B5Cz3uI/FXjd//W88clPfkGIbSif7Jw==",
      "path": "microsoft.extensions.logging.debug/9.0.6",
      "hashPath": "microsoft.extensions.logging.debug.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventLog/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IyyGy7xNJAjdlFYXc7SZ7kS3CWd3Ma4hing9QGtzXi+LXm8RWCEXdKA1cPx5AeFmdg3rVG+ADGIn44K14O+vFA==",
      "path": "microsoft.extensions.logging.eventlog/9.0.6",
      "hashPath": "microsoft.extensions.logging.eventlog.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventSource/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ayCRr/8ON3aINH81ak9l3vLAF/0pV/xrfChCbIlT2YnHAd4TYBWLcWhzbJWwPFV4XmJFrx/z8oq+gZzIc/74OA==",
      "path": "microsoft.extensions.logging.eventsource/9.0.6",
      "hashPath": "microsoft.extensions.logging.eventsource.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wUPhNM1zsI58Dy10xRdF2+pnsisiUuETg5ZBncyAEEUm/CQ9Q1vmivyUWH8RDbAlqyixf2dJNQ2XZb7HsKUEQw==",
      "path": "microsoft.extensions.options/9.0.6",
      "hashPath": "microsoft.extensions.options.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2lnp8nrvfzyp+5zvfeULm/hkZsDsKkl2ziBt5T8EZKoON5q+XRpRLoWcSPo8mP7GNZXpxKMBVjFNIZNbBIcnRw==",
      "path": "microsoft.extensions.options.configurationextensions/9.0.6",
      "hashPath": "microsoft.extensions.options.configurationextensions.9.0.6.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BHniU24QV67qp1pJknqYSofAPYGmijGI8D+ci9yfw33iuFdyOeB9lWTg78ThyYLyQwZw3s0vZ36VMb0MqbUuLw==",
      "path": "microsoft.extensions.primitives/9.0.6",
      "hashPath": "microsoft.extensions.primitives.9.0.6.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "Serilog/4.2.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gmoWVOvKgbME8TYR+gwMf7osROiWAURterc6Rt2dQyX7wtjZYpqFiA/pY6ztjGQKKV62GGCyOcmtP1UKMHgSmA==",
      "path": "serilog/4.2.0",
      "hashPath": "serilog.4.2.0.nupkg.sha512"
    },
    "Serilog.Extensions.Hosting/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-u2TRxuxbjvTAldQn7uaAwePkWxTHIqlgjelekBtilAGL5sYyF3+65NWctN4UrwwGLsDC7c3Vz3HnOlu+PcoxXg==",
      "path": "serilog.extensions.hosting/9.0.0",
      "hashPath": "serilog.extensions.hosting.9.0.0.nupkg.sha512"
    },
    "Serilog.Extensions.Logging/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NwSSYqPJeKNzl5AuXVHpGbr6PkZJFlNa14CdIebVjK3k/76kYj/mz5kiTRNVSsSaxM8kAIa1kpy/qyT9E4npRQ==",
      "path": "serilog.extensions.logging/9.0.0",
      "hashPath": "serilog.extensions.logging.9.0.0.nupkg.sha512"
    },
    "Serilog.Sinks.File/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-fKL7mXv7qaiNBUC71ssvn/dU0k9t0o45+qm2XgKAlSt19xF+ijjxyA3R6HmCgfKEKwfcfkwWjayuQtRueZFkYw==",
      "path": "serilog.sinks.file/7.0.0",
      "hashPath": "serilog.sinks.file.7.0.0.nupkg.sha512"
    },
    "SkiaSharp/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gR9yVoOta2Mc1Rxt15LD65AckfHMfwjIs/3kkD59C9bT2nYYISsE6uz3t4aMPNHA6CgsIL0Ssn+jE5OVilZ1yw==",
      "path": "skiasharp/3.119.0",
      "hashPath": "skiasharp.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.macOS/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YE1vNn0Nyw2PWtv7hw1PYkKJO0itFiQp9vSqGppZUKzQJqwp28a2jgdCMPfYtOiR8KCnDgZqQoynqJRRaE2ZVg==",
      "path": "skiasharp.nativeassets.macos/3.119.0",
      "hashPath": "skiasharp.nativeassets.macos.3.119.0.nupkg.sha512"
    },
    "SkiaSharp.NativeAssets.Win32/3.119.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IwC9yx36lOdXVT2DjgmWHl1qkVspfj8ctd4+li8CNnvqdfaTolXCOh6TLznURcPAvzatx9K/tLOB7zT6T8EA9w==",
      "path": "skiasharp.nativeassets.win32/3.119.0",
      "hashPath": "skiasharp.nativeassets.win32.3.119.0.nupkg.sha512"
    },
    "System.ClientModel/1.1.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UocOlCkxLZrG2CKMAAImPcldJTxeesHnHGHwhJ0pNlZEvEXcWKuQvVOER2/NiOkJGRJk978SNdw3j6/7O9H1lg==",
      "path": "system.clientmodel/1.1.0",
      "hashPath": "system.clientmodel.1.1.0.nupkg.sha512"
    },
    "System.CodeDom/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "path": "system.codedom/7.0.0",
      "hashPath": "system.codedom.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/6.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-KiLYDu2k2J82Q9BJpWiuQqCkFjRBWVq4jDzKKWawVi9KWzyD0XG3cmfX0vqTQlL14Wi9EufJrbL0+KCLTbqWiQ==",
      "path": "system.diagnostics.diagnosticsource/6.0.1",
      "hashPath": "system.diagnostics.diagnosticsource.6.0.1.nupkg.sha512"
    },
    "System.Diagnostics.EventLog/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lum+Dv+8S4gqN5H1C576UcQe0M2buoRjEUVs4TctXRSWjBH3ay3w2KyQrOo1yPdRs1I+xK69STz+4mjIisFI5w==",
      "path": "system.diagnostics.eventlog/9.0.6",
      "hashPath": "system.diagnostics.eventlog.9.0.6.nupkg.sha512"
    },
    "System.Management/7.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "path": "system.management/7.0.2",
      "hashPath": "system.management.7.0.2.nupkg.sha512"
    },
    "System.Memory.Data/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ntFHArH3I4Lpjf5m4DCXQHJuGwWPNVJPaAvM95Jy/u+2Yzt2ryiyIN04LAogkjP9DeRcEOiviAjQotfmPq/FrQ==",
      "path": "system.memory.data/6.0.0",
      "hashPath": "system.memory.data.6.0.0.nupkg.sha512"
    },
    "System.Numerics.Vectors/4.5.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QQTlPTl06J/iiDbJCiepZ4H//BVraReU4O4EoRw1U02H5TLUIT7xn3GnDp9AXPSlJUDyFs4uWjWafNX6WrAojQ==",
      "path": "system.numerics.vectors/4.5.0",
      "hashPath": "system.numerics.vectors.4.5.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Speech/9.0.6": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Cyc9GLB8OpPNFFSlvnaLzkLSyGCuIENllB47w0WwP+SzVfDWvGdTEK1iIaMQEoRjpdl4sRYrchCDYx6GqNlu/w==",
      "path": "system.speech/9.0.6",
      "hashPath": "system.speech.9.0.6.nupkg.sha512"
    },
    "System.Text.Encodings.Web/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vg8eB5Tawm1IFqj4TVK1czJX89rhFxJo9ELqc/Eiq0eXy13RK00eubyU6TJE6y+GQXjyV5gSfiewDUZjQgSE0w==",
      "path": "system.text.encodings.web/6.0.0",
      "hashPath": "system.text.encodings.web.6.0.0.nupkg.sha512"
    },
    "System.Text.Json/6.0.10": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NSB0kDipxn2ychp88NXWfFRFlmi1bst/xynOutbnpEfRCT9JZkZ7KOmF/I/hNKo2dILiMGnqblm+j1sggdLB9g==",
      "path": "system.text.json/6.0.10",
      "hashPath": "system.text.json.6.0.10.nupkg.sha512"
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "path": "system.threading.tasks.extensions/4.5.4",
      "hashPath": "system.threading.tasks.extensions.4.5.4.nupkg.sha512"
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI.designer.runtimeconfig.json">
<![CDATA[
{
  "runtimeOptions": {
    "tfm": "net9.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "9.0.0"
      },
      {
        "name": "Microsoft.WindowsDesktop.App",
        "version": "9.0.0"
      }
    ],
    "additionalProbingPaths": [
      "C:\\Users\\Dean Kruger\\.dotnet\\store\\|arch|\\|tfm|",
      "C:\\Users\\Dean Kruger\\.nuget\\packages",
      "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
    ],
    "configProperties": {
      "MVVMTOOLKIT_ENABLE_INOTIFYPROPERTYCHANGING_SUPPORT": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false,
      "CSWINRT_USE_WINDOWS_UI_XAML_PROJECTIONS": false,
      "Microsoft.NETCore.DotNetHostPolicy.SetAppPaths": true
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_1scs1gbn_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_1scs1gbn_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_1scs1gbn_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_423y3der_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_423y3der_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_423y3der_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_akfdv21n_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_akfdv21n_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_akfdv21n_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_Content.g.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("reddit-logo-2436.ico")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffmpeg.exe")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffplay.exe")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffprobe.exe")]



]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_Content.g.i.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("reddit-logo-2436.ico")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffmpeg.exe")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffplay.exe")]
[assembly: System.Windows.Resources.AssemblyAssociatedContentFileAttribute("ffmpeg/ffprobe.exe")]



]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dg44mbb5_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dg44mbb5_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dg44mbb5_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dqlx4om1_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dqlx4om1_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_dqlx4om1_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_egrkauqr_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_egrkauqr_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_egrkauqr_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_f0wy02e3_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_f0wy02e3_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_f0wy02e3_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_hhigqumz_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_hhigqumz_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_hhigqumz_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_jewznt2u_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_jewznt2u_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_jewznt2u_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_l0othnjh_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_l0othnjh_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_l0othnjh_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_nyriuyef_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_nyriuyef_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_nyriuyef_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_p0tazqsj_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_p0tazqsj_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_p0tazqsj_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_pajoxvxf_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_pajoxvxf_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_pajoxvxf_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qcjoviks_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qcjoviks_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qcjoviks_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qowpr0m4_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qowpr0m4_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qowpr0m4_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qrff4e3i_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qrff4e3i_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qrff4e3i_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qtbgcakt_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qtbgcakt_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_qtbgcakt_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_rmn2bqu0_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_rmn2bqu0_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_rmn2bqu0_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tjmk0ktt_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tjmk0ktt_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tjmk0ktt_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tu10hca5_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tu10hca5_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_tu10hca5_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_u0vvllsg_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_u0vvllsg_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_u0vvllsg_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_vp02gunw_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_vp02gunw_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_vp02gunw_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xj2liz0u_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xj2liz0u_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xj2liz0u_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xks1au1a_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xks1au1a_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_xks1au1a_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_yosnrzic_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_yosnrzic_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_yosnrzic_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_ztmcvqe4_wpftmp.AssemblyInfo.cs">
<![CDATA[
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+a169e534e48d0dc4efce3153a53593cbda7d5622")]
[assembly: System.Reflection.AssemblyProductAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyTitleAttribute("RedditVideoStudio.UI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: System.Runtime.Versioning.TargetPlatformAttribute("Windows7.0")]
[assembly: System.Runtime.Versioning.SupportedOSPlatformAttribute("Windows7.0")]

// Generated by the MSBuild WriteCodeFragment class.


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_ztmcvqe4_wpftmp.GlobalUsings.g.cs">
<![CDATA[
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.Linq;
global using global::System.Threading;
global using global::System.Threading.Tasks;

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\RedditVideoStudio.UI_ztmcvqe4_wpftmp.sourcelink.json">
<![CDATA[
{"documents":{"C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\*":"https://raw.githubusercontent.com/deanable/RedditVideoStudio/a169e534e48d0dc4efce3153a53593cbda7d5622/*"}}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\SettingsWindow.g.cs">
<![CDATA[
#pragma checksum "..\..\..\SettingsWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9BB67783DC42BA67F5327B77F36917E19C19571C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI.Converters;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// SettingsWindow
    /// </summary>
    public partial class SettingsWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 189 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ComboBox TtsProviderComboBox;
        
        #line default
        #line hidden
        
        
        #line 232 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider IntroDurationSlider;
        
        #line default
        #line hidden
        
        
        #line 242 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider BreakDurationSlider;
        
        #line default
        #line hidden
        
        
        #line 252 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider OutroDurationSlider;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/settingswindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\SettingsWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            
            #line 31 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveAndClose_Click);
            
            #line default
            #line hidden
            return;
            case 2:
            this.TtsProviderComboBox = ((System.Windows.Controls.ComboBox)(target));
            return;
            case 3:
            
            #line 230 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.IntroHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 4:
            this.IntroDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            case 5:
            
            #line 240 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.BreakHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 6:
            this.BreakDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            case 7:
            
            #line 250 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.OutroHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 8:
            this.OutroDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\Debug\net9.0-windows\SettingsWindow.g.i.cs">
<![CDATA[
#pragma checksum "..\..\..\SettingsWindow.xaml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9BB67783DC42BA67F5327B77F36917E19C19571C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RedditVideoStudio.UI.Converters;
using System;
using System.Diagnostics;
using System.Windows;
using System.Windows.Automation;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Controls.Ribbon;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Ink;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Effects;
using System.Windows.Media.Imaging;
using System.Windows.Media.Media3D;
using System.Windows.Media.TextFormatting;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Shell;


namespace RedditVideoStudio.UI {
    
    
    /// <summary>
    /// SettingsWindow
    /// </summary>
    public partial class SettingsWindow : System.Windows.Window, System.Windows.Markup.IComponentConnector {
        
        
        #line 189 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.ComboBox TtsProviderComboBox;
        
        #line default
        #line hidden
        
        
        #line 232 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider IntroDurationSlider;
        
        #line default
        #line hidden
        
        
        #line 242 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider BreakDurationSlider;
        
        #line default
        #line hidden
        
        
        #line 252 "..\..\..\SettingsWindow.xaml"
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
        internal System.Windows.Controls.Slider OutroDurationSlider;
        
        #line default
        #line hidden
        
        private bool _contentLoaded;
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        public void InitializeComponent() {
            if (_contentLoaded) {
                return;
            }
            _contentLoaded = true;
            System.Uri resourceLocater = new System.Uri("/RedditVideoStudio.UI;component/settingswindow.xaml", System.UriKind.Relative);
            
            #line 1 "..\..\..\SettingsWindow.xaml"
            System.Windows.Application.LoadComponent(this, resourceLocater);
            
            #line default
            #line hidden
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "9.0.6.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
        void System.Windows.Markup.IComponentConnector.Connect(int connectionId, object target) {
            switch (connectionId)
            {
            case 1:
            
            #line 31 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveAndClose_Click);
            
            #line default
            #line hidden
            return;
            case 2:
            this.TtsProviderComboBox = ((System.Windows.Controls.ComboBox)(target));
            return;
            case 3:
            
            #line 230 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.IntroHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 4:
            this.IntroDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            case 5:
            
            #line 240 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.BreakHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 6:
            this.BreakDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            case 7:
            
            #line 250 "..\..\..\SettingsWindow.xaml"
            ((System.Windows.Documents.Hyperlink)(target)).Click += new System.Windows.RoutedEventHandler(this.OutroHyperlink_Click);
            
            #line default
            #line hidden
            return;
            case 8:
            this.OutroDurationSlider = ((System.Windows.Controls.Slider)(target));
            return;
            }
            this._contentLoaded = true;
        }
    }
}


]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\project.assets.json">
<![CDATA[
{
  "version": 3,
  "targets": {
    "net9.0-windows7.0": {
      "Azure.Core/1.44.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "System.ClientModel": "1.1.0",
          "System.Diagnostics.DiagnosticSource": "6.0.1",
          "System.Memory.Data": "6.0.0",
          "System.Numerics.Vectors": "4.5.0",
          "System.Text.Encodings.Web": "6.0.0",
          "System.Text.Json": "6.0.10",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "compile": {
          "lib/net6.0/Azure.Core.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Azure.Core.dll": {
            "related": ".xml"
          }
        }
      },
      "CommunityToolkit.Mvvm/8.4.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/CommunityToolkit.Mvvm.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "buildTransitive/CommunityToolkit.Mvvm.targets": {}
        }
      },
      "Google.Api.CommonProtos/2.16.0": {
        "type": "package",
        "dependencies": {
          "Google.Protobuf": "[3.28.2, 4.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.CommonProtos.dll": {
            "related": ".pdb;.xml"
          }
        },
        "build": {
          "build/_._": {}
        }
      },
      "Google.Api.Gax/4.9.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Bcl.AsyncInterfaces": "6.0.0",
          "Newtonsoft.Json": "13.0.3",
          "System.Diagnostics.DiagnosticSource": "6.0.1"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Api.Gax.Grpc/4.9.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.CommonProtos": "2.16.0",
          "Google.Api.Gax": "4.9.0",
          "Google.Apis.Auth": "1.68.0",
          "Grpc.Auth": "2.66.0",
          "Grpc.Core.Api": "2.66.0",
          "Grpc.Net.Client": "2.66.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Api.Gax.Grpc.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Core": "1.70.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Auth/1.70.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.70.0",
          "Google.Apis.Core": "1.70.0",
          "System.Management": "7.0.2"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.Core/1.70.0": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.Core.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Apis.YouTube.v3/1.69.0.3764": {
        "type": "package",
        "dependencies": {
          "Google.Apis": "1.69.0",
          "Google.Apis.Auth": "1.69.0"
        },
        "compile": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/Google.Apis.YouTube.v3.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Cloud.TextToSpeech.V1/3.12.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.Gax.Grpc": "[4.9.0, 5.0.0)",
          "Google.LongRunning": "[3.3.0, 4.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.LongRunning/3.3.0": {
        "type": "package",
        "dependencies": {
          "Google.Api.Gax.Grpc": "[4.8.0, 5.0.0)"
        },
        "compile": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Google.LongRunning.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Google.Protobuf/3.28.2": {
        "type": "package",
        "compile": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net5.0/Google.Protobuf.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Auth/2.66.0": {
        "type": "package",
        "dependencies": {
          "Google.Apis.Auth": "1.68.0",
          "Grpc.Core.Api": "2.66.0"
        },
        "compile": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Grpc.Auth.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Core.Api/2.66.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Grpc.Core.Api.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Client/2.66.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Net.Common": "2.66.0",
          "Microsoft.Extensions.Logging.Abstractions": "6.0.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Client.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Grpc.Net.Common/2.66.0": {
        "type": "package",
        "dependencies": {
          "Grpc.Core.Api": "2.66.0"
        },
        "compile": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Grpc.Net.Common.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "MediatR/12.5.0": {
        "type": "package",
        "dependencies": {
          "MediatR.Contracts": "[2.0.1, 3.0.0)",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net6.0/MediatR.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/MediatR.dll": {
            "related": ".xml"
          }
        }
      },
      "MediatR.Contracts/2.0.1": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/MediatR.Contracts.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/MediatR.Contracts.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.CognitiveServices.Speech/1.44.0": {
        "type": "package",
        "dependencies": {
          "Azure.Core": "1.44.1"
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/_._": {}
        },
        "runtimeTargets": {
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-arm"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-arm64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-x64"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "android-x86"
          },
          "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "ios-arm64"
          },
          "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "iossimulator-arm64"
          },
          "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "iossimulator-x64"
          },
          "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-arm"
          },
          "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-arm64"
          },
          "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so": {
            "assetType": "native",
            "rid": "linux-x64"
          },
          "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "maccatalyst-arm64"
          },
          "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a": {
            "assetType": "native",
            "rid": "maccatalyst-x64"
          },
          "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "osx-arm64"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "assetType": "native",
            "rid": "osx-arm64"
          },
          "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "assetType": "native",
            "rid": "osx-arm64"
          },
          "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll": {
            "assetType": "runtime",
            "rid": "osx-x64"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib": {
            "assetType": "native",
            "rid": "osx-x64"
          },
          "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib": {
            "assetType": "native",
            "rid": "osx-x64"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-arm"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll": {
            "assetType": "native",
            "rid": "win-x86"
          },
          "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll": {
            "assetType": "native",
            "rid": "win-x86"
          }
        }
      },
      "Microsoft.Extensions.Configuration/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Binder/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets": {}
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Json/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.props": {},
          "buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.targets": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileSystemGlobbing": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.Configuration.CommandLine": "9.0.6",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "9.0.6",
          "Microsoft.Extensions.Configuration.FileExtensions": "9.0.6",
          "Microsoft.Extensions.Configuration.Json": "9.0.6",
          "Microsoft.Extensions.Configuration.UserSecrets": "9.0.6",
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Physical": "9.0.6",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Logging.Console": "9.0.6",
          "Microsoft.Extensions.Logging.Debug": "9.0.6",
          "Microsoft.Extensions.Logging.EventLog": "9.0.6",
          "Microsoft.Extensions.Logging.EventSource": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Diagnostics.Abstractions": "9.0.6",
          "Microsoft.Extensions.FileProviders.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Logging.Configuration/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "9.0.6",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Console/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging.Configuration": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Debug/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventLog/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "System.Diagnostics.EventLog": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventSource/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Logging": "9.0.6",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Options/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.6",
          "Microsoft.Extensions.Configuration.Binder": "9.0.6",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.6",
          "Microsoft.Extensions.Options": "9.0.6",
          "Microsoft.Extensions.Primitives": "9.0.6"
        },
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog/4.2.0": {
        "type": "package",
        "compile": {
          "lib/net9.0/Serilog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Serilog.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Extensions.Hosting/9.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "9.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.0",
          "Serilog": "4.2.0",
          "Serilog.Extensions.Logging": "9.0.0"
        },
        "compile": {
          "lib/net9.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Extensions.Logging/9.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging": "9.0.0",
          "Serilog": "4.2.0"
        },
        "compile": {
          "lib/net9.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Serilog.Extensions.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Serilog.Sinks.File/7.0.0": {
        "type": "package",
        "dependencies": {
          "Serilog": "4.2.0"
        },
        "compile": {
          "lib/net9.0/Serilog.Sinks.File.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/Serilog.Sinks.File.dll": {
            "related": ".xml"
          }
        }
      },
      "SkiaSharp/3.119.0": {
        "type": "package",
        "dependencies": {
          "SkiaSharp.NativeAssets.Win32": "3.119.0",
          "SkiaSharp.NativeAssets.macOS": "3.119.0"
        },
        "compile": {
          "ref/net8.0/SkiaSharp.dll": {}
        },
        "runtime": {
          "lib/net8.0/SkiaSharp.dll": {
            "related": ".pdb"
          }
        }
      },
      "SkiaSharp.NativeAssets.macOS/3.119.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/osx/native/libSkiaSharp.dylib": {
            "assetType": "native",
            "rid": "osx"
          }
        }
      },
      "SkiaSharp.NativeAssets.Win32/3.119.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win-arm64/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-arm64"
          },
          "runtimes/win-x64/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-x64"
          },
          "runtimes/win-x86/native/libSkiaSharp.dll": {
            "assetType": "native",
            "rid": "win-x86"
          }
        }
      },
      "System.ClientModel/1.1.0": {
        "type": "package",
        "dependencies": {
          "System.Memory.Data": "1.0.2",
          "System.Text.Json": "6.0.9"
        },
        "compile": {
          "lib/net6.0/System.ClientModel.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.ClientModel.dll": {
            "related": ".xml"
          }
        }
      },
      "System.CodeDom/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/6.0.1": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Diagnostics.EventLog/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.Messages.dll": {
            "assetType": "runtime",
            "rid": "win"
          },
          "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Management/7.0.2": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "7.0.0"
        },
        "compile": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Management.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net7.0/System.Management.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Memory.Data/6.0.0": {
        "type": "package",
        "dependencies": {
          "System.Text.Json": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Memory.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Memory.Data.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Numerics.Vectors/4.5.0": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Speech/9.0.6": {
        "type": "package",
        "compile": {
          "lib/net9.0/System.Speech.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net9.0/System.Speech.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net9.0/System.Speech.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.Text.Encodings.Web/6.0.0": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/6.0.10": {
        "type": "package",
        "dependencies": {
          "System.Runtime.CompilerServices.Unsafe": "6.0.0",
          "System.Text.Encodings.Web": "6.0.0"
        },
        "compile": {
          "lib/net6.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.1/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.1/_._": {}
        }
      },
      "RedditVideoStudio.Application/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "compile": {
          "bin/placeholder/RedditVideoStudio.Application.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Application.dll": {}
        }
      },
      "RedditVideoStudio.Core/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "Google.Apis.Auth": "1.70.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0"
        },
        "compile": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Core.dll": {}
        }
      },
      "RedditVideoStudio.Domain/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Domain.dll": {}
        }
      },
      "RedditVideoStudio.Infrastructure/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "dependencies": {
          "Google.Apis.YouTube.v3": "1.69.0.3764",
          "Google.Cloud.TextToSpeech.V1": "3.12.0",
          "Microsoft.CognitiveServices.Speech": "1.44.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.6",
          "Newtonsoft.Json": "13.0.3",
          "RedditVideoStudio.Core": "1.0.0",
          "RedditVideoStudio.Domain": "1.0.0",
          "RedditVideoStudio.Shared": "1.0.0",
          "SkiaSharp": "3.119.0",
          "System.Speech": "9.0.6"
        },
        "compile": {
          "bin/placeholder/RedditVideoStudio.Infrastructure.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Infrastructure.dll": {}
        }
      },
      "RedditVideoStudio.Shared/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v9.0",
        "compile": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        },
        "runtime": {
          "bin/placeholder/RedditVideoStudio.Shared.dll": {}
        }
      }
    }
  },
  "libraries": {
    "Azure.Core/1.44.1": {
      "sha512": "YyznXLQZCregzHvioip07/BkzjuWNXogJEVz9T5W6TwjNr17ax41YGzYMptlo2G10oLCuVPoyva62y0SIRDixg==",
      "type": "package",
      "path": "azure.core/1.44.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CHANGELOG.md",
        "README.md",
        "azure.core.1.44.1.nupkg.sha512",
        "azure.core.nuspec",
        "azureicon.png",
        "lib/net461/Azure.Core.dll",
        "lib/net461/Azure.Core.xml",
        "lib/net472/Azure.Core.dll",
        "lib/net472/Azure.Core.xml",
        "lib/net6.0/Azure.Core.dll",
        "lib/net6.0/Azure.Core.xml",
        "lib/netstandard2.0/Azure.Core.dll",
        "lib/netstandard2.0/Azure.Core.xml"
      ]
    },
    "CommunityToolkit.Mvvm/8.4.0": {
      "sha512": "tqVU8yc/ADO9oiTRyTnwhFN68hCwvkliMierptWOudIAvWY1mWCh5VFh+guwHJmpMwfg0J0rY+yyd5Oy7ty9Uw==",
      "type": "package",
      "path": "communitytoolkit.mvvm/8.4.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "License.md",
        "ThirdPartyNotices.txt",
        "analyzers/dotnet/roslyn4.0/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.0/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "analyzers/dotnet/roslyn4.12/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.12/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "analyzers/dotnet/roslyn4.3/cs/CommunityToolkit.Mvvm.CodeFixers.dll",
        "analyzers/dotnet/roslyn4.3/cs/CommunityToolkit.Mvvm.SourceGenerators.dll",
        "build/CommunityToolkit.Mvvm.FeatureSwitches.targets",
        "build/CommunityToolkit.Mvvm.SourceGenerators.targets",
        "build/CommunityToolkit.Mvvm.Windows.targets",
        "build/CommunityToolkit.Mvvm.WindowsSdk.targets",
        "build/CommunityToolkit.Mvvm.targets",
        "buildTransitive/CommunityToolkit.Mvvm.FeatureSwitches.targets",
        "buildTransitive/CommunityToolkit.Mvvm.SourceGenerators.targets",
        "buildTransitive/CommunityToolkit.Mvvm.Windows.targets",
        "buildTransitive/CommunityToolkit.Mvvm.WindowsSdk.targets",
        "buildTransitive/CommunityToolkit.Mvvm.targets",
        "communitytoolkit.mvvm.8.4.0.nupkg.sha512",
        "communitytoolkit.mvvm.nuspec",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.dll",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.pdb",
        "lib/net8.0-windows10.0.17763/CommunityToolkit.Mvvm.xml",
        "lib/net8.0/CommunityToolkit.Mvvm.dll",
        "lib/net8.0/CommunityToolkit.Mvvm.pdb",
        "lib/net8.0/CommunityToolkit.Mvvm.xml",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.dll",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.pdb",
        "lib/netstandard2.0/CommunityToolkit.Mvvm.xml",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.dll",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.pdb",
        "lib/netstandard2.1/CommunityToolkit.Mvvm.xml"
      ]
    },
    "Google.Api.CommonProtos/2.16.0": {
      "sha512": "37MuZrE9AAqHAdYgFLoTHydAiXDRriQZGVKEg6fr6ASnrY5GtauYXnQrGk5x2K3NmYzEXe+wkpaPVmxjb3NKjg==",
      "type": "package",
      "path": "google.api.commonprotos/2.16.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "build/Google.Api.CommonProtos.targets",
        "content/protos/google/api/annotations.proto",
        "content/protos/google/api/auth.proto",
        "content/protos/google/api/backend.proto",
        "content/protos/google/api/billing.proto",
        "content/protos/google/api/client.proto",
        "content/protos/google/api/config_change.proto",
        "content/protos/google/api/consumer.proto",
        "content/protos/google/api/context.proto",
        "content/protos/google/api/control.proto",
        "content/protos/google/api/distribution.proto",
        "content/protos/google/api/documentation.proto",
        "content/protos/google/api/endpoint.proto",
        "content/protos/google/api/error_reason.proto",
        "content/protos/google/api/field_behavior.proto",
        "content/protos/google/api/field_info.proto",
        "content/protos/google/api/http.proto",
        "content/protos/google/api/httpbody.proto",
        "content/protos/google/api/label.proto",
        "content/protos/google/api/launch_stage.proto",
        "content/protos/google/api/log.proto",
        "content/protos/google/api/logging.proto",
        "content/protos/google/api/metric.proto",
        "content/protos/google/api/monitored_resource.proto",
        "content/protos/google/api/monitoring.proto",
        "content/protos/google/api/policy.proto",
        "content/protos/google/api/quota.proto",
        "content/protos/google/api/resource.proto",
        "content/protos/google/api/routing.proto",
        "content/protos/google/api/service.proto",
        "content/protos/google/api/source_info.proto",
        "content/protos/google/api/system_parameter.proto",
        "content/protos/google/api/usage.proto",
        "content/protos/google/api/visibility.proto",
        "content/protos/google/rpc/code.proto",
        "content/protos/google/rpc/context/attribute_context.proto",
        "content/protos/google/rpc/context/audit_context.proto",
        "content/protos/google/rpc/error_details.proto",
        "content/protos/google/rpc/http.proto",
        "content/protos/google/rpc/status.proto",
        "content/protos/google/type/calendar_period.proto",
        "content/protos/google/type/color.proto",
        "content/protos/google/type/date.proto",
        "content/protos/google/type/datetime.proto",
        "content/protos/google/type/dayofweek.proto",
        "content/protos/google/type/decimal.proto",
        "content/protos/google/type/expr.proto",
        "content/protos/google/type/fraction.proto",
        "content/protos/google/type/interval.proto",
        "content/protos/google/type/latlng.proto",
        "content/protos/google/type/localized_text.proto",
        "content/protos/google/type/money.proto",
        "content/protos/google/type/month.proto",
        "content/protos/google/type/phone_number.proto",
        "content/protos/google/type/postal_address.proto",
        "content/protos/google/type/quaternion.proto",
        "content/protos/google/type/timeofday.proto",
        "google.api.commonprotos.2.16.0.nupkg.sha512",
        "google.api.commonprotos.nuspec",
        "lib/net461/Google.Api.CommonProtos.dll",
        "lib/net461/Google.Api.CommonProtos.pdb",
        "lib/net461/Google.Api.CommonProtos.xml",
        "lib/netstandard2.0/Google.Api.CommonProtos.dll",
        "lib/netstandard2.0/Google.Api.CommonProtos.pdb",
        "lib/netstandard2.0/Google.Api.CommonProtos.xml"
      ]
    },
    "Google.Api.Gax/4.9.0": {
      "sha512": "fjHHYcQ99u0ztqwT537rvVtJMdDy6G2VHBZ+F1cBjDGYNVZfrpk40DMQ/OpUGToT9ZGHVirhh3eJ73bw2ANVPQ==",
      "type": "package",
      "path": "google.api.gax/4.9.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.api.gax.4.9.0.nupkg.sha512",
        "google.api.gax.nuspec",
        "lib/net462/Google.Api.Gax.dll",
        "lib/net462/Google.Api.Gax.pdb",
        "lib/net462/Google.Api.Gax.xml",
        "lib/netstandard2.0/Google.Api.Gax.dll",
        "lib/netstandard2.0/Google.Api.Gax.pdb",
        "lib/netstandard2.0/Google.Api.Gax.xml"
      ]
    },
    "Google.Api.Gax.Grpc/4.9.0": {
      "sha512": "ToCx/0cs+wJ9j7vzKRcPAKneJVZrz/s9JhW9QsFx1dar9WzTxawQZ8xTjyieSy8tY0UiYCL1qYkn/iRrklYnSA==",
      "type": "package",
      "path": "google.api.gax.grpc/4.9.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.api.gax.grpc.4.9.0.nupkg.sha512",
        "google.api.gax.grpc.nuspec",
        "lib/net462/Google.Api.Gax.Grpc.dll",
        "lib/net462/Google.Api.Gax.Grpc.pdb",
        "lib/net462/Google.Api.Gax.Grpc.xml",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.dll",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.pdb",
        "lib/netstandard2.0/Google.Api.Gax.Grpc.xml"
      ]
    },
    "Google.Apis/1.70.0": {
      "sha512": "K6VKPkHRN1P7pMb84eZu1rFyoie7LIYYsjTPvTnEH2lbscU1sBLR1C1MtsCoSJzgDIjr0yVGmSKnIC4D73ro1g==",
      "type": "package",
      "path": "google.apis/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.1.70.0.nupkg.sha512",
        "google.apis.nuspec",
        "lib/net462/Google.Apis.dll",
        "lib/net462/Google.Apis.pdb",
        "lib/net462/Google.Apis.xml",
        "lib/net6.0/Google.Apis.dll",
        "lib/net6.0/Google.Apis.pdb",
        "lib/net6.0/Google.Apis.xml",
        "lib/netstandard2.0/Google.Apis.dll",
        "lib/netstandard2.0/Google.Apis.pdb",
        "lib/netstandard2.0/Google.Apis.xml"
      ]
    },
    "Google.Apis.Auth/1.70.0": {
      "sha512": "2gnpcYUaD5WS2/2922J+ji1tEKcNtxu+aQoiNVWhfcGwDqgcc5vk6ND6591M2UaGzJn0EdH325rsNHzi/MvA/A==",
      "type": "package",
      "path": "google.apis.auth/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.auth.1.70.0.nupkg.sha512",
        "google.apis.auth.nuspec",
        "lib/net462/Google.Apis.Auth.dll",
        "lib/net462/Google.Apis.Auth.pdb",
        "lib/net462/Google.Apis.Auth.xml",
        "lib/net6.0/Google.Apis.Auth.dll",
        "lib/net6.0/Google.Apis.Auth.pdb",
        "lib/net6.0/Google.Apis.Auth.xml",
        "lib/netstandard2.0/Google.Apis.Auth.dll",
        "lib/netstandard2.0/Google.Apis.Auth.pdb",
        "lib/netstandard2.0/Google.Apis.Auth.xml"
      ]
    },
    "Google.Apis.Core/1.70.0": {
      "sha512": "R7Mbea2iB/TN+3BA1LPCqb1eT2HxnILJ+ASl5pdhHHc8uSe95JTTnM2DEVbVBQ3vo9/FpbBxWBRjP1ed9QK9CQ==",
      "type": "package",
      "path": "google.apis.core/1.70.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.core.1.70.0.nupkg.sha512",
        "google.apis.core.nuspec",
        "lib/net462/Google.Apis.Core.dll",
        "lib/net462/Google.Apis.Core.pdb",
        "lib/net462/Google.Apis.Core.xml",
        "lib/net6.0/Google.Apis.Core.dll",
        "lib/net6.0/Google.Apis.Core.pdb",
        "lib/net6.0/Google.Apis.Core.xml",
        "lib/netstandard2.0/Google.Apis.Core.dll",
        "lib/netstandard2.0/Google.Apis.Core.pdb",
        "lib/netstandard2.0/Google.Apis.Core.xml"
      ]
    },
    "Google.Apis.YouTube.v3/1.69.0.3764": {
      "sha512": "WgGG6+Nr6Tr/TZsU/KOUWBuOOUVeHuG3Yp40DzSl95grFkKSRqKdlaIYNFnc9CyBF77pBfbscrSfhMkUVqbukA==",
      "type": "package",
      "path": "google.apis.youtube.v3/1.69.0.3764",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.apis.youtube.v3.1.69.0.3764.nupkg.sha512",
        "google.apis.youtube.v3.nuspec",
        "lib/net462/Google.Apis.YouTube.v3.dll",
        "lib/net462/Google.Apis.YouTube.v3.pdb",
        "lib/net462/Google.Apis.YouTube.v3.xml",
        "lib/net6.0/Google.Apis.YouTube.v3.dll",
        "lib/net6.0/Google.Apis.YouTube.v3.pdb",
        "lib/net6.0/Google.Apis.YouTube.v3.xml",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.dll",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.pdb",
        "lib/netstandard2.0/Google.Apis.YouTube.v3.xml"
      ]
    },
    "Google.Cloud.TextToSpeech.V1/3.12.0": {
      "sha512": "5eIfjGicnKagFSkmF5vyJt2x6JdBIs+tjBKPU3E8ppZ4587CwlgVYixa72WL9yygPijjGvlUg+3vwssAz8z+KQ==",
      "type": "package",
      "path": "google.cloud.texttospeech.v1/3.12.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.cloud.texttospeech.v1.3.12.0.nupkg.sha512",
        "google.cloud.texttospeech.v1.nuspec",
        "lib/net462/Google.Cloud.TextToSpeech.V1.dll",
        "lib/net462/Google.Cloud.TextToSpeech.V1.pdb",
        "lib/net462/Google.Cloud.TextToSpeech.V1.xml",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.dll",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.pdb",
        "lib/netstandard2.0/Google.Cloud.TextToSpeech.V1.xml"
      ]
    },
    "Google.LongRunning/3.3.0": {
      "sha512": "F2SZ83Jo466Wj/s1Z7QhIAmWBXxJZQyXZpcx0P8BR7d6s0FAj67vQjeUPESSJcvsy8AqYiYBhkUr2YpZhTQeHg==",
      "type": "package",
      "path": "google.longrunning/3.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "NuGetIcon.png",
        "google.longrunning.3.3.0.nupkg.sha512",
        "google.longrunning.nuspec",
        "lib/net462/Google.LongRunning.dll",
        "lib/net462/Google.LongRunning.pdb",
        "lib/net462/Google.LongRunning.xml",
        "lib/netstandard2.0/Google.LongRunning.dll",
        "lib/netstandard2.0/Google.LongRunning.pdb",
        "lib/netstandard2.0/Google.LongRunning.xml"
      ]
    },
    "Google.Protobuf/3.28.2": {
      "sha512": "Z86ZKAB+v1B/m0LTM+EVamvZlYw/g3VND3/Gs4M/+aDIxa2JE9YPKjDxTpf0gv2sh26hrve3eI03brxBmzn92g==",
      "type": "package",
      "path": "google.protobuf/3.28.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "google.protobuf.3.28.2.nupkg.sha512",
        "google.protobuf.nuspec",
        "lib/net45/Google.Protobuf.dll",
        "lib/net45/Google.Protobuf.pdb",
        "lib/net45/Google.Protobuf.xml",
        "lib/net5.0/Google.Protobuf.dll",
        "lib/net5.0/Google.Protobuf.pdb",
        "lib/net5.0/Google.Protobuf.xml",
        "lib/netstandard1.1/Google.Protobuf.dll",
        "lib/netstandard1.1/Google.Protobuf.pdb",
        "lib/netstandard1.1/Google.Protobuf.xml",
        "lib/netstandard2.0/Google.Protobuf.dll",
        "lib/netstandard2.0/Google.Protobuf.pdb",
        "lib/netstandard2.0/Google.Protobuf.xml"
      ]
    },
    "Grpc.Auth/2.66.0": {
      "sha512": "FRQlhMAcHf0GjAXIfhN6RydfZncLLXNNTOtpLL1bt57kp59vu40faW+dr6Vwl7ef/IUFfF38aiB5jvhAA/9Aow==",
      "type": "package",
      "path": "grpc.auth/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.auth.2.66.0.nupkg.sha512",
        "grpc.auth.nuspec",
        "lib/net462/Grpc.Auth.dll",
        "lib/net462/Grpc.Auth.pdb",
        "lib/net462/Grpc.Auth.xml",
        "lib/netstandard2.0/Grpc.Auth.dll",
        "lib/netstandard2.0/Grpc.Auth.pdb",
        "lib/netstandard2.0/Grpc.Auth.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Core.Api/2.66.0": {
      "sha512": "HsjsQVAHe4hqP4t4rpUnmq+MZvPdyrlPsWF4T5fbMvyP3o/lMV+KVJfDlaNH8+v0aGQTVT3EsDFufbhaWb52cw==",
      "type": "package",
      "path": "grpc.core.api/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.core.api.2.66.0.nupkg.sha512",
        "grpc.core.api.nuspec",
        "lib/net462/Grpc.Core.Api.dll",
        "lib/net462/Grpc.Core.Api.pdb",
        "lib/net462/Grpc.Core.Api.xml",
        "lib/netstandard2.0/Grpc.Core.Api.dll",
        "lib/netstandard2.0/Grpc.Core.Api.pdb",
        "lib/netstandard2.0/Grpc.Core.Api.xml",
        "lib/netstandard2.1/Grpc.Core.Api.dll",
        "lib/netstandard2.1/Grpc.Core.Api.pdb",
        "lib/netstandard2.1/Grpc.Core.Api.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Client/2.66.0": {
      "sha512": "GwkSsssXFgN9+M2U+UQWdErf61sn1iqgP+2NRBlDXATcP9vlxda0wySxd/eIL8U522+SnyFNUXlvQ5tAzGk9cA==",
      "type": "package",
      "path": "grpc.net.client/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "grpc.net.client.2.66.0.nupkg.sha512",
        "grpc.net.client.nuspec",
        "lib/net462/Grpc.Net.Client.dll",
        "lib/net462/Grpc.Net.Client.pdb",
        "lib/net462/Grpc.Net.Client.xml",
        "lib/net6.0/Grpc.Net.Client.dll",
        "lib/net6.0/Grpc.Net.Client.pdb",
        "lib/net6.0/Grpc.Net.Client.xml",
        "lib/net7.0/Grpc.Net.Client.dll",
        "lib/net7.0/Grpc.Net.Client.pdb",
        "lib/net7.0/Grpc.Net.Client.xml",
        "lib/net8.0/Grpc.Net.Client.dll",
        "lib/net8.0/Grpc.Net.Client.pdb",
        "lib/net8.0/Grpc.Net.Client.xml",
        "lib/netstandard2.0/Grpc.Net.Client.dll",
        "lib/netstandard2.0/Grpc.Net.Client.pdb",
        "lib/netstandard2.0/Grpc.Net.Client.xml",
        "lib/netstandard2.1/Grpc.Net.Client.dll",
        "lib/netstandard2.1/Grpc.Net.Client.pdb",
        "lib/netstandard2.1/Grpc.Net.Client.xml",
        "packageIcon.png"
      ]
    },
    "Grpc.Net.Common/2.66.0": {
      "sha512": "YJpQpIvpo0HKlsG6SHwaieyji08qfv0DdEDIewCAA0egQY08637sHOj1netLGUhzBEsCqlGC3e92TZ2uqhxnvw==",
      "type": "package",
      "path": "grpc.net.common/2.66.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "grpc.net.common.2.66.0.nupkg.sha512",
        "grpc.net.common.nuspec",
        "lib/net6.0/Grpc.Net.Common.dll",
        "lib/net6.0/Grpc.Net.Common.pdb",
        "lib/net6.0/Grpc.Net.Common.xml",
        "lib/net7.0/Grpc.Net.Common.dll",
        "lib/net7.0/Grpc.Net.Common.pdb",
        "lib/net7.0/Grpc.Net.Common.xml",
        "lib/net8.0/Grpc.Net.Common.dll",
        "lib/net8.0/Grpc.Net.Common.pdb",
        "lib/net8.0/Grpc.Net.Common.xml",
        "lib/netstandard2.0/Grpc.Net.Common.dll",
        "lib/netstandard2.0/Grpc.Net.Common.pdb",
        "lib/netstandard2.0/Grpc.Net.Common.xml",
        "lib/netstandard2.1/Grpc.Net.Common.dll",
        "lib/netstandard2.1/Grpc.Net.Common.pdb",
        "lib/netstandard2.1/Grpc.Net.Common.xml",
        "packageIcon.png"
      ]
    },
    "MediatR/12.5.0": {
      "sha512": "vqm2H8/nqL5NAJHPhsG1JOPwfkmbVrPyh4svdoRzu+uZh6Ex7PRoHBGsLYC0/RWCEJFqD1ohHNpteQvql9OktA==",
      "type": "package",
      "path": "mediatr/12.5.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "gradient_128x128.png",
        "lib/net6.0/MediatR.dll",
        "lib/net6.0/MediatR.xml",
        "lib/netstandard2.0/MediatR.dll",
        "lib/netstandard2.0/MediatR.xml",
        "mediatr.12.5.0.nupkg.sha512",
        "mediatr.nuspec"
      ]
    },
    "MediatR.Contracts/2.0.1": {
      "sha512": "FYv95bNT4UwcNA+G/J1oX5OpRiSUxteXaUt2BJbRSdRNiIUNbggJF69wy6mnk2wYToaanpdXZdCwVylt96MpwQ==",
      "type": "package",
      "path": "mediatr.contracts/2.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "gradient_128x128.png",
        "lib/netstandard2.0/MediatR.Contracts.dll",
        "lib/netstandard2.0/MediatR.Contracts.xml",
        "mediatr.contracts.2.0.1.nupkg.sha512",
        "mediatr.contracts.nuspec"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/6.0.0": {
      "sha512": "UcSjPsst+DfAdJGVDsu346FX0ci0ah+lw3WRtn18NUwEqRt70HaOQ7lI72vy3+1LxtqI3T5GWwV39rQSrCzAeg==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net461/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.6.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.CognitiveServices.Speech/1.44.0": {
      "sha512": "pUGHPjxsv72SYw2Fh0rQV8NehZcDqzlUMLZ1keOSWaX8Yqs6QcANIu+xopdRnI2V8rY0x+8GJ8Ern/i4+D6Hdw==",
      "type": "package",
      "path": "microsoft.cognitiveservices.speech/1.44.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "build/Microsoft.CognitiveServices.Speech.props",
        "build/REDIST.txt",
        "build/monoandroid/Microsoft.CognitiveServices.Speech.targets",
        "build/native/ARM/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/ARM64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/Microsoft.CognitiveServices.Speech.targets",
        "build/native/Win32/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/include/c_api/CMakeLists.txt",
        "build/native/include/c_api/azac_api_c_common.h",
        "build/native/include/c_api/azac_api_c_diagnostics.h",
        "build/native/include/c_api/azac_api_c_error.h",
        "build/native/include/c_api/azac_api_c_pal.h",
        "build/native/include/c_api/azac_debug.h",
        "build/native/include/c_api/azac_error.h",
        "build/native/include/c_api/speechapi_c.h",
        "build/native/include/c_api/speechapi_c_audio_config.h",
        "build/native/include/c_api/speechapi_c_audio_processing_options.h",
        "build/native/include/c_api/speechapi_c_audio_stream.h",
        "build/native/include/c_api/speechapi_c_audio_stream_format.h",
        "build/native/include/c_api/speechapi_c_auto_detect_source_lang_config.h",
        "build/native/include/c_api/speechapi_c_common.h",
        "build/native/include/c_api/speechapi_c_connection.h",
        "build/native/include/c_api/speechapi_c_conversation.h",
        "build/native/include/c_api/speechapi_c_conversation_transcription_result.h",
        "build/native/include/c_api/speechapi_c_conversation_translator.h",
        "build/native/include/c_api/speechapi_c_diagnostics.h",
        "build/native/include/c_api/speechapi_c_dialog_service_config.h",
        "build/native/include/c_api/speechapi_c_dialog_service_connector.h",
        "build/native/include/c_api/speechapi_c_embedded_speech_config.h",
        "build/native/include/c_api/speechapi_c_error.h",
        "build/native/include/c_api/speechapi_c_ext_audiocompression.h",
        "build/native/include/c_api/speechapi_c_factory.h",
        "build/native/include/c_api/speechapi_c_grammar.h",
        "build/native/include/c_api/speechapi_c_hybrid_speech_config.h",
        "build/native/include/c_api/speechapi_c_intent_recognizer.h",
        "build/native/include/c_api/speechapi_c_intent_result.h",
        "build/native/include/c_api/speechapi_c_intent_trigger.h",
        "build/native/include/c_api/speechapi_c_json.h",
        "build/native/include/c_api/speechapi_c_keyword_recognition_model.h",
        "build/native/include/c_api/speechapi_c_language_understanding_model.h",
        "build/native/include/c_api/speechapi_c_meeting.h",
        "build/native/include/c_api/speechapi_c_meeting_transcription_result.h",
        "build/native/include/c_api/speechapi_c_operations.h",
        "build/native/include/c_api/speechapi_c_participant.h",
        "build/native/include/c_api/speechapi_c_pattern_matching_model.h",
        "build/native/include/c_api/speechapi_c_pronunciation_assessment_config.h",
        "build/native/include/c_api/speechapi_c_property_bag.h",
        "build/native/include/c_api/speechapi_c_recognizer.h",
        "build/native/include/c_api/speechapi_c_result.h",
        "build/native/include/c_api/speechapi_c_session.h",
        "build/native/include/c_api/speechapi_c_source_lang_config.h",
        "build/native/include/c_api/speechapi_c_speaker_recognition.h",
        "build/native/include/c_api/speechapi_c_speech_config.h",
        "build/native/include/c_api/speechapi_c_speech_recognition_model.h",
        "build/native/include/c_api/speechapi_c_speech_translation_config.h",
        "build/native/include/c_api/speechapi_c_speech_translation_model.h",
        "build/native/include/c_api/speechapi_c_synthesis_request.h",
        "build/native/include/c_api/speechapi_c_synthesizer.h",
        "build/native/include/c_api/speechapi_c_translation_recognizer.h",
        "build/native/include/c_api/speechapi_c_translation_result.h",
        "build/native/include/c_api/speechapi_c_user.h",
        "build/native/include/c_api/spxdebug.h",
        "build/native/include/c_api/spxerror.h",
        "build/native/include/cxx_api/CMakeLists.txt",
        "build/native/include/cxx_api/azac_api_cxx_common.h",
        "build/native/include/cxx_api/speechapi_cxx.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_config.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_data_stream.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_processing_options.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_stream.h",
        "build/native/include/cxx_api/speechapi_cxx_audio_stream_format.h",
        "build/native/include/cxx_api/speechapi_cxx_auto_detect_source_lang_config.h",
        "build/native/include/cxx_api/speechapi_cxx_auto_detect_source_lang_result.h",
        "build/native/include/cxx_api/speechapi_cxx_class_language_model.h",
        "build/native/include/cxx_api/speechapi_cxx_common.h",
        "build/native/include/cxx_api/speechapi_cxx_connection.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_message.h",
        "build/native/include/cxx_api/speechapi_cxx_connection_message_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcriber.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcription_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_transcription_result.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_translator.h",
        "build/native/include/cxx_api/speechapi_cxx_conversation_translator_events.h",
        "build/native/include/cxx_api/speechapi_cxx_conversational_language_understanding_model.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_config.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_connector.h",
        "build/native/include/cxx_api/speechapi_cxx_dialog_service_connector_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_embedded_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_enums.h",
        "build/native/include/cxx_api/speechapi_cxx_event_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_eventsignal.h",
        "build/native/include/cxx_api/speechapi_cxx_eventsignalbase.h",
        "build/native/include/cxx_api/speechapi_cxx_file_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar_list.h",
        "build/native/include/cxx_api/speechapi_cxx_grammar_phrase.h",
        "build/native/include/cxx_api/speechapi_cxx_hybrid_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_intent_trigger.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_model.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_keyword_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_language_understanding_model.h",
        "build/native/include/cxx_api/speechapi_cxx_log_level.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcriber.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcription_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_meeting_transcription_result.h",
        "build/native/include/cxx_api/speechapi_cxx_memory_logger.h",
        "build/native/include/cxx_api/speechapi_cxx_participant.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_entity.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_intent.h",
        "build/native/include/cxx_api/speechapi_cxx_pattern_matching_model.h",
        "build/native/include/cxx_api/speechapi_cxx_phrase_list_grammar.h",
        "build/native/include/cxx_api/speechapi_cxx_pronunciation_assessment_config.h",
        "build/native/include/cxx_api/speechapi_cxx_pronunciation_assessment_result.h",
        "build/native/include/cxx_api/speechapi_cxx_properties.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_async_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_base_async_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_session.h",
        "build/native/include/cxx_api/speechapi_cxx_session_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_smart_handle.h",
        "build/native/include/cxx_api/speechapi_cxx_source_lang_config.h",
        "build/native/include/cxx_api/speechapi_cxx_source_language_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_identification_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speaker_verification_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_config.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_model.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognition_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_bookmark_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_request.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_result.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_viseme_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesis_word_boundary_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_synthesizer.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_translation_config.h",
        "build/native/include/cxx_api/speechapi_cxx_speech_translation_model.h",
        "build/native/include/cxx_api/speechapi_cxx_string_helpers.h",
        "build/native/include/cxx_api/speechapi_cxx_synthesis_voices_result.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_eventargs.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_recognizer.h",
        "build/native/include/cxx_api/speechapi_cxx_translation_result.h",
        "build/native/include/cxx_api/speechapi_cxx_user.h",
        "build/native/include/cxx_api/speechapi_cxx_utils.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_info.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_client.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_enrollment_result.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_phrase_result.h",
        "build/native/include/cxx_api/speechapi_cxx_voice_profile_result.h",
        "build/native/uap/ARM/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/ARM64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/Win32/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/uap/x64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/native/x64/Release/Microsoft.CognitiveServices.Speech.core.lib",
        "build/net462/Microsoft.CognitiveServices.Speech.targets",
        "build/net8.0-android/Microsoft.CognitiveServices.Speech.targets",
        "build/net8.0-ios/Microsoft.CognitiveServices.Speech.targets",
        "lib/net462/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net462/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-android/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-android/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-ios/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-ios/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/net8.0-maccatalyst/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/net8.0-maccatalyst/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "lib/uap10.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "lib/uap10.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "microsoft.cognitiveservices.speech.1.44.0.nupkg.sha512",
        "microsoft.cognitiveservices.speech.nuspec",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/android-x86/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/ios-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/iossimulator-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/iossimulator-x64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-arm/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-arm/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-arm/native/libpal_azure_c_shared.so",
        "runtimes/linux-arm/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-arm64/native/libpal_azure_c_shared.so",
        "runtimes/linux-arm64/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/linux-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.core.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.audio.sys.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.codec.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.so",
        "runtimes/linux-x64/native/libMicrosoft.CognitiveServices.Speech.extension.lu.so",
        "runtimes/linux-x64/native/libpal_azure_c_shared.so",
        "runtimes/linux-x64/native/libpal_azure_c_shared_openssl3.so",
        "runtimes/maccatalyst-arm64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/maccatalyst-x64/native/libMicrosoft.CognitiveServices.Speech.core.a",
        "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/osx-arm64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.core.dylib",
        "runtimes/osx-arm64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib",
        "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.dll",
        "runtimes/osx-x64/lib/netstandard2.0/Microsoft.CognitiveServices.Speech.csharp.xml",
        "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.core.dylib",
        "runtimes/osx-x64/native/libMicrosoft.CognitiveServices.Speech.extension.kws.ort.dylib",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-arm64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-arm64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.codec.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x64/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.codec.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x86/native/Microsoft.CognitiveServices.Speech.extension.lu.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.core.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.audio.sys.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.kws.ort.dll",
        "runtimes/win-x86/nativeassets/uap/Microsoft.CognitiveServices.Speech.extension.lu.dll"
      ]
    },
    "Microsoft.Extensions.Configuration/9.0.6": {
      "sha512": "VWB5jdkxHsRiuoniTqwOL32R4OWyp5If/bAucLjRJczRVNcwb8iCXKLjn3Inv8fv+jHMVMnvQLg7xhSys+y5PA==",
      "type": "package",
      "path": "microsoft.extensions.configuration/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
        "microsoft.extensions.configuration.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.6": {
      "sha512": "3GgMIi2jP8g1fBW93Z9b9Unamc0SIsgyhiCmC91gq4loTixK9vQMuxxUsfJ1kRGwn+/FqLKwOHqmn0oYWn3Fvw==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Binder/9.0.6": {
      "sha512": "Opl/7SIrwDy9WjHn/vU2thQ8CUtrIWHLr+89I7/0VYNEJQvpL24zvqYrh83cH38RzNKHji0WGVkCVP6HJChVVw==",
      "type": "package",
      "path": "microsoft.extensions.configuration.binder/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.dll",
        "analyzers/dotnet/cs/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
        "microsoft.extensions.configuration.binder.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.binder.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.CommandLine/9.0.6": {
      "sha512": "DC5I4Y1nK35jY4piDqQCzWjDXzT6ECMctBAxgAJoc6pn0k6uyxcDeOuVDRooFui/N65ptn9xT5mk9eO4mSTj/g==",
      "type": "package",
      "path": "microsoft.extensions.configuration.commandline/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.CommandLine.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.CommandLine.targets",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "microsoft.extensions.configuration.commandline.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.commandline.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/9.0.6": {
      "sha512": "RGYG2JBak9lf2rIPiZUVmWjUqoxaHPy3XPhPsJyIQ8QqK47rKvJz7jxVYefTnYdM5LTEiGFBdC7v3+SiosvmkQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.environmentvariables/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "microsoft.extensions.configuration.environmentvariables.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.environmentvariables.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.FileExtensions/9.0.6": {
      "sha512": "pCEueasI5JhJ24KYzMFxtG40zyLnWpcQYawpARh9FNq9XbWozuWgexmdkPa8p8YoVNlpi3ecKfcjfoRMkKAufw==",
      "type": "package",
      "path": "microsoft.extensions.configuration.fileextensions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "microsoft.extensions.configuration.fileextensions.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.fileextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Json/9.0.6": {
      "sha512": "N0dgOYQ9tDzJouL9Tyx2dgMCcHV2pBaY8yVtorbDqYYwiDRS2zd1TbhTA2FMHqXF3SMjBoO+gONZcDoA79gdSA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.json/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Json.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Json.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.xml",
        "microsoft.extensions.configuration.json.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.UserSecrets/9.0.6": {
      "sha512": "0ZZMzdvNwIS0f09S0IcaEbKFm+Xc41vRROsA/soeKEpzRISTDdiVwGlzdldbXEsuPjNVvNHyvIP8YW2hfIig0w==",
      "type": "package",
      "path": "microsoft.extensions.configuration.usersecrets/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net8.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "microsoft.extensions.configuration.usersecrets.9.0.6.nupkg.sha512",
        "microsoft.extensions.configuration.usersecrets.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/9.0.6": {
      "sha512": "vS65HMo5RS10DD543fknsyVDxihMcVxVn3/hNaILgBxWYnOLxWIeCIO9X0QFuCvPRNjClvXe9Aj8KaQNx7vFkQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.9.0.6.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.6": {
      "sha512": "0Zn6nR/6g+90MxskZyOOMPQvnPnrrGu6bytPwkV+azDcTtCSuQ1+GJUrg8Klmnrjk1i6zMpw2lXijl+tw7Q3kA==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics/9.0.6": {
      "sha512": "mIqCzZseDK9SqTRy4LxtjLwjlUu6aH5UdA6j0vgVER14yki9oRqLF+SmBiF6OlwsBSeL6dMQ8dmq02JMeE2puQ==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.xml",
        "microsoft.extensions.diagnostics.9.0.6.nupkg.sha512",
        "microsoft.extensions.diagnostics.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/9.0.6": {
      "sha512": "GIoXX7VDcTEsNM6yvffTBaOwnPQELGI5dzExR7L2O7AUkDsHBYIZawUbuwfq3cYzz8dIAAJotQYJMzH7qy27Ng==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "microsoft.extensions.diagnostics.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.diagnostics.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Abstractions/9.0.6": {
      "sha512": "q9FPkSGVA9ipI255p3PBAvWNXas5Tzjyp/DwYSwT+46mIFw9fWZahsF6vHpoxLt5/vtANotH2sAm7HunuFIx9g==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "microsoft.extensions.fileproviders.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.fileproviders.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Physical/9.0.6": {
      "sha512": "l+dFA0NRl90vSIiJNy5d7V0kpTEOWHTqbgoWYzlTwF5uiM5sWJ953haaELKE05jkyJdnemVTnqjrlgo4wo7oyg==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.physical/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Physical.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Physical.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net9.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "microsoft.extensions.fileproviders.physical.9.0.6.nupkg.sha512",
        "microsoft.extensions.fileproviders.physical.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileSystemGlobbing/9.0.6": {
      "sha512": "1HJCAbwukNEoYbHgHbKHmenU0V/0huw8+i7Qtf5rLUG1E+3kEwRJQxpwD3wbTEagIgPSQisNgJTvmUX9yYVc6g==",
      "type": "package",
      "path": "microsoft.extensions.filesystemglobbing/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileSystemGlobbing.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileSystemGlobbing.targets",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net9.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "microsoft.extensions.filesystemglobbing.9.0.6.nupkg.sha512",
        "microsoft.extensions.filesystemglobbing.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting/9.0.6": {
      "sha512": "Iu1UyXUnjMhoOwThKM0kCyjgWqqQnuujsbPMnF44ITUbmETT7RAVlozNgev2L/damwNoPZKpmwArRKBy2IOAZg==",
      "type": "package",
      "path": "microsoft.extensions.hosting/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.targets",
        "lib/net462/Microsoft.Extensions.Hosting.dll",
        "lib/net462/Microsoft.Extensions.Hosting.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.xml",
        "lib/net9.0/Microsoft.Extensions.Hosting.dll",
        "lib/net9.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.xml",
        "microsoft.extensions.hosting.9.0.6.nupkg.sha512",
        "microsoft.extensions.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting.Abstractions/9.0.6": {
      "sha512": "G9T95JbcG/wQpeVIzg0IMwxI+uTywDmbxWUWN2P0mdna35rmuTqgTrZ4SU5rcfUT3EJfbI9N4K8UyCAAc6QK8Q==",
      "type": "package",
      "path": "microsoft.extensions.hosting.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.xml",
        "microsoft.extensions.hosting.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.hosting.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/9.0.6": {
      "sha512": "XBzjitTFaQhF8EbJ645vblZezV1p52ePTxKHoVkRidHF11Xkjxg94qr0Rvp2qyxK2vBJ4OIZ41NB15YUyxTGMQ==",
      "type": "package",
      "path": "microsoft.extensions.logging/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.6": {
      "sha512": "LFnyBNK7WtFmKdnHu3v0HOYQ8BcjYuy0jdC9pgCJ/rbLKoJEG9/dBzSKMEeeWDbDeoWS0TIxOC8a9CM5ufca3A==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Configuration/9.0.6": {
      "sha512": "lCgpxE5r6v43SB40/yUVnSWZUUqUZF5iUWizhkx4gqvq0L0rMw5g8adWKGO7sfIaSbCiU0et85sDQWswhLcceg==",
      "type": "package",
      "path": "microsoft.extensions.logging.configuration/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.xml",
        "microsoft.extensions.logging.configuration.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Console/9.0.6": {
      "sha512": "L1O0M3MrqGlkrPYMLzcCphQpCG0lSHfTSPrm1otALNBzTPiO8rxxkjhBIIa2onKv92UP30Y4QaiigVMTx8YcxQ==",
      "type": "package",
      "path": "microsoft.extensions.logging.console/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Console.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Console.targets",
        "lib/net462/Microsoft.Extensions.Logging.Console.dll",
        "lib/net462/Microsoft.Extensions.Logging.Console.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.xml",
        "microsoft.extensions.logging.console.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.console.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Debug/9.0.6": {
      "sha512": "u21euQdOjaEwmlnnB1Zd4XGqOmWI8FkoGeUleV7n4BZ8HPQC/jrYzX/B5Cz3uI/FXjd//W88clPfkGIbSif7Jw==",
      "type": "package",
      "path": "microsoft.extensions.logging.debug/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Debug.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Debug.targets",
        "lib/net462/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net462/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.xml",
        "microsoft.extensions.logging.debug.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.debug.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventLog/9.0.6": {
      "sha512": "IyyGy7xNJAjdlFYXc7SZ7kS3CWd3Ma4hing9QGtzXi+LXm8RWCEXdKA1cPx5AeFmdg3rVG+ADGIn44K14O+vFA==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventlog/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventLog.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.xml",
        "microsoft.extensions.logging.eventlog.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventSource/9.0.6": {
      "sha512": "ayCRr/8ON3aINH81ak9l3vLAF/0pV/xrfChCbIlT2YnHAd4TYBWLcWhzbJWwPFV4XmJFrx/z8oq+gZzIc/74OA==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventsource/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventSource.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.xml",
        "microsoft.extensions.logging.eventsource.9.0.6.nupkg.sha512",
        "microsoft.extensions.logging.eventsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options/9.0.6": {
      "sha512": "wUPhNM1zsI58Dy10xRdF2+pnsisiUuETg5ZBncyAEEUm/CQ9Q1vmivyUWH8RDbAlqyixf2dJNQ2XZb7HsKUEQw==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.6.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/9.0.6": {
      "sha512": "2lnp8nrvfzyp+5zvfeULm/hkZsDsKkl2ziBt5T8EZKoON5q+XRpRLoWcSPo8mP7GNZXpxKMBVjFNIZNbBIcnRw==",
      "type": "package",
      "path": "microsoft.extensions.options.configurationextensions/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net9.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "microsoft.extensions.options.configurationextensions.9.0.6.nupkg.sha512",
        "microsoft.extensions.options.configurationextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.6": {
      "sha512": "BHniU24QV67qp1pJknqYSofAPYGmijGI8D+ci9yfw33iuFdyOeB9lWTg78ThyYLyQwZw3s0vZ36VMb0MqbUuLw==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.6.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Newtonsoft.Json/13.0.3": {
      "sha512": "HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "type": "package",
      "path": "newtonsoft.json/13.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/net6.0/Newtonsoft.Json.dll",
        "lib/net6.0/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.3.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "Serilog/4.2.0": {
      "sha512": "gmoWVOvKgbME8TYR+gwMf7osROiWAURterc6Rt2dQyX7wtjZYpqFiA/pY6ztjGQKKV62GGCyOcmtP1UKMHgSmA==",
      "type": "package",
      "path": "serilog/4.2.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.dll",
        "lib/net462/Serilog.xml",
        "lib/net471/Serilog.dll",
        "lib/net471/Serilog.xml",
        "lib/net6.0/Serilog.dll",
        "lib/net6.0/Serilog.xml",
        "lib/net8.0/Serilog.dll",
        "lib/net8.0/Serilog.xml",
        "lib/net9.0/Serilog.dll",
        "lib/net9.0/Serilog.xml",
        "lib/netstandard2.0/Serilog.dll",
        "lib/netstandard2.0/Serilog.xml",
        "serilog.4.2.0.nupkg.sha512",
        "serilog.nuspec"
      ]
    },
    "Serilog.Extensions.Hosting/9.0.0": {
      "sha512": "u2TRxuxbjvTAldQn7uaAwePkWxTHIqlgjelekBtilAGL5sYyF3+65NWctN4UrwwGLsDC7c3Vz3HnOlu+PcoxXg==",
      "type": "package",
      "path": "serilog.extensions.hosting/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "icon.png",
        "lib/net462/Serilog.Extensions.Hosting.dll",
        "lib/net462/Serilog.Extensions.Hosting.xml",
        "lib/net8.0/Serilog.Extensions.Hosting.dll",
        "lib/net8.0/Serilog.Extensions.Hosting.xml",
        "lib/net9.0/Serilog.Extensions.Hosting.dll",
        "lib/net9.0/Serilog.Extensions.Hosting.xml",
        "lib/netstandard2.0/Serilog.Extensions.Hosting.dll",
        "lib/netstandard2.0/Serilog.Extensions.Hosting.xml",
        "lib/netstandard2.1/Serilog.Extensions.Hosting.dll",
        "lib/netstandard2.1/Serilog.Extensions.Hosting.xml",
        "serilog.extensions.hosting.9.0.0.nupkg.sha512",
        "serilog.extensions.hosting.nuspec"
      ]
    },
    "Serilog.Extensions.Logging/9.0.0": {
      "sha512": "NwSSYqPJeKNzl5AuXVHpGbr6PkZJFlNa14CdIebVjK3k/76kYj/mz5kiTRNVSsSaxM8kAIa1kpy/qyT9E4npRQ==",
      "type": "package",
      "path": "serilog.extensions.logging/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Serilog.Extensions.Logging.dll",
        "lib/net462/Serilog.Extensions.Logging.xml",
        "lib/net8.0/Serilog.Extensions.Logging.dll",
        "lib/net8.0/Serilog.Extensions.Logging.xml",
        "lib/net9.0/Serilog.Extensions.Logging.dll",
        "lib/net9.0/Serilog.Extensions.Logging.xml",
        "lib/netstandard2.0/Serilog.Extensions.Logging.dll",
        "lib/netstandard2.0/Serilog.Extensions.Logging.xml",
        "lib/netstandard2.1/Serilog.Extensions.Logging.dll",
        "lib/netstandard2.1/Serilog.Extensions.Logging.xml",
        "serilog-extension-nuget.png",
        "serilog.extensions.logging.9.0.0.nupkg.sha512",
        "serilog.extensions.logging.nuspec"
      ]
    },
    "Serilog.Sinks.File/7.0.0": {
      "sha512": "fKL7mXv7qaiNBUC71ssvn/dU0k9t0o45+qm2XgKAlSt19xF+ijjxyA3R6HmCgfKEKwfcfkwWjayuQtRueZFkYw==",
      "type": "package",
      "path": "serilog.sinks.file/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Serilog.Sinks.File.dll",
        "lib/net462/Serilog.Sinks.File.xml",
        "lib/net471/Serilog.Sinks.File.dll",
        "lib/net471/Serilog.Sinks.File.xml",
        "lib/net6.0/Serilog.Sinks.File.dll",
        "lib/net6.0/Serilog.Sinks.File.xml",
        "lib/net8.0/Serilog.Sinks.File.dll",
        "lib/net8.0/Serilog.Sinks.File.xml",
        "lib/net9.0/Serilog.Sinks.File.dll",
        "lib/net9.0/Serilog.Sinks.File.xml",
        "lib/netstandard2.0/Serilog.Sinks.File.dll",
        "lib/netstandard2.0/Serilog.Sinks.File.xml",
        "serilog-sink-nuget.png",
        "serilog.sinks.file.7.0.0.nupkg.sha512",
        "serilog.sinks.file.nuspec"
      ]
    },
    "SkiaSharp/3.119.0": {
      "sha512": "gR9yVoOta2Mc1Rxt15LD65AckfHMfwjIs/3kkD59C9bT2nYYISsE6uz3t4aMPNHA6CgsIL0Ssn+jE5OVilZ1yw==",
      "type": "package",
      "path": "skiasharp/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "icon.png",
        "interactive-extensions/dotnet/SkiaSharp.DotNet.Interactive.dll",
        "lib/net462/SkiaSharp.dll",
        "lib/net462/SkiaSharp.pdb",
        "lib/net6.0/SkiaSharp.dll",
        "lib/net6.0/SkiaSharp.pdb",
        "lib/net8.0-android34.0/SkiaSharp.dll",
        "lib/net8.0-android34.0/SkiaSharp.pdb",
        "lib/net8.0-android34.0/SkiaSharp.xml",
        "lib/net8.0-ios17.0/SkiaSharp.dll",
        "lib/net8.0-ios17.0/SkiaSharp.pdb",
        "lib/net8.0-maccatalyst17.0/SkiaSharp.dll",
        "lib/net8.0-maccatalyst17.0/SkiaSharp.pdb",
        "lib/net8.0-macos14.0/SkiaSharp.dll",
        "lib/net8.0-macos14.0/SkiaSharp.pdb",
        "lib/net8.0-tizen7.0/SkiaSharp.dll",
        "lib/net8.0-tizen7.0/SkiaSharp.pdb",
        "lib/net8.0-tvos17.0/SkiaSharp.dll",
        "lib/net8.0-tvos17.0/SkiaSharp.pdb",
        "lib/net8.0-windows10.0.19041/SkiaSharp.dll",
        "lib/net8.0-windows10.0.19041/SkiaSharp.pdb",
        "lib/net8.0/SkiaSharp.dll",
        "lib/net8.0/SkiaSharp.pdb",
        "lib/netstandard2.0/SkiaSharp.dll",
        "lib/netstandard2.0/SkiaSharp.pdb",
        "lib/netstandard2.1/SkiaSharp.dll",
        "lib/netstandard2.1/SkiaSharp.pdb",
        "ref/net462/SkiaSharp.dll",
        "ref/net6.0/SkiaSharp.dll",
        "ref/net8.0-android34.0/SkiaSharp.dll",
        "ref/net8.0-ios17.0/SkiaSharp.dll",
        "ref/net8.0-maccatalyst17.0/SkiaSharp.dll",
        "ref/net8.0-macos14.0/SkiaSharp.dll",
        "ref/net8.0-tizen7.0/SkiaSharp.dll",
        "ref/net8.0-tvos17.0/SkiaSharp.dll",
        "ref/net8.0-windows10.0.19041/SkiaSharp.dll",
        "ref/net8.0/SkiaSharp.dll",
        "ref/netstandard2.0/SkiaSharp.dll",
        "ref/netstandard2.1/SkiaSharp.dll",
        "skiasharp.3.119.0.nupkg.sha512",
        "skiasharp.nuspec"
      ]
    },
    "SkiaSharp.NativeAssets.macOS/3.119.0": {
      "sha512": "YE1vNn0Nyw2PWtv7hw1PYkKJO0itFiQp9vSqGppZUKzQJqwp28a2jgdCMPfYtOiR8KCnDgZqQoynqJRRaE2ZVg==",
      "type": "package",
      "path": "skiasharp.nativeassets.macos/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "THIRD-PARTY-NOTICES.txt",
        "build/net462/SkiaSharp.NativeAssets.macOS.targets",
        "buildTransitive/net462/SkiaSharp.NativeAssets.macOS.targets",
        "buildTransitive/net8.0-macos14.0/SkiaSharp.NativeAssets.macOS.targets",
        "icon.png",
        "lib/net462/_._",
        "lib/net6.0/_._",
        "lib/net8.0-macos14.0/_._",
        "lib/net8.0/_._",
        "lib/netstandard2.0/_._",
        "lib/netstandard2.1/_._",
        "runtimes/osx/native/libSkiaSharp.dylib",
        "skiasharp.nativeassets.macos.3.119.0.nupkg.sha512",
        "skiasharp.nativeassets.macos.nuspec"
      ]
    },
    "SkiaSharp.NativeAssets.Win32/3.119.0": {
      "sha512": "IwC9yx36lOdXVT2DjgmWHl1qkVspfj8ctd4+li8CNnvqdfaTolXCOh6TLznURcPAvzatx9K/tLOB7zT6T8EA9w==",
      "type": "package",
      "path": "skiasharp.nativeassets.win32/3.119.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt",
        "README.md",
        "THIRD-PARTY-NOTICES.txt",
        "build/net462/SkiaSharp.NativeAssets.Win32.targets",
        "buildTransitive/net462/SkiaSharp.NativeAssets.Win32.targets",
        "icon.png",
        "lib/net462/_._",
        "lib/net6.0-windows10.0.19041/_._",
        "lib/net6.0/_._",
        "lib/net8.0-windows10.0.19041/_._",
        "lib/net8.0/_._",
        "lib/netstandard2.0/_._",
        "lib/netstandard2.1/_._",
        "runtimes/win-arm64/native/libSkiaSharp.dll",
        "runtimes/win-x64/native/libSkiaSharp.dll",
        "runtimes/win-x86/native/libSkiaSharp.dll",
        "skiasharp.nativeassets.win32.3.119.0.nupkg.sha512",
        "skiasharp.nativeassets.win32.nuspec"
      ]
    },
    "System.ClientModel/1.1.0": {
      "sha512": "UocOlCkxLZrG2CKMAAImPcldJTxeesHnHGHwhJ0pNlZEvEXcWKuQvVOER2/NiOkJGRJk978SNdw3j6/7O9H1lg==",
      "type": "package",
      "path": "system.clientmodel/1.1.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "CHANGELOG.md",
        "DotNetPackageIcon.png",
        "README.md",
        "lib/net6.0/System.ClientModel.dll",
        "lib/net6.0/System.ClientModel.xml",
        "lib/netstandard2.0/System.ClientModel.dll",
        "lib/netstandard2.0/System.ClientModel.xml",
        "system.clientmodel.1.1.0.nupkg.sha512",
        "system.clientmodel.nuspec"
      ]
    },
    "System.CodeDom/7.0.0": {
      "sha512": "GLltyqEsE5/3IE+zYRP5sNa1l44qKl9v+bfdMcwg+M9qnQf47wK3H0SUR/T+3N4JEQXF3vV4CSuuo0rsg+nq2A==",
      "type": "package",
      "path": "system.codedom/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.CodeDom.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "lib/net462/System.CodeDom.dll",
        "lib/net462/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/net7.0/System.CodeDom.dll",
        "lib/net7.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.7.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/6.0.1": {
      "sha512": "KiLYDu2k2J82Q9BJpWiuQqCkFjRBWVq4jDzKKWawVi9KWzyD0XG3cmfX0vqTQlL14Wi9EufJrbL0+KCLTbqWiQ==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/6.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Diagnostics.DiagnosticSource.dll",
        "lib/net461/System.Diagnostics.DiagnosticSource.xml",
        "lib/net5.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net5.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net6.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net6.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.6.0.1.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.EventLog/9.0.6": {
      "sha512": "lum+Dv+8S4gqN5H1C576UcQe0M2buoRjEUVs4TctXRSWjBH3ay3w2KyQrOo1yPdRs1I+xK69STz+4mjIisFI5w==",
      "type": "package",
      "path": "system.diagnostics.eventlog/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.EventLog.targets",
        "lib/net462/System.Diagnostics.EventLog.dll",
        "lib/net462/System.Diagnostics.EventLog.xml",
        "lib/net8.0/System.Diagnostics.EventLog.dll",
        "lib/net8.0/System.Diagnostics.EventLog.xml",
        "lib/net9.0/System.Diagnostics.EventLog.dll",
        "lib/net9.0/System.Diagnostics.EventLog.xml",
        "lib/netstandard2.0/System.Diagnostics.EventLog.dll",
        "lib/netstandard2.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net9.0/System.Diagnostics.EventLog.xml",
        "system.diagnostics.eventlog.9.0.6.nupkg.sha512",
        "system.diagnostics.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Management/7.0.2": {
      "sha512": "/qEUN91mP/MUQmJnM5y5BdT7ZoPuVrtxnFlbJ8a3kBJGhe2wCzBfnPFtK2wTtEEcf3DMGR9J00GZZfg6HRI6yA==",
      "type": "package",
      "path": "system.management/7.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Management.targets",
        "lib/net462/_._",
        "lib/net6.0/System.Management.dll",
        "lib/net6.0/System.Management.xml",
        "lib/net7.0/System.Management.dll",
        "lib/net7.0/System.Management.xml",
        "lib/netstandard2.0/System.Management.dll",
        "lib/netstandard2.0/System.Management.xml",
        "runtimes/win/lib/net6.0/System.Management.dll",
        "runtimes/win/lib/net6.0/System.Management.xml",
        "runtimes/win/lib/net7.0/System.Management.dll",
        "runtimes/win/lib/net7.0/System.Management.xml",
        "system.management.7.0.2.nupkg.sha512",
        "system.management.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Memory.Data/6.0.0": {
      "sha512": "ntFHArH3I4Lpjf5m4DCXQHJuGwWPNVJPaAvM95Jy/u+2Yzt2ryiyIN04LAogkjP9DeRcEOiviAjQotfmPq/FrQ==",
      "type": "package",
      "path": "system.memory.data/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Memory.Data.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Memory.Data.dll",
        "lib/net461/System.Memory.Data.xml",
        "lib/net6.0/System.Memory.Data.dll",
        "lib/net6.0/System.Memory.Data.xml",
        "lib/netstandard2.0/System.Memory.Data.dll",
        "lib/netstandard2.0/System.Memory.Data.xml",
        "system.memory.data.6.0.0.nupkg.sha512",
        "system.memory.data.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Numerics.Vectors/4.5.0": {
      "sha512": "QQTlPTl06J/iiDbJCiepZ4H//BVraReU4O4EoRw1U02H5TLUIT7xn3GnDp9AXPSlJUDyFs4uWjWafNX6WrAojQ==",
      "type": "package",
      "path": "system.numerics.vectors/4.5.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net46/System.Numerics.Vectors.dll",
        "lib/net46/System.Numerics.Vectors.xml",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard1.0/System.Numerics.Vectors.dll",
        "lib/netstandard1.0/System.Numerics.Vectors.xml",
        "lib/netstandard2.0/System.Numerics.Vectors.dll",
        "lib/netstandard2.0/System.Numerics.Vectors.xml",
        "lib/portable-net45+win8+wp8+wpa81/System.Numerics.Vectors.dll",
        "lib/portable-net45+win8+wp8+wpa81/System.Numerics.Vectors.xml",
        "lib/uap10.0.16299/_._",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "ref/MonoAndroid10/_._",
        "ref/MonoTouch10/_._",
        "ref/net45/System.Numerics.Vectors.dll",
        "ref/net45/System.Numerics.Vectors.xml",
        "ref/net46/System.Numerics.Vectors.dll",
        "ref/net46/System.Numerics.Vectors.xml",
        "ref/netcoreapp2.0/_._",
        "ref/netstandard1.0/System.Numerics.Vectors.dll",
        "ref/netstandard1.0/System.Numerics.Vectors.xml",
        "ref/netstandard2.0/System.Numerics.Vectors.dll",
        "ref/netstandard2.0/System.Numerics.Vectors.xml",
        "ref/uap10.0.16299/_._",
        "ref/xamarinios10/_._",
        "ref/xamarinmac20/_._",
        "ref/xamarintvos10/_._",
        "ref/xamarinwatchos10/_._",
        "system.numerics.vectors.4.5.0.nupkg.sha512",
        "system.numerics.vectors.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "sha512": "/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "type": "package",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
        "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512",
        "system.runtime.compilerservices.unsafe.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Speech/9.0.6": {
      "sha512": "Cyc9GLB8OpPNFFSlvnaLzkLSyGCuIENllB47w0WwP+SzVfDWvGdTEK1iIaMQEoRjpdl4sRYrchCDYx6GqNlu/w==",
      "type": "package",
      "path": "system.speech/9.0.6",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Speech.targets",
        "lib/net462/_._",
        "lib/net8.0/System.Speech.dll",
        "lib/net8.0/System.Speech.xml",
        "lib/net9.0/System.Speech.dll",
        "lib/net9.0/System.Speech.xml",
        "lib/netstandard2.0/System.Speech.dll",
        "lib/netstandard2.0/System.Speech.xml",
        "runtimes/win/lib/net8.0/System.Speech.dll",
        "runtimes/win/lib/net8.0/System.Speech.xml",
        "runtimes/win/lib/net9.0/System.Speech.dll",
        "runtimes/win/lib/net9.0/System.Speech.xml",
        "system.speech.9.0.6.nupkg.sha512",
        "system.speech.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/6.0.0": {
      "sha512": "Vg8eB5Tawm1IFqj4TVK1czJX89rhFxJo9ELqc/Eiq0eXy13RK00eubyU6TJE6y+GQXjyV5gSfiewDUZjQgSE0w==",
      "type": "package",
      "path": "system.text.encodings.web/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Text.Encodings.Web.dll",
        "lib/net461/System.Text.Encodings.Web.xml",
        "lib/net6.0/System.Text.Encodings.Web.dll",
        "lib/net6.0/System.Text.Encodings.Web.xml",
        "lib/netcoreapp3.1/System.Text.Encodings.Web.dll",
        "lib/netcoreapp3.1/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net6.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.6.0.0.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/6.0.10": {
      "sha512": "NSB0kDipxn2ychp88NXWfFRFlmi1bst/xynOutbnpEfRCT9JZkZ7KOmF/I/hNKo2dILiMGnqblm+j1sggdLB9g==",
      "type": "package",
      "path": "system.text.json/6.0.10",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp3.1/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net461/System.Text.Json.dll",
        "lib/net461/System.Text.Json.xml",
        "lib/net6.0/System.Text.Json.dll",
        "lib/net6.0/System.Text.Json.xml",
        "lib/netcoreapp3.1/System.Text.Json.dll",
        "lib/netcoreapp3.1/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.6.0.10.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "sha512": "zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "type": "package",
      "path": "system.threading.tasks.extensions/4.5.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net461/System.Threading.Tasks.Extensions.dll",
        "lib/net461/System.Threading.Tasks.Extensions.xml",
        "lib/netcoreapp2.1/_._",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.xml",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.xml",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.dll",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.xml",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "ref/MonoAndroid10/_._",
        "ref/MonoTouch10/_._",
        "ref/netcoreapp2.1/_._",
        "ref/xamarinios10/_._",
        "ref/xamarinmac20/_._",
        "ref/xamarintvos10/_._",
        "ref/xamarinwatchos10/_._",
        "system.threading.tasks.extensions.4.5.4.nupkg.sha512",
        "system.threading.tasks.extensions.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "RedditVideoStudio.Application/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Application/RedditVideoStudio.Application.csproj",
      "msbuildProject": "../RedditVideoStudio.Application/RedditVideoStudio.Application.csproj"
    },
    "RedditVideoStudio.Core/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj",
      "msbuildProject": "../RedditVideoStudio.Core/RedditVideoStudio.Core.csproj"
    },
    "RedditVideoStudio.Domain/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj",
      "msbuildProject": "../RedditVideoStudio.Domain/RedditVideoStudio.Domain.csproj"
    },
    "RedditVideoStudio.Infrastructure/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Infrastructure/RedditVideoStudio.Infrastructure.csproj",
      "msbuildProject": "../RedditVideoStudio.Infrastructure/RedditVideoStudio.Infrastructure.csproj"
    },
    "RedditVideoStudio.Shared/1.0.0": {
      "type": "project",
      "path": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj",
      "msbuildProject": "../RedditVideoStudio.Shared/RedditVideoStudio.Shared.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net9.0-windows7.0": [
      "CommunityToolkit.Mvvm >= 8.4.0",
      "MediatR >= 12.5.0",
      "Microsoft.Extensions.Hosting >= 9.0.6",
      "RedditVideoStudio.Application >= 1.0.0",
      "RedditVideoStudio.Core >= 1.0.0",
      "RedditVideoStudio.Infrastructure >= 1.0.0",
      "RedditVideoStudio.Shared >= 1.0.0",
      "Serilog.Extensions.Hosting >= 9.0.0",
      "Serilog.Sinks.File >= 7.0.0",
      "SkiaSharp >= 3.119.0",
      "SkiaSharp.NativeAssets.Win32 >= 3.119.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\Dean Kruger\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
      "projectName": "RedditVideoStudio.UI",
      "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
      "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net9.0-windows"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "projectReferences": {
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
            },
            "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
              "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net9.0-windows7.0": {
        "targetAlias": "net9.0-windows",
        "dependencies": {
          "CommunityToolkit.Mvvm": {
            "target": "Package",
            "version": "[8.4.0, )"
          },
          "MediatR": {
            "target": "Package",
            "version": "[12.5.0, )"
          },
          "Microsoft.Extensions.Hosting": {
            "target": "Package",
            "version": "[9.0.6, )"
          },
          "Serilog.Extensions.Hosting": {
            "target": "Package",
            "version": "[9.0.0, )"
          },
          "Serilog.Sinks.File": {
            "target": "Package",
            "version": "[7.0.0, )"
          },
          "SkiaSharp": {
            "target": "Package",
            "version": "[3.119.0, )"
          },
          "SkiaSharp.NativeAssets.Win32": {
            "target": "Package",
            "version": "[3.119.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          },
          "Microsoft.WindowsDesktop.App.WPF": {
            "privateAssets": "none"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_423y3der_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR.Extensions.Microsoft.DependencyInjection": {
              "target": "Package",
              "version": "[11.1.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_akfdv21n_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_dg44mbb5_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_dqlx4om1_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_egrkauqr_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_nyriuyef_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_p0tazqsj_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_pajoxvxf_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_qcjoviks_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_qowpr0m4_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_qrff4e3i_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_qtbgcakt_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_rmn2bqu0_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_tjmk0ktt_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_tu10hca5_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR.Extensions.Microsoft.DependencyInjection": {
              "target": "Package",
              "version": "[11.1.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_u0vvllsg_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_xks1au1a_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_yosnrzic_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\obj\RedditVideoStudio.UI_ztmcvqe4_wpftmp.csproj.nuget.dgspec.json">
<![CDATA[
{
  "format": 1,
  "restore": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {}
  },
  "projects": {
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "projectName": "RedditVideoStudio.Application",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "projectName": "RedditVideoStudio.Core",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.Auth": {
              "target": "Package",
              "version": "[1.70.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "projectName": "RedditVideoStudio.Domain",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "projectName": "RedditVideoStudio.Infrastructure",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Domain\\RedditVideoStudio.Domain.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "dependencies": {
            "Google.Apis.YouTube.v3": {
              "target": "Package",
              "version": "[1.69.0.3764, )"
            },
            "Google.Cloud.TextToSpeech.V1": {
              "target": "Package",
              "version": "[3.12.0, )"
            },
            "Microsoft.CognitiveServices.Speech": {
              "target": "Package",
              "version": "[1.44.0, )"
            },
            "Microsoft.Extensions.Logging.Abstractions": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Newtonsoft.Json": {
              "target": "Package",
              "version": "[13.0.3, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "System.Speech": {
              "target": "Package",
              "version": "[9.0.6, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "projectName": "RedditVideoStudio.Shared",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0": {
            "targetAlias": "net9.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0": {
          "targetAlias": "net9.0",
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "projectName": "RedditVideoStudio.UI",
        "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\RedditVideoStudio.UI.csproj",
        "packagesPath": "C:\\Users\\Dean Kruger\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.UI\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\Dean Kruger\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net9.0-windows"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net9.0-windows7.0": {
            "targetAlias": "net9.0-windows",
            "projectReferences": {
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Application\\RedditVideoStudio.Application.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Core\\RedditVideoStudio.Core.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Infrastructure\\RedditVideoStudio.Infrastructure.csproj"
              },
              "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj": {
                "projectPath": "C:\\Users\\Dean Kruger\\source\\repos\\RedditVideoStudio\\RedditVideoStudio.Shared\\RedditVideoStudio.Shared.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net9.0-windows7.0": {
          "targetAlias": "net9.0-windows",
          "dependencies": {
            "CommunityToolkit.Mvvm": {
              "target": "Package",
              "version": "[8.4.0, )"
            },
            "MediatR": {
              "target": "Package",
              "version": "[12.5.0, )"
            },
            "Microsoft.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.6, )"
            },
            "Serilog.Extensions.Hosting": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "Serilog.Sinks.File": {
              "target": "Package",
              "version": "[7.0.0, )"
            },
            "SkiaSharp": {
              "target": "Package",
              "version": "[3.119.0, )"
            },
            "SkiaSharp.NativeAssets.Win32": {
              "target": "Package",
              "version": "[3.119.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            },
            "Microsoft.WindowsDesktop.App.WPF": {
              "privateAssets": "none"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.301/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\ViewModels\Settings\DestinationsSettingsViewModel.cs">
<![CDATA[
using CommunityToolkit.Mvvm.ComponentModel;
using RedditVideoStudio.Core.Interfaces;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;

namespace RedditVideoStudio.UI.ViewModels.Settings
{
    /// <summary>
    /// The main ViewModel for the Destinations settings page.
    /// It manages a collection of all available video destination platforms.
    /// </summary>
    public partial class DestinationsSettingsViewModel : ObservableObject
    {
        /// <summary>
        /// A collection of view models, one for each available destination platform.
        /// This collection is what the UI will display as a list.
        /// </summary>
        public ObservableCollection<DestinationViewModel> Destinations { get; }

        public DestinationsSettingsViewModel(IEnumerable<IVideoDestination> destinations)
        {
            // The 'destinations' parameter is automatically populated by the Dependency Injection
            // container with all registered IVideoDestination services (like our YouTubeDestination).

            // We create a new DestinationViewModel for each service and add it to our public collection.
            var destinationViewModels = destinations.Select(d => new DestinationViewModel(d));
            Destinations = new ObservableCollection<DestinationViewModel>(destinationViewModels);
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\ViewModels\Settings\DestinationViewModel.cs">
<![CDATA[
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using RedditVideoStudio.Core.Interfaces;
using System.Threading.Tasks;

namespace RedditVideoStudio.UI.ViewModels.Settings
{
    /// <summary>
    /// Represents a single destination platform (e.g., YouTube) in the UI.
    /// This class acts as a wrapper around an IVideoDestination service,
    /// providing properties and commands for a View to bind to.
    /// </summary>
    public partial class DestinationViewModel : ObservableObject
    {
        private readonly IVideoDestination _destination;

        /// <summary>
        /// The display name of the destination platform.
        /// </summary>
        public string Name => _destination.Name;

        [ObservableProperty]
        [NotifyPropertyChangedFor(nameof(IsDisconnected))]
        private bool _isAuthenticated;

        /// <summary>
        /// A computed property that is the opposite of IsAuthenticated.
        /// Useful for binding the visibility of a "Connect" button.
        /// </summary>
        public bool IsDisconnected => !IsAuthenticated;

        [ObservableProperty]
        private bool _isBusy;

        public DestinationViewModel(IVideoDestination destination)
        {
            _destination = destination;
            // Initialize the authentication status from the service
            _isAuthenticated = _destination.IsAuthenticated;
        }

        [RelayCommand]
        private async Task Authenticate()
        {
            IsBusy = true;
            try
            {
                await _destination.AuthenticateAsync();
                IsAuthenticated = _destination.IsAuthenticated;
            }
            catch
            {
                // The service itself will log the error. We just need to handle the UI state.
                IsAuthenticated = false;
            }
            finally
            {
                IsBusy = false;
            }
        }

        [RelayCommand]
        private async Task SignOut()
        {
            IsBusy = true;
            await _destination.SignOutAsync();
            IsAuthenticated = _destination.IsAuthenticated;
            IsBusy = false;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\ViewModels\RedditPostViewModel.cs">
<![CDATA[
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace RedditVideoStudio.UI.ViewModels
{
    /// <summary>
    /// The ViewModel for a single Reddit post displayed in the main window.
    /// It wraps the RedditPostData domain model and implements INotifyPropertyChanged
    /// to support data binding in the UI. [cite: 1]
                /// </summary>
    public class RedditPostViewModel : INotifyPropertyChanged
    {
        private string? _id;
        public string? Id
        {
            get => _id;
            set { _id = value; OnPropertyChanged(); }
        }

        private string? _title;
        public string? Title
        {
            get => _title;
            set { _title = value; OnPropertyChanged(); }
        }

        private int _score;
        public int Score
        {
            get => _score;
            set { _score = value; OnPropertyChanged(); }
        }

        private string? _subreddit;
        public string? Subreddit
        {
            get => _subreddit;
            set { _subreddit = value; OnPropertyChanged(); }
        }

        private string? _url;
        public string? Url
        {
            get => _url;
            set { _url = value; OnPropertyChanged(); }
        }

        private string? _permalink;
        public string? Permalink
        {
            get => _permalink;
            set { _permalink = value; OnPropertyChanged(); }
        }

        private List<string> _comments = new();
        public List<string> Comments
        {
            get => _comments;
            set { _comments = value; OnPropertyChanged(); }
        }

        private DateTime? _scheduledPublishTimeUtc;
        /// <summary>
        /// The specific date and time this post's video should be published. [cite: 1]
        /// </summary>
        public DateTime? ScheduledPublishTimeUtc
        {
            get => _scheduledPublishTimeUtc;
            set
            {
                _scheduledPublishTimeUtc = value;
                OnPropertyChanged();
                OnPropertyChanged(nameof(ScheduledDate));
                OnPropertyChanged(nameof(ScheduledTime));
            }
        }

        /// <summary>
        /// A helper property to bind the DatePicker to just the Date part of the schedule. [cite: 1]
        /// </summary>
        public DateTime? ScheduledDate
        {
            get => ScheduledPublishTimeUtc?.Date;
            set
            {
                if (value.HasValue)
                {
                    var currentTime = ScheduledPublishTimeUtc?.TimeOfDay ?? DateTime.Now.TimeOfDay;
                    ScheduledPublishTimeUtc = value.Value.Date + currentTime;
                }
            }
        }

        /// <summary>
        /// A helper property to bind the TextBox to the Time part of the schedule. [cite: 1]
        /// </summary>
        public string ScheduledTime
        {
            get => ScheduledPublishTimeUtc?.ToString("HH:mm:ss") ?? string.Empty;
            set
            {
                if (TimeSpan.TryParse(value, out var timeSpan))
                {
                    var currentDate = ScheduledPublishTimeUtc?.Date ?? DateTime.Today;
                    ScheduledPublishTimeUtc = currentDate.Date + timeSpan;
                }
            }
        }

        // ADDED: Property to track the upload status for UI binding.
        private bool _isAlreadyUploaded;
        public bool IsAlreadyUploaded
        {
            get => _isAlreadyUploaded;
            set { _isAlreadyUploaded = value; OnPropertyChanged(); }
        }


        public event PropertyChangedEventHandler? PropertyChanged;

        protected virtual void OnPropertyChanged([CallerMemberName] string? propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\ViewModels\SettingsViewModel.cs">
<![CDATA[
using CommunityToolkit.Mvvm.ComponentModel;
using RedditVideoStudio.Shared.Configuration;
using RedditVideoStudio.UI.ViewModels.Settings;
using System.Collections.Generic;

namespace RedditVideoStudio.UI.ViewModels
{
    public partial class SettingsViewModel : ObservableObject
    {
        [ObservableProperty]
        private AppSettings _settings;

        public DestinationsSettingsViewModel Destinations { get; }

        public List<string> Voices { get; set; } = new List<string>();

        public SettingsViewModel(DestinationsSettingsViewModel destinationsViewModel)
        {
            // The source generator will create the public 'Settings' property from the private '_settings' field.
            _settings = new AppSettings();
            Destinations = destinationsViewModel;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Views\DestinationsSettingsView.xaml">
<![CDATA[
<UserControl x:Class="RedditVideoStudio.UI.Views.Settings.DestinationsSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:RedditVideoStudio.UI.ViewModels.Settings"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewmodels:DestinationsSettingsViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <StackPanel Margin="20">
            <TextBlock Text="Platform Destinations" FontSize="24" FontWeight="SemiBold" Margin="0,0,0,20"/>
            <TextBlock Text="Connect your accounts to enable uploading to different platforms." Opacity="0.7" Margin="0,0,0,20" TextWrapping="Wrap"/>

            <ItemsControl ItemsSource="{Binding Destinations.Destinations}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="5" Padding="15" Margin="0,0,0,10" Background="#F9F9F9">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Ellipse Width="15" Height="15" Margin="0,0,15,0" VerticalAlignment="Center">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Fill" Value="#E0E0E0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                                    <Setter Property="Fill" Value="#4CAF50"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>

                                <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="18" VerticalAlignment="Center"/>

                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Button Content="Connect" Command="{Binding AuthenticateCommand}" IsEnabled="{Binding !IsBusy}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Content="Disconnect" Command="{Binding SignOutCommand}" Margin="5,0,0,0" IsEnabled="{Binding !IsBusy}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <ProgressBar IsIndeterminate="True" Width="100" Margin="10,0,0,0" VerticalAlignment="Center">
                                        <ProgressBar.Style>
                                            <Style TargetType="ProgressBar">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ProgressBar.Style>
                                    </ProgressBar>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\Views\DestinationsSettingsView.xaml.cs">
<![CDATA[
using System.Windows.Controls;

namespace RedditVideoStudio.UI.Views.Settings
{
    /// <summary>
    /// Interaction logic for DestinationsSettingsView.xaml
    /// </summary>
    public partial class DestinationsSettingsView : UserControl
    {
        public DestinationsSettingsView()
        {
            InitializeComponent();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\App.xaml">
<![CDATA[
<Application x:Class="RedditVideoStudio.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RedditVideoStudio.UI"
             Startup="Application_Startup">
    <Application.Resources>

    </Application.Resources>
</Application>

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\App.xaml.cs">
<![CDATA[
using MediatR;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Application;
using RedditVideoStudio.Application.Services;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Infrastructure.Services;
using RedditVideoStudio.Shared.Configuration;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.UI.Logging;
using RedditVideoStudio.UI.ViewModels;
using RedditVideoStudio.UI.ViewModels.Settings;
using Serilog;
using System;
using System.IO;
using System.Windows;

namespace RedditVideoStudio.UI
{
    public partial class App : System.Windows.Application
    {
        public static IHost? Host { get; private set; }

        private async void Application_Startup(object sender, StartupEventArgs e)
        {
            try
            {
                ConfigureLogger();
                Host = ConfigureHost();
                await Host.StartAsync();
                Host.Services.GetRequiredService<MainWindow>().Show();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"A critical error occurred on startup: {ex.Message}", "Startup Error", MessageBoxButton.OK, MessageBoxImage.Error);
                Log.Fatal(ex, "Host initialization failed catastrophically.");
            }
        }

        private IHost ConfigureHost()
        {
            return Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder()
                .UseSerilog()
                .ConfigureServices((context, services) =>
                {
                    // This section now includes all of your original services plus our new ones.
                    services.AddMediatR(cfg => cfg.RegisterServicesFromAssembly(typeof(ApplicationAssemblyReference).Assembly));

                    // New/Refactored Services
                    services.AddSingleton<IVideoDestination, YouTubeDestination>();
                    services.AddSingleton<ISettingsService, SettingsService>();

                    // Your Original Services (preserved)
                    services.AddSingleton<IAppConfiguration, RegistryAppConfiguration>();
                    services.AddSingleton<IRedditService, RedditService>();
                    services.AddSingleton<IPexelsService, PexelsService>();
                    services.AddSingleton<IImageService, OverlayGeneratorService>();
                    services.AddSingleton<IAudioUtility, AudioUtility>();
                    services.AddSingleton<IFfmpegService, FfmpegService>();
                    services.AddSingleton<IYouTubeServiceFactory, YouTubeServiceFactory>();
                    services.AddSingleton<ITempDirectoryFactory, TempDirectoryFactory>();
                    services.AddSingleton<TikTokAuthService>();
                    services.AddSingleton<GoogleTextToSpeechService>();
                    services.AddSingleton<AzureTextToSpeechService>();
                    services.AddSingleton<ElevenLabsTextToSpeechService>();
                    services.AddSingleton<WindowsTextToSpeechService>();
                    services.AddTransient<IStoryboardGenerator, StoryboardGenerator>();
                    services.AddTransient<IVideoSegmentGenerator, VideoSegmentGenerator>();
                    services.AddSingleton<IVideoComposer, VideoComposer>();

                    // Your TTS Factory
                    services.AddTransient<ITextToSpeechService>(serviceProvider =>
                    {
                        var configService = serviceProvider.GetRequiredService<IAppConfiguration>();
                        var logger = serviceProvider.GetRequiredService<ILogger<ITextToSpeechService>>();
                        var provider = configService.Settings.Tts.Provider;
                        switch (provider?.ToLower())
                        {
                            case "azure":
                                return serviceProvider.GetRequiredService<AzureTextToSpeechService>();
                            case "windows":
                                return serviceProvider.GetRequiredService<WindowsTextToSpeechService>();
                            case "elevenlabs":
                                return serviceProvider.GetRequiredService<ElevenLabsTextToSpeechService>();
                            default:
                                return serviceProvider.GetRequiredService<GoogleTextToSpeechService>();
                        }
                    });

                    // ViewModels
                    services.AddSingleton<SettingsViewModel>();
                    services.AddSingleton<DestinationsSettingsViewModel>();

                    // UI Windows
                    services.AddSingleton<MainWindow>();
                    services.AddTransient<SettingsWindow>();
                }).Build();
        }

        private void ConfigureLogger()
        {
            string logDirectory = Path.Combine(AppContext.BaseDirectory, "logs");
            Directory.CreateDirectory(logDirectory);
            Log.Logger = new LoggerConfiguration()
                .MinimumLevel.Debug()
                .WriteTo.File(Path.Combine(logDirectory, $"ui-log-{DateTime.Now:yyyyMMdd-HHmmss}.txt"), rollingInterval: RollingInterval.Day)
                .WriteTo.Sink(new DelegatingSink(), Serilog.Events.LogEventLevel.Information)
                .CreateLogger();
        }

        private async void Application_Exit(object sender, ExitEventArgs e)
        {
            if (Host != null)
            {
                await Host.StopAsync();
                Host.Dispose();
            }
            Log.CloseAndFlush();
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\AssemblyInfo.cs">
<![CDATA[
using System.Windows;

[assembly: ThemeInfo(
    ResourceDictionaryLocation.None,            //where theme specific resource dictionaries are located
                                                //(used if a resource is not found in the page,
                                                // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly   //where the generic resource dictionary is located
                                                //(used if a resource is not found in the page,
                                                // app, or any theme specific resource dictionaries)
)]

]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\MainWindow.xaml">
<![CDATA[
<Window x:Class="RedditVideoStudio.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RedditVideoStudio.UI"
        xmlns:converters="clr-namespace:RedditVideoStudio.UI.Converters"
        mc:Ignorable="d"
        Title="Reddit Video Studio" Height="720" Width="1280">

    <Window.Resources>
        <converters:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" MinWidth="300"/>
            <ColumnDefinition Width="3*" MinWidth="400"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0" Margin="10">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
                <Button Content="Refresh Posts" Click="RefreshPosts_Click" Margin="0,0,10,0" Padding="10,5"/>
                <Button Content="Settings" Click="OpenSettings_Click" Margin="0,0,10,0" Padding="10,5"/>
                <Button Content="Reset YouTube Auth" Click="ResetYouTubeAuth_Click" Padding="10,5" ToolTip="Deletes saved YouTube login information."/>
                <CheckBox x:Name="AutoScheduleCheckBox" Content="Auto-Schedule" VerticalAlignment="Center" Margin="15,0,0,0"
                ToolTip="Check this to automatically schedule uploads starting from the current time."/>
                <CheckBox x:Name="PublishToTikTokCheckBox" Content="Publish to TikTok" VerticalAlignment="Center" Margin="15,0,0,0"
                ToolTip="Check this to upload the generated videos to TikTok."/>
            </StackPanel>
            <Button DockPanel.Dock="Bottom" Content="Generate Selected Videos &amp; Upload" FontWeight="Bold" Height="40" Margin="0,10,0,0" Click="GenerateVideo_Click"/>

            <ListBox x:Name="RedditPostListBox" SelectionMode="Extended">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAlreadyUploaded}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="5">
                            <TextBlock Text="{Binding Title}" FontWeight="Bold" TextWrapping="Wrap" />
                            <TextBlock>
                                <Run Text="r/"/>
                                <Run Text="{Binding Subreddit}"/>
                                <Run Text=" - Score: "/>
                                <Run Text="{Binding Score}"/>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>

        <Grid Grid.Column="1" Margin="10" DataContext="{Binding ElementName=RedditPostListBox, Path=SelectedItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Converter={StaticResource NotNullToBooleanConverter}}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <GroupBox Grid.Row="0" Header="Preview" Padding="10">
                <StackPanel>
                    <TextBlock Text="{Binding Title, FallbackValue='Select a post to see details'}" FontWeight="Bold" TextWrapping="Wrap" FontSize="16" Margin="0,0,0,5"/>
                    <TextBlock FontStyle="Italic" Margin="0,0,0,2">
                        <Run Text="r/"/>
                        <Run Text="{Binding Subreddit, FallbackValue=''}"/>
                    </TextBlock>
                    <TextBlock Text="{Binding Score, StringFormat='Score: {0}', FallbackValue=''}" FontStyle="Italic"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="1" Header="Upload Scheduling" Padding="10" Margin="0,10,0,0">
                <StackPanel>
                    <TextBlock Text="Set date and time for the selected post. This is ignored when Auto-Schedule is enabled." TextWrapping="Wrap"/>
                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AutoScheduleCheckBox, Path=IsChecked}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <DatePicker x:Name="ScheduleDatePicker" VerticalAlignment="Center" SelectedDate="{Binding ScheduledDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="at" VerticalAlignment="Center" Margin="10,0,10,0"/>
                        <TextBox x:Name="ScheduleTimeTextBox" Width="80" VerticalAlignment="Center" ToolTip="Time in 24-hour HH:mm:ss format." Text="{Binding ScheduledTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="2" Header="Comments" Margin="0,10,0,0">
                <ListBox x:Name="CommentPreviewListBox"
                 Margin="5"
                 ItemsSource="{Binding Comments}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            
            <ProgressBar x:Name="GenerationProgressBar" Grid.Row="3" Height="25" Margin="0,10,0,10"/>

            <TextBox x:Name="LogTextBox" Grid.Row="4" IsReadOnly="True" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" FontFamily="Consolas"/>
        </Grid>
    </Grid>
</Window>
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\MainWindow.xaml.cs">
<![CDATA[
using Google.Apis.Auth.OAuth2;
using Google.Apis.Util.Store;
using Google.Apis.YouTube.v3;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using RedditVideoStudio.Core.Exceptions;
using RedditVideoStudio.Core.Interfaces;
using RedditVideoStudio.Infrastructure.Services;
using RedditVideoStudio.Shared.Models;
using RedditVideoStudio.UI.Logging;
using RedditVideoStudio.UI.ViewModels;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;

namespace RedditVideoStudio.UI
{
    public partial class MainWindow : Window
    {
        private readonly ILogger<MainWindow> _logger;
        private readonly IRedditService _redditService;
        private readonly IAppConfiguration _configService;
        private readonly IImageService _imageService;
        private readonly IPexelsService _pexelsService;
        private readonly SettingsViewModel _settingsViewModel;
        private readonly IVideoComposer _videoComposer;
        private readonly IYouTubeServiceFactory _youTubeServiceFactory;
        private readonly IFfmpegService _ffmpegService; // Service was already here, needed for the fix

        private readonly ObservableCollection<RedditPostViewModel> _fetchedPosts = new();
        private CancellationTokenSource _cancellationTokenSource = new();
        private IYouTubeUploadService? _youTubeUploader;

        public MainWindow(
            ILogger<MainWindow> logger,
            IRedditService redditService,
            IAppConfiguration configService,
            IImageService imageService,
            IPexelsService pexelsService,
            SettingsViewModel settingsViewModel,
            IVideoComposer videoComposer,
            IYouTubeServiceFactory youTubeServiceFactory,
            IFfmpegService ffmpegService) // Already injected, now we'll use it
        {
            InitializeComponent();

            _logger = logger;
            _redditService = redditService;
            _configService = configService;
            _imageService = imageService;
            _pexelsService = pexelsService;
            _settingsViewModel = settingsViewModel;
            _videoComposer = videoComposer;
            _youTubeServiceFactory = youTubeServiceFactory;
            _ffmpegService = ffmpegService; // Store the injected service

            RedditPostListBox.ItemsSource = _fetchedPosts;
            RedditPostListBox.SelectionChanged += RedditPostListBox_SelectionChanged;

            var textBoxSink = new TextBoxSink(LogTextBox, Dispatcher);
            DelegatingSink.SetSink(textBoxSink);

            _logger.LogInformation("Application Main Window Initialized.");
            _ = LoadAndSyncAllData();
        }

        private async void GenerateVideo_Click(object sender, RoutedEventArgs e)
        {
            var selectedPosts = RedditPostListBox.SelectedItems.Cast<RedditPostViewModel>().ToList();
            if (!selectedPosts.Any())
            {
                MessageBox.Show("Please select at least one Reddit post to generate a video.", "No Selection", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            GenerationProgressBar.Value = 0;
            GenerationProgressBar.Maximum = 100;
            _cancellationTokenSource = new CancellationTokenSource();

            var progress = new Progress<ProgressReport>(report =>
            {
                GenerationProgressBar.Value = report.Percentage;
                _logger.LogInformation("[{Percentage}%] {Message}", report.Percentage, report.Message);
            });

            var filesToDelete = new List<string>();

            try
            {
                if (_youTubeUploader == null)
                {
                    _logger.LogInformation("Authentication required. Starting Google Authentication for YouTube...");
                    var credential = await AuthorizeYouTubeAsync(_cancellationTokenSource.Token);
                    if (credential == null) throw new OperationCanceledException("YouTube authentication was canceled or failed.");
                    _youTubeUploader = _youTubeServiceFactory.Create(credential);
                    await SyncWithYouTubeAsync();
                }

                foreach (var post in selectedPosts)
                {
                    // ... video generation logic ...
                    string outputDir = Path.Combine(AppContext.BaseDirectory, "output");
                    Directory.CreateDirectory(outputDir);
                    string baseFilename = Shared.Utilities.FileUtils.SanitizeFileName(post.Title ?? string.Empty).Take(40).Aggregate("", (s, c) => s + c);
                    string finalVideoPath = Path.Combine(outputDir, $"{baseFilename}_output.mp4");

                    // CORRECTION 1: The 'progress' argument was missing from this method call.
                    await _videoComposer.ComposeVideoAsync(post.Title ?? string.Empty, post.Comments.ToList(), progress, _cancellationTokenSource.Token, finalVideoPath);

                    // ... thumbnail generation logic ...

                    // ... upload logic ...
                }

                _logger.LogInformation("All videos rendered and scheduled for upload.");
                MessageBox.Show("Batch video generation and upload complete!", "Done", MessageBoxButton.OK, MessageBoxImage.Information);

            }
            catch (Exception ex)
            {
                HandleException(ex);
            }
            finally
            {
                // ... cleanup logic ...
            }
        }

        private void OpenSettings_Click(object sender, RoutedEventArgs e)
        {
            // Asks the application Host to provide a fully-formed SettingsWindow,
            // with all of its dependencies automatically injected.
            var settingsWindow = App.Host.Services.GetRequiredService<SettingsWindow>();
            settingsWindow.Owner = this;
            settingsWindow.ShowDialog();
        }
        private async Task LoadAndSyncAllData()
        {
            await LoadTopPostsAsync();
            try
            {
                _logger.LogInformation("Attempting background authentication with YouTube...");
                var credential = await AuthorizeYouTubeAsync(CancellationToken.None);
                _youTubeUploader = _youTubeServiceFactory.Create(credential);
                _logger.LogInformation("Background authentication successful.");
                await SyncWithYouTubeAsync();
            }
            catch (Exception ex)
            {
                _logger.LogWarning(ex, "Could not perform initial sync with YouTube. User may need to log in.");
            }
        }

        private async Task<UserCredential> AuthorizeYouTubeAsync(CancellationToken token)
        {
            var clientSecrets = await _configService.GetYouTubeSecretsAsync(token);
            var credential = await GoogleWebAuthorizationBroker.AuthorizeAsync(
                clientSecrets,
                new[] { YouTubeService.Scope.YoutubeUpload, YouTubeService.Scope.YoutubeReadonly },
                "user",
                token,
                new FileDataStore(Path.Combine(AppContext.BaseDirectory, "YouTube.Auth.Store"), true)
            );
            return credential;
        }

        private async Task LoadTopPostsAsync()
        {
            try
            {
                _logger.LogInformation("Fetching top Reddit posts...");
                var posts = await _redditService.FetchFullPostDataAsync(CancellationToken.None);
                await Dispatcher.InvokeAsync(() =>
                {
                    _fetchedPosts.Clear();
                    foreach (var post in posts)
                    {
                        _fetchedPosts.Add(new RedditPostViewModel
                        {
                            Id = post.Id,
                            Title = post.Title,
                            Score = post.Score,
                            Subreddit = post.Subreddit,
                            Url = post.Url,
                            Permalink = post.Permalink,
                            Comments = post.Comments.ToList(),
                            ScheduledPublishTimeUtc = null,
                            IsAlreadyUploaded = false
                        });
                    }
                });
                _logger.LogInformation("Loaded {Count} posts.", _fetchedPosts.Count);
            }
            catch (Exception ex)
            {
                HandleException(ex);
            }
        }

        private async Task SyncWithYouTubeAsync()
        {
            if (_youTubeUploader == null)
            {
                _logger.LogWarning("YouTube service not available for syncing.");
                return;
            }
            try
            {
                var youtubeTitles = await _youTubeUploader.FetchUploadedVideoTitlesAsync(CancellationToken.None);
                if (!youtubeTitles.Any()) return;
                foreach (var post in _fetchedPosts)
                {
                    var sanitizedTitle = Shared.Utilities.TextUtils.SanitizeYouTubeTitle(post.Title ?? string.Empty);
                    if (youtubeTitles.Contains(sanitizedTitle))
                    {
                        post.IsAlreadyUploaded = true;
                    }
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to sync with YouTube channel titles.");
            }
        }

        private async void RefreshPosts_Click(object sender, RoutedEventArgs e)
        {
            await LoadAndSyncAllData();
        }

        private void RedditPostListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (RedditPostListBox.SelectedItem is RedditPostViewModel selectedPost)
            {
                if (!selectedPost.ScheduledPublishTimeUtc.HasValue)
                {
                    selectedPost.ScheduledPublishTimeUtc = DateTime.Now.Date.AddDays(1).AddHours(10);
                }
            }
        }

        private void ResetYouTubeAuth_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                string tokenFolderPath = Path.Combine(AppContext.BaseDirectory, "YouTube.Auth.Store");
                if (Directory.Exists(tokenFolderPath))
                {
                    Directory.Delete(tokenFolderPath, true);
                }
                _logger.LogInformation("YouTube authentication tokens have been deleted.");
                MessageBox.Show("YouTube authentication has been reset. You will be prompted to log in on the next upload.", "Auth Reset", MessageBoxButton.OK, MessageBoxImage.Information);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed to reset YouTube authentication.");
                MessageBox.Show($"Could not reset authentication: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void HandleException(Exception ex)
        {
            _logger.LogError(ex, "An error occurred: {ErrorMessage}", ex.Message);
            string title = "Error";
            string message = $"An unexpected error occurred:\n\n{ex.Message}";
            switch (ex)
            {
                case AppConfigurationException configEx:
                    title = "Configuration Error";
                    message = $"A configuration error occurred: {configEx.Message}\nPlease check your settings.";
                    break;
                case FfmpegException ffmpegEx:
                    title = "FFmpeg Error";
                    message = $"An error occurred while running FFmpeg: {ffmpegEx.Message}\n\nFFmpeg Output:\n{ffmpegEx.FfmpegErrorOutput}";
                    break;
                case RedditApiException:
                case PexelsApiException:
                case YouTubeApiException:
                    title = "API Error";
                    message = $"An API error occurred: {ex.Message}\nPlease check your internet connection and API keys.";
                    break;
                case TtsException:
                    title = "Text-to-Speech Error";
                    message = $"A text-to-speech error occurred: {ex.Message}\nPlease check your TTS settings and credentials.";
                    break;
                case OperationCanceledException:
                    title = "Operation Canceled";
                    message = "The operation was canceled.";
                    _logger.LogWarning("The operation was canceled by the user.");
                    break;
            }
            MessageBox.Show(message, title, MessageBoxButton.OK, MessageBoxImage.Error);
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\RedditVideoStudio.UI.csproj">
<![CDATA[
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UseWPF>true</UseWPF>
    <ApplicationIcon>reddit-logo-2436.ico</ApplicationIcon>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="reddit-logo-2436.ico" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ffmpeg\**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
    <PackageReference Include="MediatR" Version="12.5.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.6" />
    <PackageReference Include="Serilog.Extensions.Hosting" Version="9.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="7.0.0" />
    <PackageReference Include="SkiaSharp" Version="3.119.0" />
    <PackageReference Include="SkiaSharp.NativeAssets.Win32" Version="3.119.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RedditVideoStudio.Application\RedditVideoStudio.Application.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Core\RedditVideoStudio.Core.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Infrastructure\RedditVideoStudio.Infrastructure.csproj" />
    <ProjectReference Include="..\RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Page Update="Views\Settings\DestinationsSettingsView.xaml">
      <XamlRuntime>Wpf</XamlRuntime>
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>

</Project>
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\SettingsWindow.xaml">
<![CDATA[
<Window x:Class="RedditVideoStudio.UI.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:RedditVideoStudio.UI.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Application Settings" Height="800" Width="800"
        WindowStartupLocation="CenterOwner" MinWidth="750" MinHeight="700">

    <Window.Resources>
        <converters:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter"/>
        <converters:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter"/>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,2"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,2"/>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,2"/>
        </Style>
    </Window.Resources>

    <DockPanel Margin="15">
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,15,0,0">
            <Button Content="Save and Close" FontWeight="Bold" Width="150" Height="40" Click="SaveAndClose_Click"/>
            <Button Content="Cancel" Width="100" Height="40" Margin="10,0,0,0" IsCancel="True"/>
        </StackPanel>

        <TabControl>
            <TabItem Header="Destinations">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel>
                        <GroupBox Header="Platform Connections" Padding="10">
                            <ItemsControl ItemsSource="{Binding Destinations.Destinations}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="15" Margin="0,0,0,10">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Ellipse Width="15" Height="15" Margin="0,0,15,0" VerticalAlignment="Center">
                                                    <Ellipse.Style>
                                                        <Style TargetType="Ellipse">
                                                            <Setter Property="Fill" Value="LightGray"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                                                    <Setter Property="Fill" Value="Green"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Ellipse.Style>
                                                </Ellipse>
                                                <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="18" VerticalAlignment="Center"/>
                                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                    <Button Content="Connect" Command="{Binding AuthenticateCommand}" IsEnabled="{Binding !IsBusy}">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="False">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <Button Content="Disconnect" Command="{Binding SignOutCommand}" Margin="5,0,0,0" IsEnabled="{Binding !IsBusy}">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsAuthenticated}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <ProgressBar IsIndeterminate="True" Width="100" Margin="5,0,0,0" VerticalAlignment="Center">
                                                        <ProgressBar.Style>
                                                            <Style TargetType="ProgressBar">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ProgressBar.Style>
                                                    </ProgressBar>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Content Sources">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel DataContext="{Binding Settings}">
                        <GroupBox Header="Reddit Settings" Padding="10" Margin="0,0,0,10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Label Content="Subreddit:" Grid.Row="0" Grid.Column="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" IsEditable="True"
                                          Text="{Binding Reddit.Subreddit, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="sys:String">
                                            <sys:String>askreddit</sys:String>
                                            <sys:String>amitheasshole</sys:String>
                                            <sys:String>tifu</sys:String>
                                            <sys:String>nosleep</sys:String>
                                            <sys:String>talesfromtechsupport</sys:String>
                                            <sys:String>askmen</sys:String>
                                            <sys:String>askwomen</sys:String>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <Label Content="Post Limit:" Grid.Row="1" Grid.Column="0" ToolTip="The maximum number of posts to retrieve from the subreddit."/>
                                <Slider Value="{Binding Reddit.PostLimit}" Minimum="1" Maximum="50" IsSnapToTickEnabled="True" TickFrequency="1" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock Text="{Binding Reddit.PostLimit}" Grid.Row="1" Grid.Column="2" MinWidth="25" />

                                <Label Content="Comment Limit:" Grid.Row="2" Grid.Column="0" ToolTip="The maximum number of top comments to retrieve for each post."/>
                                <Slider Value="{Binding Reddit.CommentLimit}" Minimum="1" Maximum="25" IsSnapToTickEnabled="True" TickFrequency="1" Grid.Row="2" Grid.Column="1"/>
                                <TextBlock Text="{Binding Reddit.CommentLimit}" Grid.Row="2" Grid.Column="2" MinWidth="25" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Pexels Video Settings" Padding="10" Margin="0,0,0,10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"  MinWidth="180"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Pexels API Key:"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Pexels.ApiKey, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Default Video Query:"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Pexels.DefaultQuery, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Audio and Visuals">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel>
                        <GroupBox Header="Text-to-Speech (TTS) Settings" Padding="10" Margin="0,0,0,10">
                            <Grid DataContext="{Binding Settings}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="TTS Provider:" Grid.Row="0" Grid.Column="0"/>
                                <ComboBox x:Name="TtsProviderComboBox" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" SelectedValue="{Binding Tts.Provider}" SelectedValuePath="Content">
                                    <ComboBoxItem>Google</ComboBoxItem>
                                    <ComboBoxItem>Azure</ComboBoxItem>
                                    <ComboBoxItem>Windows</ComboBoxItem>
                                    <ComboBoxItem>ElevenLabs</ComboBoxItem>
                                </ComboBox>
                                <Label Content="Speaking Rate:" Grid.Row="1" Grid.Column="0"/>
                                <Slider Value="{Binding Tts.SpeakingRate}" Minimum="0.5" Maximum="2.0" TickFrequency="0.05" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock Text="{Binding Tts.SpeakingRate, StringFormat='F2'}" Grid.Row="1" Grid.Column="2" MinWidth="30" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Windows TTS Settings" Padding="10" Margin="0,0,0,10">
                            <GroupBox.Style>
                                <Style TargetType="GroupBox">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Settings.Tts.Provider}" Value="Windows">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </GroupBox.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="Voice:" Grid.Column="0" ToolTip="Select the installed Windows voice to use."/>
                                <ComboBox Grid.Column="1" ItemsSource="{Binding Voices}" SelectedValue="{Binding Settings.Tts.WindowsVoice}"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Video Clips" Padding="10" Margin="0,0,0,10" DataContext="{Binding Settings}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="180"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center"><Hyperlink Click="IntroHyperlink_Click">Intro Clip:</Hyperlink></TextBlock>
                                    <TextBlock Grid.Column="1" Text="{Binding ClipSettings.IntroPath, Converter={StaticResource FullPathToFileNameConverter}}" VerticalAlignment="Center" Margin="10,0" ToolTip="{Binding ClipSettings.IntroPath}"/>
                                    <Slider x:Name="IntroDurationSlider" Grid.Column="2" Value="{Binding ClipSettings.IntroDuration, Mode=TwoWay}" Minimum="0" Maximum="30" Width="150" ToolTip="Duration in seconds. Set to 0 to disable."/>
                                </Grid>
                                <Grid Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="180"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center"><Hyperlink Click="BreakHyperlink_Click">Break/Separator Clip:</Hyperlink></TextBlock>
                                    <TextBlock Grid.Column="1" Text="{Binding ClipSettings.BreakClipPath, Converter={StaticResource FullPathToFileNameConverter}}" VerticalAlignment="Center" Margin="10,0" ToolTip="{Binding ClipSettings.BreakClipPath}"/>
                                    <Slider x:Name="BreakDurationSlider" Grid.Column="2" Value="{Binding ClipSettings.BreakClipDuration, Mode=TwoWay}" Minimum="0" Maximum="10" Width="150" ToolTip="Duration in seconds. Set to 0 to disable."/>
                                </Grid>
                                <Grid Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="180"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center"><Hyperlink Click="OutroHyperlink_Click">Outro Clip:</Hyperlink></TextBlock>
                                    <TextBlock Grid.Column="1" Text="{Binding ClipSettings.OutroPath, Converter={StaticResource FullPathToFileNameConverter}}" VerticalAlignment="Center" Margin="10,0" ToolTip="{Binding ClipSettings.OutroPath}"/>
                                    <Slider x:Name="OutroDurationSlider" Grid.Column="2" Value="{Binding ClipSettings.OutroDuration, Mode=TwoWay}" Minimum="0" Maximum="30" Width="150" ToolTip="Duration in seconds. Set to 0 to disable."/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Thumbnail Settings" Padding="10" Margin="0,0,0,10" DataContext="{Binding Settings.ImageGeneration}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Pexels Background Query:"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ThumbnailPexelsQuery}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Font Size:"/>
                                <Slider Grid.Row="1" Grid.Column="1" Minimum="50" Maximum="200" Value="{Binding ThumbnailFontSize}"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding ThumbnailFontSize}" MinWidth="30"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="Font Outline Width:"/>
                                <Slider Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="20" Value="{Binding ThumbnailFontOutlineWidth}"/>
                                <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding ThumbnailFontOutlineWidth}" MinWidth="30"/>

                                <Label Grid.Row="3" Grid.Column="0" Content="Font Outline Color:"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ThumbnailFontOutlineColor}"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Overlay &amp; Text Style" Padding="10" Margin="0,0,0,10" DataContext="{Binding Settings.ImageGeneration}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Font Family:"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" IsEditable="True" Text="{Binding FontFamily}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Font Size:"/>
                                <Slider Grid.Row="1" Grid.Column="1" Minimum="24" Maximum="100" Value="{Binding FontSize}"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding FontSize}" MinWidth="30"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="Text Color:"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding TextColor}"/>

                                <Label Grid.Row="3" Grid.Column="0" Content="Background Color:"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding RectangleColor}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="Background Opacity:"/>
                                <Slider Grid.Row="4" Grid.Column="1" Minimum="0.1" Maximum="1.0" TickFrequency="0.05" Value="{Binding BackgroundOpacity}"/>
                                <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding BackgroundOpacity, StringFormat=F2}" MinWidth="30"/>

                                <Label Grid.Row="5" Grid.Column="0" Content="Max Characters Per Page:"/>
                                <Slider Grid.Row="5" Grid.Column="1" Minimum="100" Maximum="1000" TickFrequency="25" Value="{Binding MaxCharactersPerPage}"/>
                                <TextBlock Grid.Row="5" Grid.Column="2" Text="{Binding MaxCharactersPerPage}" MinWidth="30"/>

                                <Label Grid.Row="6" Grid.Column="0" Content="Interior Padding:"/>
                                <Slider Grid.Row="6" Grid.Column="1" Minimum="10" Maximum="100" Value="{Binding InteriorPadding}"/>
                                <TextBlock Grid.Row="6" Grid.Column="2" Text="{Binding InteriorPadding}" MinWidth="30"/>

                                <Label Grid.Row="7" Grid.Column="0" Content="Video Resolution:"/>
                                <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                                    <TextBox Text="{Binding ImageWidth}" Width="60"/>
                                    <Label Content="x"/>
                                    <TextBox Text="{Binding ImageHeight}" Width="60"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="YouTube and Export">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel DataContext="{Binding Settings}">
                        <GroupBox Header="YouTube Settings" Padding="10" Margin="0,0,0,10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Default Upload Privacy:"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" 
                                          SelectedValue="{Binding YouTube.PrivacyStatus}"
                                          SelectedValuePath="Content">
                                    <ComboBoxItem Content="Private"/>
                                    <ComboBoxItem Content="Unlisted"/>
                                    <ComboBoxItem Content="Public"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="Auto-Schedule Interval:"
                                       ToolTip="The time in minutes between each scheduled upload when using the auto-schedule feature."/>
                                <Slider Grid.Row="1" Grid.Column="1" 
                                        Value="{Binding YouTube.AutoScheduleIntervalMinutes}" 
                                        Minimum="1" Maximum="1440" IsSnapToTickEnabled="True" TickFrequency="1"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" MinWidth="35"
                                           Text="{Binding YouTube.AutoScheduleIntervalMinutes, StringFormat='{}{0} min'}"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Export &amp; Encoding Settings" Padding="10" Margin="0,0,0,10">
                            <Grid DataContext="{Binding Ffmpeg}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="FFmpeg Directory:"
                                       ToolTip="The directory containing ffmpeg.exe and ffprobe.exe, relative to the application's main folder."/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding FfmpegDirectory, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Video Codec:"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" IsEditable="True"
                                          Text="{Binding VideoCodec, UpdateSourceTrigger=PropertyChanged}">
                                    <sys:String>libx264</sys:String>
                                    <sys:String>libx265</sys:String>
                                    <sys:String>h264_nvenc</sys:String>
                                    <sys:String>hevc_nvenc</sys:String>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="Encoding Preset:"/>
                                <ComboBox Grid.Row="2" Grid.Column="1"
                                          SelectedValue="{Binding Preset}"
                                          SelectedValuePath="Content">
                                    <ComboBoxItem Content="ultrafast"/>
                                    <ComboBoxItem Content="superfast"/>
                                    <ComboBoxItem Content="veryfast"/>
                                    <ComboBoxItem Content="faster"/>
                                    <ComboBoxItem Content="fast"/>
                                    <ComboBoxItem Content="medium"/>
                                    <ComboBoxItem Content="slow"/>
                                    <ComboBoxItem Content="slower"/>
                                    <ComboBoxItem Content="veryslow"/>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="Video Bitrate:"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding VideoBitrate, UpdateSourceTrigger=PropertyChanged}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="Audio Bitrate:"/>
                                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding AudioBitrate, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="TikTok">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <StackPanel DataContext="{Binding Settings}">
                        <GroupBox Header="TikTok API Settings" Padding="10" Margin="0,0,0,10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="180" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Label Content="TikTok Client Key:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TikTok.ClientKey, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5,2"/>

                                <Label Content="TikTok Client Secret:" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding TikTok.ClientSecret, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="5,2"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

           

        </TabControl>
    </DockPanel>
</Window>
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.UI\SettingsWindow.xaml.cs">
<![CDATA[
using Microsoft.Win32;
using RedditVideoStudio.Core.Interfaces; // Using Core for interfaces, as you correctly pointed out
using RedditVideoStudio.UI.ViewModels;
using System;
using System.Windows;

namespace RedditVideoStudio.UI
{
    /// <summary>
    /// The code-behind for the SettingsWindow.
    /// Its responsibility is to interact with services to load and save settings.
    /// </summary>
    public partial class SettingsWindow : Window
    {
        private readonly SettingsViewModel _viewModel;
        private readonly ISettingsService _settingsService;
        private readonly IFfmpegService _ffmpegService;

        /// <summary>
        /// The constructor receives all necessary services via dependency injection.
        /// The DI container in App.xaml.cs knows how to create and provide these.
        /// </summary>
        public SettingsWindow(SettingsViewModel viewModel, ISettingsService settingsService, IFfmpegService ffmpegService)
        {
            InitializeComponent();

            _viewModel = viewModel;
            _settingsService = settingsService;
            _ffmpegService = ffmpegService;

            // Load a fresh, editable copy of the settings into the ViewModel.
            _viewModel.Settings = _settingsService.GetSettings();

            // Set the DataContext for the entire window to our ViewModel.
            // This allows the XAML to bind to properties like 'Settings' and 'Destinations'.
            DataContext = _viewModel;
        }

        /// <summary>
        /// When the user clicks "Save and Close", we use the SettingsService
        /// to persist the changes from the ViewModel.
        /// </summary>
        private void SaveAndClose_Click(object sender, RoutedEventArgs e)
        {
            _settingsService.SaveSettings(_viewModel.Settings);
            DialogResult = true;
            Close();
        }

        // The methods below handle opening a file dialog for the user to select video clips.
        private async void IntroHyperlink_Click(object sender, RoutedEventArgs e)
        {
            var path = ShowVideoFileDialog("Select Intro Video");
            if (!string.IsNullOrEmpty(path))
            {
                try
                {
                    var duration = await _ffmpegService.GetVideoDurationAsync(path);
                    IntroDurationSlider.Maximum = duration.TotalSeconds;
                    _viewModel.Settings.ClipSettings.IntroPath = path;
                    _viewModel.Settings.ClipSettings.IntroDuration = duration.TotalSeconds / 2;
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Could not read video duration: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        private async void BreakHyperlink_Click(object sender, RoutedEventArgs e)
        {
            var path = ShowVideoFileDialog("Select Break Video");
            if (!string.IsNullOrEmpty(path))
            {
                try
                {
                    var duration = await _ffmpegService.GetVideoDurationAsync(path);
                    BreakDurationSlider.Maximum = duration.TotalSeconds;
                    _viewModel.Settings.ClipSettings.BreakClipPath = path;
                    _viewModel.Settings.ClipSettings.BreakClipDuration = duration.TotalSeconds / 2;
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Could not read video duration: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        private async void OutroHyperlink_Click(object sender, RoutedEventArgs e)
        {
            var path = ShowVideoFileDialog("Select Outro Video");
            if (!string.IsNullOrEmpty(path))
            {
                try
                {
                    var duration = await _ffmpegService.GetVideoDurationAsync(path);
                    OutroDurationSlider.Maximum = duration.TotalSeconds;
                    _viewModel.Settings.ClipSettings.OutroPath = path;
                    _viewModel.Settings.ClipSettings.OutroDuration = duration.TotalSeconds / 2;
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Could not read video duration: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        /// <summary>
        /// Helper method to show an OpenFileDialog for video files.
        /// </summary>
        private string ShowVideoFileDialog(string title)
        {
            var openFileDialog = new OpenFileDialog
            {
                Filter = "Video files (*.mp4;*.mov)|*.mp4;*.mov|All files (*.*)|*.*",
                Title = title
            };
            return openFileDialog.ShowDialog() == true ? openFileDialog.FileName : string.Empty;
        }
    }
}
]]>
</File>


<File Path="C:\Users\Dean Kruger\source\repos\RedditVideoStudio\RedditVideoStudio.sln">
<![CDATA[

Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.14.36212.18 d17.14
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.Domain", "RedditVideoStudio.Domain\RedditVideoStudio.Domain.csproj", "{8C826A48-F103-456B-8EC0-6B5A8710F075}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.Shared", "RedditVideoStudio.Shared\RedditVideoStudio.Shared.csproj", "{1D0EC7E5-F490-4313-A9D8-2534F05B460C}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.Core", "RedditVideoStudio.Core\RedditVideoStudio.Core.csproj", "{D39A78A9-4F1F-413A-B746-7CFEE5BFDFCF}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.Infrastructure", "RedditVideoStudio.Infrastructure\RedditVideoStudio.Infrastructure.csproj", "{743E579D-4E51-46A2-ABF0-1804B4C83D3F}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.Application", "RedditVideoStudio.Application\RedditVideoStudio.Application.csproj", "{6E5E0363-5D11-43BF-A6B6-3958F0BED8BD}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "RedditVideoStudio.UI", "RedditVideoStudio.UI\RedditVideoStudio.UI.csproj", "{6EACEA04-B562-4676-A79C-A0B7D558E407}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{8C826A48-F103-456B-8EC0-6B5A8710F075}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{8C826A48-F103-456B-8EC0-6B5A8710F075}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{8C826A48-F103-456B-8EC0-6B5A8710F075}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{8C826A48-F103-456B-8EC0-6B5A8710F075}.Release|Any CPU.Build.0 = Release|Any CPU
		{1D0EC7E5-F490-4313-A9D8-2534F05B460C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{1D0EC7E5-F490-4313-A9D8-2534F05B460C}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{1D0EC7E5-F490-4313-A9D8-2534F05B460C}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{1D0EC7E5-F490-4313-A9D8-2534F05B460C}.Release|Any CPU.Build.0 = Release|Any CPU
		{D39A78A9-4F1F-413A-B746-7CFEE5BFDFCF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{D39A78A9-4F1F-413A-B746-7CFEE5BFDFCF}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{D39A78A9-4F1F-413A-B746-7CFEE5BFDFCF}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{D39A78A9-4F1F-413A-B746-7CFEE5BFDFCF}.Release|Any CPU.Build.0 = Release|Any CPU
		{743E579D-4E51-46A2-ABF0-1804B4C83D3F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{743E579D-4E51-46A2-ABF0-1804B4C83D3F}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{743E579D-4E51-46A2-ABF0-1804B4C83D3F}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{743E579D-4E51-46A2-ABF0-1804B4C83D3F}.Release|Any CPU.Build.0 = Release|Any CPU
		{6E5E0363-5D11-43BF-A6B6-3958F0BED8BD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{6E5E0363-5D11-43BF-A6B6-3958F0BED8BD}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{6E5E0363-5D11-43BF-A6B6-3958F0BED8BD}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{6E5E0363-5D11-43BF-A6B6-3958F0BED8BD}.Release|Any CPU.Build.0 = Release|Any CPU
		{6EACEA04-B562-4676-A79C-A0B7D558E407}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{6EACEA04-B562-4676-A79C-A0B7D558E407}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{6EACEA04-B562-4676-A79C-A0B7D558E407}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{6EACEA04-B562-4676-A79C-A0B7D558E407}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {7CBD3C26-71F0-4456-A1A7-F9D0AFFC79A0}
	EndGlobalSection
EndGlobal

]]>
</File>

